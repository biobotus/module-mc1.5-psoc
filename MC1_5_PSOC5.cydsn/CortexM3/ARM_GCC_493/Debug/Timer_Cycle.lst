ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"Timer_Cycle.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	Timer_Cycle_initVar
  19              		.bss
  20              		.type	Timer_Cycle_initVar, %object
  21              		.size	Timer_Cycle_initVar, 1
  22              	Timer_Cycle_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.Timer_Cycle_Init,"ax",%progbits
  25              		.align	2
  26              		.global	Timer_Cycle_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	Timer_Cycle_Init, %function
  30              	Timer_Cycle_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\Timer_Cycle.c"
   1:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/Timer_Cycle.c **** * File Name: Timer_Cycle.c
   3:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
   5:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Description:
   6:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  15:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Note:
  16:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  17:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/Timer_Cycle.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/Timer_Cycle.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/Timer_Cycle.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  24:.\Generated_Source\PSoC5/Timer_Cycle.c **** #include "Timer_Cycle.h"
  25:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 2


  26:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint8 Timer_Cycle_initVar = 0u;
  27:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  28:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  29:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_Init
  31:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  33:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
  34:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  36:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
  37:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
  38:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  39:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
  40:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
  41:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
  42:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_Init(void) 
  44:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(!Timer_Cycle_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/Timer_Cycle.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/Timer_Cycle.c ****             uint8 Timer_Cycle_interruptState;
  48:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  50:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (Timer_Cycle_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= Timer_Cycle_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  54:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_CONTROL2 &= ((uint8)(~Timer_Cycle_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  59:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_CONTROL3 &= ((uint8)(~Timer_Cycle_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  63:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/Timer_Cycle.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  69:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #if (CY_PSOC5A)
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 3


  71:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  76:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  82:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  84:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL2 |= Timer_Cycle_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  90:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 &= ((uint8)(~Timer_Cycle_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 |= Timer_Cycle_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  95:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 &= ((uint8)(~Timer_Cycle_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 |= Timer_Cycle_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
  99:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 Timer_Cycle_CONTROL3 |= Timer_Cycle_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 103:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 105:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_RT1 &= ((uint8)(~Timer_Cycle_RT1_MASK));
 107:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_RT1 |= Timer_Cycle_SYNC;
 108:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 109:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_RT1 &= ((uint8)(~Timer_Cycle_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_RT1 |= Timer_Cycle_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 113:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL2 |= Timer_Cycle_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 117:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_WritePeriod(Timer_Cycle_INIT_PERIOD);
  45              		.loc 1 118 0
  46 0006 4FF0FF30 		mov	r0, #-1
  47 000a FFF7FEFF 		bl	Timer_Cycle_WritePeriod
 119:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_WriteCounter(Timer_Cycle_INIT_PERIOD);
  48              		.loc 1 119 0
  49 000e 4FF0FF30 		mov	r0, #-1
  50 0012 FFF7FEFF 		bl	Timer_Cycle_WriteCounter
 120:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 121:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (Timer_Cycle_UsingHWCaptureCounter)/* Capture counter is enabled */
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 4


 122:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CAPTURE_COUNT_CTRL |= Timer_Cycle_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_SetCaptureCount(Timer_Cycle_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 126:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_SetCaptureMode(Timer_Cycle_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 131:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 if (0u == (Timer_Cycle_CONTROL & Timer_Cycle__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 {
 135:.\Generated_Source\PSoC5/Timer_Cycle.c ****                     Timer_Cycle_SetTriggerMode(Timer_Cycle_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/Timer_Cycle.c ****                 }
 137:.\Generated_Source\PSoC5/Timer_Cycle.c ****             #endif /* (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 140:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_interruptState = CyEnterCriticalSection();
  51              		.loc 1 142 0
  52 0016 FFF7FEFF 		bl	CyEnterCriticalSection
  53 001a 0346     		mov	r3, r0
  54 001c FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 144:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_STATUS_AUX_CTRL |= Timer_Cycle_STATUS_ACTL_INT_EN_MASK;
  55              		.loc 1 145 0
  56 001e 0A4A     		ldr	r2, .L2
  57 0020 094B     		ldr	r3, .L2
  58 0022 1B78     		ldrb	r3, [r3]
  59 0024 DBB2     		uxtb	r3, r3
  60 0026 43F01003 		orr	r3, r3, #16
  61 002a DBB2     		uxtb	r3, r3
  62 002c 1370     		strb	r3, [r2]
 146:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 147:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/Timer_Cycle.c ****         CyExitCriticalSection(Timer_Cycle_interruptState);
  63              		.loc 1 148 0
  64 002e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  65 0030 1846     		mov	r0, r3
  66 0032 FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 150:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_EnableTrigger();
 152:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/Timer_Cycle.c **** 		
 154:.\Generated_Source\PSoC5/Timer_Cycle.c **** 		
 155:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #if (Timer_Cycle_InterruptOnCaptureCount && !Timer_Cycle_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/Timer_Cycle.c ****             Timer_Cycle_SetInterruptCount(Timer_Cycle_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/Timer_Cycle.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 159:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_ClearFIFO();
  67              		.loc 1 159 0
  68 0036 FFF7FEFF 		bl	Timer_Cycle_ClearFIFO
 160:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Configure additional features of UDB implementation */
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 5


 161:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 162:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_SetInterruptMode(Timer_Cycle_INIT_INTERRUPT_MODE);
  69              		.loc 1 162 0
  70 003a 0020     		movs	r0, #0
  71 003c FFF7FEFF 		bl	Timer_Cycle_SetInterruptMode
 163:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
  72              		.loc 1 163 0
  73 0040 0837     		adds	r7, r7, #8
  74              		.cfi_def_cfa_offset 8
  75 0042 BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0044 80BD     		pop	{r7, pc}
  79              	.L3:
  80 0046 00BF     		.align	2
  81              	.L2:
  82 0048 97640040 		.word	1073767575
  83              		.cfi_endproc
  84              	.LFE0:
  85              		.size	Timer_Cycle_Init, .-Timer_Cycle_Init
  86              		.section	.text.Timer_Cycle_Enable,"ax",%progbits
  87              		.align	2
  88              		.global	Timer_Cycle_Enable
  89              		.thumb
  90              		.thumb_func
  91              		.type	Timer_Cycle_Enable, %function
  92              	Timer_Cycle_Enable:
  93              	.LFB1:
 164:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 165:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 166:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_Enable
 168:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 170:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 171:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 173:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 174:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 175:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 176:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 177:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 178:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 179:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_Enable(void) 
 181:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
  94              		.loc 1 181 0
  95              		.cfi_startproc
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 1, uses_anonymous_args = 0
  98              		@ link register save eliminated.
  99 0000 80B4     		push	{r7}
 100              		.cfi_def_cfa_offset 4
 101              		.cfi_offset 7, -4
 102 0002 00AF     		add	r7, sp, #0
 103              		.cfi_def_cfa_register 7
 182:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Globally Enable the Fixed Function Block chosen */
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 6


 183:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (Timer_Cycle_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_GLOBAL_ENABLE |= Timer_Cycle_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_GLOBAL_STBY_ENABLE |= Timer_Cycle_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 188:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED || Timer_Cycle_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL |= Timer_Cycle_CTRL_ENABLE;
 104              		.loc 1 190 0
 105 0004 054A     		ldr	r2, .L5
 106 0006 054B     		ldr	r3, .L5
 107 0008 1B78     		ldrb	r3, [r3]
 108 000a DBB2     		uxtb	r3, r3
 109 000c 63F07F03 		orn	r3, r3, #127
 110 0010 DBB2     		uxtb	r3, r3
 111 0012 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 112              		.loc 1 192 0
 113 0014 BD46     		mov	sp, r7
 114              		.cfi_def_cfa_register 13
 115              		@ sp needed
 116 0016 5DF8047B 		ldr	r7, [sp], #4
 117              		.cfi_restore 7
 118              		.cfi_def_cfa_offset 0
 119 001a 7047     		bx	lr
 120              	.L6:
 121              		.align	2
 122              	.L5:
 123 001c 74640040 		.word	1073767540
 124              		.cfi_endproc
 125              	.LFE1:
 126              		.size	Timer_Cycle_Enable, .-Timer_Cycle_Enable
 127              		.section	.text.Timer_Cycle_Start,"ax",%progbits
 128              		.align	2
 129              		.global	Timer_Cycle_Start
 130              		.thumb
 131              		.thumb_func
 132              		.type	Timer_Cycle_Start, %function
 133              	Timer_Cycle_Start:
 134              	.LFB2:
 193:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 194:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 195:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_Start
 197:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 199:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 200:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 204:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 205:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 206:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 207:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 208:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 7


 209:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 210:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Global variables:
 211:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Timer_Cycle_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/Timer_Cycle.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 214:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_Start(void) 
 216:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 135              		.loc 1 216 0
 136              		.cfi_startproc
 137              		@ args = 0, pretend = 0, frame = 0
 138              		@ frame_needed = 1, uses_anonymous_args = 0
 139 0000 80B5     		push	{r7, lr}
 140              		.cfi_def_cfa_offset 8
 141              		.cfi_offset 7, -8
 142              		.cfi_offset 14, -4
 143 0002 00AF     		add	r7, sp, #0
 144              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC5/Timer_Cycle.c ****     if(Timer_Cycle_initVar == 0u)
 145              		.loc 1 217 0
 146 0004 054B     		ldr	r3, .L9
 147 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 148 0008 002B     		cmp	r3, #0
 149 000a 04D1     		bne	.L8
 218:.\Generated_Source\PSoC5/Timer_Cycle.c ****     {
 219:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_Init();
 150              		.loc 1 219 0
 151 000c FFF7FEFF 		bl	Timer_Cycle_Init
 220:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 221:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_initVar = 1u;   /* Clear this bit for Initialization */
 152              		.loc 1 221 0
 153 0010 024B     		ldr	r3, .L9
 154 0012 0122     		movs	r2, #1
 155 0014 1A70     		strb	r2, [r3]
 156              	.L8:
 222:.\Generated_Source\PSoC5/Timer_Cycle.c ****     }
 223:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 224:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_Enable();
 157              		.loc 1 225 0
 158 0016 FFF7FEFF 		bl	Timer_Cycle_Enable
 226:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 159              		.loc 1 226 0
 160 001a 80BD     		pop	{r7, pc}
 161              	.L10:
 162              		.align	2
 163              	.L9:
 164 001c 00000000 		.word	Timer_Cycle_initVar
 165              		.cfi_endproc
 166              	.LFE2:
 167              		.size	Timer_Cycle_Start, .-Timer_Cycle_Start
 168              		.section	.text.Timer_Cycle_Stop,"ax",%progbits
 169              		.align	2
 170              		.global	Timer_Cycle_Stop
 171              		.thumb
 172              		.thumb_func
 173              		.type	Timer_Cycle_Stop, %function
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 8


 174              	Timer_Cycle_Stop:
 175              	.LFB3:
 227:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 228:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 229:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_Stop
 231:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 233:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 234:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 237:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 238:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 239:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 240:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 241:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 242:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 243:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/Timer_Cycle.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 246:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_Stop(void) 
 248:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 176              		.loc 1 248 0
 177              		.cfi_startproc
 178              		@ args = 0, pretend = 0, frame = 0
 179              		@ frame_needed = 1, uses_anonymous_args = 0
 180              		@ link register save eliminated.
 181 0000 80B4     		push	{r7}
 182              		.cfi_def_cfa_offset 4
 183              		.cfi_offset 7, -4
 184 0002 00AF     		add	r7, sp, #0
 185              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(!Timer_Cycle_UDB_CONTROL_REG_REMOVED || Timer_Cycle_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= ((uint8)(~Timer_Cycle_CTRL_ENABLE));
 186              		.loc 1 251 0
 187 0004 054A     		ldr	r2, .L12
 188 0006 054B     		ldr	r3, .L12
 189 0008 1B78     		ldrb	r3, [r3]
 190 000a DBB2     		uxtb	r3, r3
 191 000c 03F07F03 		and	r3, r3, #127
 192 0010 DBB2     		uxtb	r3, r3
 193 0012 1370     		strb	r3, [r2]
 252:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 254:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (Timer_Cycle_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_GLOBAL_ENABLE &= ((uint8)(~Timer_Cycle_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_GLOBAL_STBY_ENABLE &= ((uint8)(~Timer_Cycle_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 194              		.loc 1 259 0
 195 0014 BD46     		mov	sp, r7
 196              		.cfi_def_cfa_register 13
 197              		@ sp needed
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 9


 198 0016 5DF8047B 		ldr	r7, [sp], #4
 199              		.cfi_restore 7
 200              		.cfi_def_cfa_offset 0
 201 001a 7047     		bx	lr
 202              	.L13:
 203              		.align	2
 204              	.L12:
 205 001c 74640040 		.word	1073767540
 206              		.cfi_endproc
 207              	.LFE3:
 208              		.size	Timer_Cycle_Stop, .-Timer_Cycle_Stop
 209              		.section	.text.Timer_Cycle_SetInterruptMode,"ax",%progbits
 210              		.align	2
 211              		.global	Timer_Cycle_SetInterruptMode
 212              		.thumb
 213              		.thumb_func
 214              		.type	Timer_Cycle_SetInterruptMode, %function
 215              	Timer_Cycle_SetInterruptMode:
 216              	.LFB4:
 260:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 261:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 262:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SetInterruptMode
 264:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 266:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 267:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  be selected.
 270:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 271:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 272:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 275:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 276:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 277:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 278:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 217              		.loc 1 280 0
 218              		.cfi_startproc
 219              		@ args = 0, pretend = 0, frame = 8
 220              		@ frame_needed = 1, uses_anonymous_args = 0
 221              		@ link register save eliminated.
 222 0000 80B4     		push	{r7}
 223              		.cfi_def_cfa_offset 4
 224              		.cfi_offset 7, -4
 225 0002 83B0     		sub	sp, sp, #12
 226              		.cfi_def_cfa_offset 16
 227 0004 00AF     		add	r7, sp, #0
 228              		.cfi_def_cfa_register 7
 229 0006 0346     		mov	r3, r0
 230 0008 FB71     		strb	r3, [r7, #7]
 281:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_STATUS_MASK = interruptMode;
 231              		.loc 1 281 0
 232 000a 044A     		ldr	r2, .L15
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 10


 233 000c FB79     		ldrb	r3, [r7, #7]
 234 000e 1370     		strb	r3, [r2]
 282:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 235              		.loc 1 282 0
 236 0010 0C37     		adds	r7, r7, #12
 237              		.cfi_def_cfa_offset 4
 238 0012 BD46     		mov	sp, r7
 239              		.cfi_def_cfa_register 13
 240              		@ sp needed
 241 0014 5DF8047B 		ldr	r7, [sp], #4
 242              		.cfi_restore 7
 243              		.cfi_def_cfa_offset 0
 244 0018 7047     		bx	lr
 245              	.L16:
 246 001a 00BF     		.align	2
 247              	.L15:
 248 001c 87640040 		.word	1073767559
 249              		.cfi_endproc
 250              	.LFE4:
 251              		.size	Timer_Cycle_SetInterruptMode, .-Timer_Cycle_SetInterruptMode
 252              		.section	.text.Timer_Cycle_SoftwareCapture,"ax",%progbits
 253              		.align	2
 254              		.global	Timer_Cycle_SoftwareCapture
 255              		.thumb
 256              		.thumb_func
 257              		.type	Timer_Cycle_SoftwareCapture, %function
 258              	Timer_Cycle_SoftwareCapture:
 259              	.LFB5:
 283:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 284:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 285:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SoftwareCapture
 287:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 289:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 290:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 292:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 293:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 294:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 295:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 296:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 297:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 298:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 301:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 260              		.loc 1 303 0
 261              		.cfi_startproc
 262              		@ args = 0, pretend = 0, frame = 0
 263              		@ frame_needed = 1, uses_anonymous_args = 0
 264              		@ link register save eliminated.
 265 0000 80B4     		push	{r7}
 266              		.cfi_def_cfa_offset 4
 267              		.cfi_offset 7, -4
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 11


 268 0002 00AF     		add	r7, sp, #0
 269              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(Timer_Cycle_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/Timer_Cycle.c ****         (void)CY_GET_REG16(Timer_Cycle_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 308:.\Generated_Source\PSoC5/Timer_Cycle.c ****         (void)CY_GET_REG8(Timer_Cycle_COUNTER_LSB_PTR_8BIT);
 270              		.loc 1 308 0
 271 0004 024B     		ldr	r3, .L18
 272 0006 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif/* (Timer_Cycle_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 273              		.loc 1 311 0
 274 0008 BD46     		mov	sp, r7
 275              		.cfi_def_cfa_register 13
 276              		@ sp needed
 277 000a 5DF8047B 		ldr	r7, [sp], #4
 278              		.cfi_restore 7
 279              		.cfi_def_cfa_offset 0
 280 000e 7047     		bx	lr
 281              	.L19:
 282              		.align	2
 283              	.L18:
 284 0010 04640040 		.word	1073767428
 285              		.cfi_endproc
 286              	.LFE5:
 287              		.size	Timer_Cycle_SoftwareCapture, .-Timer_Cycle_SoftwareCapture
 288              		.section	.text.Timer_Cycle_ReadStatusRegister,"ax",%progbits
 289              		.align	2
 290              		.global	Timer_Cycle_ReadStatusRegister
 291              		.thumb
 292              		.thumb_func
 293              		.type	Timer_Cycle_ReadStatusRegister, %function
 294              	Timer_Cycle_ReadStatusRegister:
 295              	.LFB6:
 312:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 313:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 314:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadStatusRegister
 316:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 318:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 319:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 323:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 324:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 325:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 326:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 327:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 329:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 332:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 12


 333:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint8   Timer_Cycle_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 296              		.loc 1 334 0
 297              		.cfi_startproc
 298              		@ args = 0, pretend = 0, frame = 0
 299              		@ frame_needed = 1, uses_anonymous_args = 0
 300              		@ link register save eliminated.
 301 0000 80B4     		push	{r7}
 302              		.cfi_def_cfa_offset 4
 303              		.cfi_offset 7, -4
 304 0002 00AF     		add	r7, sp, #0
 305              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC5/Timer_Cycle.c ****     return (Timer_Cycle_STATUS);
 306              		.loc 1 335 0
 307 0004 034B     		ldr	r3, .L22
 308 0006 1B78     		ldrb	r3, [r3]
 309 0008 DBB2     		uxtb	r3, r3
 336:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 310              		.loc 1 336 0
 311 000a 1846     		mov	r0, r3
 312 000c BD46     		mov	sp, r7
 313              		.cfi_def_cfa_register 13
 314              		@ sp needed
 315 000e 5DF8047B 		ldr	r7, [sp], #4
 316              		.cfi_restore 7
 317              		.cfi_def_cfa_offset 0
 318 0012 7047     		bx	lr
 319              	.L23:
 320              		.align	2
 321              	.L22:
 322 0014 67640040 		.word	1073767527
 323              		.cfi_endproc
 324              	.LFE6:
 325              		.size	Timer_Cycle_ReadStatusRegister, .-Timer_Cycle_ReadStatusRegister
 326              		.section	.text.Timer_Cycle_ReadControlRegister,"ax",%progbits
 327              		.align	2
 328              		.global	Timer_Cycle_ReadControlRegister
 329              		.thumb
 330              		.thumb_func
 331              		.type	Timer_Cycle_ReadControlRegister, %function
 332              	Timer_Cycle_ReadControlRegister:
 333              	.LFB7:
 337:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 338:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 339:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 341:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 342:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadControlRegister
 344:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 346:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 347:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 349:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 350:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 351:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 13


 352:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 353:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 355:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint8 Timer_Cycle_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 334              		.loc 1 357 0
 335              		.cfi_startproc
 336              		@ args = 0, pretend = 0, frame = 0
 337              		@ frame_needed = 1, uses_anonymous_args = 0
 338              		@ link register save eliminated.
 339 0000 80B4     		push	{r7}
 340              		.cfi_def_cfa_offset 4
 341              		.cfi_offset 7, -4
 342 0002 00AF     		add	r7, sp, #0
 343              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/Timer_Cycle.c ****         return ((uint8)Timer_Cycle_CONTROL);
 344              		.loc 1 359 0
 345 0004 034B     		ldr	r3, .L26
 346 0006 1B78     		ldrb	r3, [r3]
 347 0008 DBB2     		uxtb	r3, r3
 360:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 361:.\Generated_Source\PSoC5/Timer_Cycle.c ****         return (0);
 362:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 348              		.loc 1 363 0
 349 000a 1846     		mov	r0, r3
 350 000c BD46     		mov	sp, r7
 351              		.cfi_def_cfa_register 13
 352              		@ sp needed
 353 000e 5DF8047B 		ldr	r7, [sp], #4
 354              		.cfi_restore 7
 355              		.cfi_def_cfa_offset 0
 356 0012 7047     		bx	lr
 357              	.L27:
 358              		.align	2
 359              	.L26:
 360 0014 74640040 		.word	1073767540
 361              		.cfi_endproc
 362              	.LFE7:
 363              		.size	Timer_Cycle_ReadControlRegister, .-Timer_Cycle_ReadControlRegister
 364              		.section	.text.Timer_Cycle_WriteControlRegister,"ax",%progbits
 365              		.align	2
 366              		.global	Timer_Cycle_WriteControlRegister
 367              		.thumb
 368              		.thumb_func
 369              		.type	Timer_Cycle_WriteControlRegister, %function
 370              	Timer_Cycle_WriteControlRegister:
 371              	.LFB8:
 364:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 365:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 366:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_WriteControlRegister
 368:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 370:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 14


 371:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 373:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 374:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 376:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 377:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 378:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 372              		.loc 1 380 0
 373              		.cfi_startproc
 374              		@ args = 0, pretend = 0, frame = 8
 375              		@ frame_needed = 1, uses_anonymous_args = 0
 376              		@ link register save eliminated.
 377 0000 80B4     		push	{r7}
 378              		.cfi_def_cfa_offset 4
 379              		.cfi_offset 7, -4
 380 0002 83B0     		sub	sp, sp, #12
 381              		.cfi_def_cfa_offset 16
 382 0004 00AF     		add	r7, sp, #0
 383              		.cfi_def_cfa_register 7
 384 0006 0346     		mov	r3, r0
 385 0008 FB71     		strb	r3, [r7, #7]
 381:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL = control;
 386              		.loc 1 382 0
 387 000a 044A     		ldr	r2, .L29
 388 000c FB79     		ldrb	r3, [r7, #7]
 389 000e 1370     		strb	r3, [r2]
 383:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 384:.\Generated_Source\PSoC5/Timer_Cycle.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 390              		.loc 1 386 0
 391 0010 0C37     		adds	r7, r7, #12
 392              		.cfi_def_cfa_offset 4
 393 0012 BD46     		mov	sp, r7
 394              		.cfi_def_cfa_register 13
 395              		@ sp needed
 396 0014 5DF8047B 		ldr	r7, [sp], #4
 397              		.cfi_restore 7
 398              		.cfi_def_cfa_offset 0
 399 0018 7047     		bx	lr
 400              	.L30:
 401 001a 00BF     		.align	2
 402              	.L29:
 403 001c 74640040 		.word	1073767540
 404              		.cfi_endproc
 405              	.LFE8:
 406              		.size	Timer_Cycle_WriteControlRegister, .-Timer_Cycle_WriteControlRegister
 407              		.section	.text.Timer_Cycle_ReadPeriod,"ax",%progbits
 408              		.align	2
 409              		.global	Timer_Cycle_ReadPeriod
 410              		.thumb
 411              		.thumb_func
 412              		.type	Timer_Cycle_ReadPeriod, %function
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 15


 413              	Timer_Cycle_ReadPeriod:
 414              	.LFB9:
 387:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 388:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 390:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 391:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadPeriod
 393:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 395:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 396:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 398:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 399:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 400:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 401:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 402:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 404:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint32 Timer_Cycle_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 415              		.loc 1 406 0
 416              		.cfi_startproc
 417              		@ args = 0, pretend = 0, frame = 0
 418              		@ frame_needed = 1, uses_anonymous_args = 0
 419              		@ link register save eliminated.
 420 0000 80B4     		push	{r7}
 421              		.cfi_def_cfa_offset 4
 422              		.cfi_offset 7, -4
 423 0002 00AF     		add	r7, sp, #0
 424              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #if(Timer_Cycle_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/Timer_Cycle.c ****        return ((uint32)CY_GET_REG16(Timer_Cycle_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #else
 410:.\Generated_Source\PSoC5/Timer_Cycle.c ****        return (CY_GET_REG32(Timer_Cycle_PERIOD_LSB_PTR));
 425              		.loc 1 410 0
 426 0004 034B     		ldr	r3, .L33
 427 0006 1B68     		ldr	r3, [r3]
 411:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #endif /* (Timer_Cycle_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 428              		.loc 1 412 0
 429 0008 1846     		mov	r0, r3
 430 000a BD46     		mov	sp, r7
 431              		.cfi_def_cfa_register 13
 432              		@ sp needed
 433 000c 5DF8047B 		ldr	r7, [sp], #4
 434              		.cfi_restore 7
 435              		.cfi_def_cfa_offset 0
 436 0010 7047     		bx	lr
 437              	.L34:
 438 0012 00BF     		.align	2
 439              	.L33:
 440 0014 24640040 		.word	1073767460
 441              		.cfi_endproc
 442              	.LFE9:
 443              		.size	Timer_Cycle_ReadPeriod, .-Timer_Cycle_ReadPeriod
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 16


 444              		.section	.text.Timer_Cycle_WritePeriod,"ax",%progbits
 445              		.align	2
 446              		.global	Timer_Cycle_WritePeriod
 447              		.thumb
 448              		.thumb_func
 449              		.type	Timer_Cycle_WritePeriod, %function
 450              	Timer_Cycle_WritePeriod:
 451              	.LFB10:
 413:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 414:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 415:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_WritePeriod
 417:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 419:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 420:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 423:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 424:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/Timer_Cycle.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 427:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 428:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 429:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 430:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_WritePeriod(uint32 period) 
 432:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 452              		.loc 1 432 0
 453              		.cfi_startproc
 454              		@ args = 0, pretend = 0, frame = 8
 455              		@ frame_needed = 1, uses_anonymous_args = 0
 456              		@ link register save eliminated.
 457 0000 80B4     		push	{r7}
 458              		.cfi_def_cfa_offset 4
 459              		.cfi_offset 7, -4
 460 0002 83B0     		sub	sp, sp, #12
 461              		.cfi_def_cfa_offset 16
 462 0004 00AF     		add	r7, sp, #0
 463              		.cfi_def_cfa_register 7
 464 0006 7860     		str	r0, [r7, #4]
 433:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(Timer_Cycle_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/Timer_Cycle.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/Timer_Cycle.c ****         CY_SET_REG16(Timer_Cycle_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 437:.\Generated_Source\PSoC5/Timer_Cycle.c ****         CY_SET_REG32(Timer_Cycle_PERIOD_LSB_PTR, period);
 465              		.loc 1 437 0
 466 0008 034A     		ldr	r2, .L36
 467 000a 7B68     		ldr	r3, [r7, #4]
 468 000c 1360     		str	r3, [r2]
 438:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 469              		.loc 1 439 0
 470 000e 0C37     		adds	r7, r7, #12
 471              		.cfi_def_cfa_offset 4
 472 0010 BD46     		mov	sp, r7
 473              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 17


 474              		@ sp needed
 475 0012 5DF8047B 		ldr	r7, [sp], #4
 476              		.cfi_restore 7
 477              		.cfi_def_cfa_offset 0
 478 0016 7047     		bx	lr
 479              	.L37:
 480              		.align	2
 481              	.L36:
 482 0018 24640040 		.word	1073767460
 483              		.cfi_endproc
 484              	.LFE10:
 485              		.size	Timer_Cycle_WritePeriod, .-Timer_Cycle_WritePeriod
 486              		.section	.text.Timer_Cycle_ReadCapture,"ax",%progbits
 487              		.align	2
 488              		.global	Timer_Cycle_ReadCapture
 489              		.thumb
 490              		.thumb_func
 491              		.type	Timer_Cycle_ReadCapture, %function
 492              	Timer_Cycle_ReadCapture:
 493              	.LFB11:
 440:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 441:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 442:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadCapture
 444:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 446:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 447:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 449:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 450:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 451:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 452:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 453:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 455:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint32 Timer_Cycle_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 494              		.loc 1 457 0
 495              		.cfi_startproc
 496              		@ args = 0, pretend = 0, frame = 0
 497              		@ frame_needed = 1, uses_anonymous_args = 0
 498              		@ link register save eliminated.
 499 0000 80B4     		push	{r7}
 500              		.cfi_def_cfa_offset 4
 501              		.cfi_offset 7, -4
 502 0002 00AF     		add	r7, sp, #0
 503              		.cfi_def_cfa_register 7
 458:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #if(Timer_Cycle_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/Timer_Cycle.c ****        return ((uint32)CY_GET_REG16(Timer_Cycle_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #else
 461:.\Generated_Source\PSoC5/Timer_Cycle.c ****        return (CY_GET_REG32(Timer_Cycle_CAPTURE_LSB_PTR));
 504              		.loc 1 461 0
 505 0004 034B     		ldr	r3, .L40
 506 0006 1B68     		ldr	r3, [r3]
 462:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #endif /* (Timer_Cycle_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 18


 507              		.loc 1 463 0
 508 0008 1846     		mov	r0, r3
 509 000a BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 000c 5DF8047B 		ldr	r7, [sp], #4
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 0010 7047     		bx	lr
 516              	.L41:
 517 0012 00BF     		.align	2
 518              	.L40:
 519 0014 44640040 		.word	1073767492
 520              		.cfi_endproc
 521              	.LFE11:
 522              		.size	Timer_Cycle_ReadCapture, .-Timer_Cycle_ReadCapture
 523              		.section	.text.Timer_Cycle_WriteCounter,"ax",%progbits
 524              		.align	2
 525              		.global	Timer_Cycle_WriteCounter
 526              		.thumb
 527              		.thumb_func
 528              		.type	Timer_Cycle_WriteCounter, %function
 529              	Timer_Cycle_WriteCounter:
 530              	.LFB12:
 464:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 465:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 466:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_WriteCounter
 468:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 470:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 471:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 473:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 474:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 476:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 477:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 478:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 479:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_WriteCounter(uint32 counter) 
 481:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 531              		.loc 1 481 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535              		@ link register save eliminated.
 536 0000 80B4     		push	{r7}
 537              		.cfi_def_cfa_offset 4
 538              		.cfi_offset 7, -4
 539 0002 83B0     		sub	sp, sp, #12
 540              		.cfi_def_cfa_offset 16
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 482:.\Generated_Source\PSoC5/Timer_Cycle.c ****    #if(Timer_Cycle_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* This functionality is removed until a FixedFunction HW update to
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 19


 484:.\Generated_Source\PSoC5/Timer_Cycle.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/Timer_Cycle.c ****          */
 486:.\Generated_Source\PSoC5/Timer_Cycle.c ****         CY_SET_REG16(Timer_Cycle_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/Timer_Cycle.c ****         
 488:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 489:.\Generated_Source\PSoC5/Timer_Cycle.c ****         CY_SET_REG32(Timer_Cycle_COUNTER_LSB_PTR, counter);
 544              		.loc 1 489 0
 545 0008 034A     		ldr	r2, .L43
 546 000a 7B68     		ldr	r3, [r7, #4]
 547 000c 1360     		str	r3, [r2]
 490:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 548              		.loc 1 491 0
 549 000e 0C37     		adds	r7, r7, #12
 550              		.cfi_def_cfa_offset 4
 551 0010 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0012 5DF8047B 		ldr	r7, [sp], #4
 555              		.cfi_restore 7
 556              		.cfi_def_cfa_offset 0
 557 0016 7047     		bx	lr
 558              	.L44:
 559              		.align	2
 560              	.L43:
 561 0018 04640040 		.word	1073767428
 562              		.cfi_endproc
 563              	.LFE12:
 564              		.size	Timer_Cycle_WriteCounter, .-Timer_Cycle_WriteCounter
 565              		.section	.text.Timer_Cycle_ReadCounter,"ax",%progbits
 566              		.align	2
 567              		.global	Timer_Cycle_ReadCounter
 568              		.thumb
 569              		.thumb_func
 570              		.type	Timer_Cycle_ReadCounter, %function
 571              	Timer_Cycle_ReadCounter:
 572              	.LFB13:
 492:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 493:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 494:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadCounter
 496:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 498:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 499:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 501:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 502:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 503:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 504:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 505:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 507:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint32 Timer_Cycle_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 573              		.loc 1 509 0
 574              		.cfi_startproc
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 20


 575              		@ args = 0, pretend = 0, frame = 0
 576              		@ frame_needed = 1, uses_anonymous_args = 0
 577              		@ link register save eliminated.
 578 0000 80B4     		push	{r7}
 579              		.cfi_def_cfa_offset 4
 580              		.cfi_offset 7, -4
 581 0002 00AF     		add	r7, sp, #0
 582              		.cfi_def_cfa_register 7
 510:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(Timer_Cycle_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/Timer_Cycle.c ****         (void)CY_GET_REG16(Timer_Cycle_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 516:.\Generated_Source\PSoC5/Timer_Cycle.c ****         (void)CY_GET_REG8(Timer_Cycle_COUNTER_LSB_PTR_8BIT);
 583              		.loc 1 516 0
 584 0004 044B     		ldr	r3, .L47
 585 0006 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif/* (Timer_Cycle_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 519:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if(Timer_Cycle_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/Timer_Cycle.c ****         return ((uint32)CY_GET_REG16(Timer_Cycle_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #else
 523:.\Generated_Source\PSoC5/Timer_Cycle.c ****         return (CY_GET_REG32(Timer_Cycle_CAPTURE_LSB_PTR));
 586              		.loc 1 523 0
 587 0008 044B     		ldr	r3, .L47+4
 588 000a 1B68     		ldr	r3, [r3]
 524:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* (Timer_Cycle_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 589              		.loc 1 525 0
 590 000c 1846     		mov	r0, r3
 591 000e BD46     		mov	sp, r7
 592              		.cfi_def_cfa_register 13
 593              		@ sp needed
 594 0010 5DF8047B 		ldr	r7, [sp], #4
 595              		.cfi_restore 7
 596              		.cfi_def_cfa_offset 0
 597 0014 7047     		bx	lr
 598              	.L48:
 599 0016 00BF     		.align	2
 600              	.L47:
 601 0018 04640040 		.word	1073767428
 602 001c 44640040 		.word	1073767492
 603              		.cfi_endproc
 604              	.LFE13:
 605              		.size	Timer_Cycle_ReadCounter, .-Timer_Cycle_ReadCounter
 606              		.section	.text.Timer_Cycle_ClearFIFO,"ax",%progbits
 607              		.align	2
 608              		.global	Timer_Cycle_ClearFIFO
 609              		.thumb
 610              		.thumb_func
 611              		.type	Timer_Cycle_ClearFIFO, %function
 612              	Timer_Cycle_ClearFIFO:
 613              	.LFB14:
 526:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 527:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 21


 528:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if(!Timer_Cycle_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 530:.\Generated_Source\PSoC5/Timer_Cycle.c ****     
 531:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/Timer_Cycle.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/Timer_Cycle.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/Timer_Cycle.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 536:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 537:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if (Timer_Cycle_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 539:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 540:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SetCaptureMode
 542:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 544:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 545:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 547:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 548:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  #define Timer_Cycle__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/Timer_Cycle.c **** #define Timer_Cycle__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/Timer_Cycle.c **** #define Timer_Cycle__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/Timer_Cycle.c **** #define Timer_Cycle__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/Timer_Cycle.c **** #define Timer_Cycle__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/Timer_Cycle.c ****  identifiers
 556:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Timer_Cycle__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Timer_Cycle__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Timer_Cycle__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Timer_Cycle__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 562:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 563:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 564:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 565:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 568:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/Timer_Cycle.c ****     captureMode = ((uint8)((uint8)captureMode << Timer_Cycle_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/Timer_Cycle.c ****     captureMode &= (Timer_Cycle_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 572:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= ((uint8)(~Timer_Cycle_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 576:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 580:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 582:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 583:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if (Timer_Cycle_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 22


 585:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 586:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 587:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SetTriggerMode
 588:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 590:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 591:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 593:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 594:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #define Timer_Cycle__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #define Timer_Cycle__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #define Timer_Cycle__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #define Timer_Cycle__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #define Timer_Cycle__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 601:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 602:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 603:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 604:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 607:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/Timer_Cycle.c ****     triggerMode &= Timer_Cycle_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 610:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remove
 611:.\Generated_Source\PSoC5/Timer_Cycle.c ****     
 612:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= ((uint8)(~Timer_Cycle_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 615:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL |= (triggerMode | Timer_Cycle__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 619:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 621:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if (Timer_Cycle_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 623:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 624:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_EnableTrigger
 626:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 628:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 629:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 631:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 632:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 633:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 634:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 635:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 636:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 637:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 640:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is remove
 641:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL |= Timer_Cycle_CTRL_TRIG_EN;
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 23


 642:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 644:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 645:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 646:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_DisableTrigger
 648:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 650:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 651:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 653:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 654:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 655:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 656:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 657:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 658:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 659:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 662:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is remov
 663:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= ((uint8)(~Timer_Cycle_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 666:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 668:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if(Timer_Cycle_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 670:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 671:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SetInterruptCount
 673:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 675:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 676:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 678:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 679:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 684:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 685:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 686:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 687:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 690:.\Generated_Source\PSoC5/Timer_Cycle.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/Timer_Cycle.c ****     interruptCount &= Timer_Cycle_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 693:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #if (!Timer_Cycle_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL &= ((uint8)(~Timer_Cycle_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/Timer_Cycle.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/Timer_Cycle.c ****         Timer_Cycle_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/Timer_Cycle.c ****     #endif /* (!Timer_Cycle_UDB_CONTROL_REG_REMOVED) */
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 24


 699:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 700:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Timer_Cycle_InterruptOnCaptureCount */
 701:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 702:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 703:.\Generated_Source\PSoC5/Timer_Cycle.c **** #if (Timer_Cycle_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 705:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 706:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_SetCaptureCount
 708:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 710:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 711:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 713:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 714:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/Timer_Cycle.c **** *                captures.
 717:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 718:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 719:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 720:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 721:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 724:.\Generated_Source\PSoC5/Timer_Cycle.c ****     Timer_Cycle_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 726:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 727:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 728:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ReadCaptureCount
 730:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 732:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 733:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 735:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 736:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 737:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 738:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 739:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 741:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/Timer_Cycle.c **** uint8 Timer_Cycle_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 744:.\Generated_Source\PSoC5/Timer_Cycle.c ****     return ((uint8)Timer_Cycle_CAP_COUNT);
 745:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 746:.\Generated_Source\PSoC5/Timer_Cycle.c **** #endif /* Timer_Cycle_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 748:.\Generated_Source\PSoC5/Timer_Cycle.c **** 
 749:.\Generated_Source\PSoC5/Timer_Cycle.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Function Name: Timer_Cycle_ClearFIFO
 751:.\Generated_Source\PSoC5/Timer_Cycle.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 753:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Summary:
 754:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 25


 756:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Parameters:
 757:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 758:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 759:.\Generated_Source\PSoC5/Timer_Cycle.c **** * Return:
 760:.\Generated_Source\PSoC5/Timer_Cycle.c **** *  void
 761:.\Generated_Source\PSoC5/Timer_Cycle.c **** *
 762:.\Generated_Source\PSoC5/Timer_Cycle.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/Timer_Cycle.c **** void Timer_Cycle_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/Timer_Cycle.c **** {
 614              		.loc 1 764 0
 615              		.cfi_startproc
 616              		@ args = 0, pretend = 0, frame = 0
 617              		@ frame_needed = 1, uses_anonymous_args = 0
 618 0000 80B5     		push	{r7, lr}
 619              		.cfi_def_cfa_offset 8
 620              		.cfi_offset 7, -8
 621              		.cfi_offset 14, -4
 622 0002 00AF     		add	r7, sp, #0
 623              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC5/Timer_Cycle.c ****     while(0u != (Timer_Cycle_ReadStatusRegister() & Timer_Cycle_STATUS_FIFONEMP))
 624              		.loc 1 765 0
 625 0004 01E0     		b	.L50
 626              	.L51:
 766:.\Generated_Source\PSoC5/Timer_Cycle.c ****     {
 767:.\Generated_Source\PSoC5/Timer_Cycle.c ****         (void)Timer_Cycle_ReadCapture();
 627              		.loc 1 767 0
 628 0006 FFF7FEFF 		bl	Timer_Cycle_ReadCapture
 629              	.L50:
 765:.\Generated_Source\PSoC5/Timer_Cycle.c ****     while(0u != (Timer_Cycle_ReadStatusRegister() & Timer_Cycle_STATUS_FIFONEMP))
 630              		.loc 1 765 0
 631 000a FFF7FEFF 		bl	Timer_Cycle_ReadStatusRegister
 632 000e 0346     		mov	r3, r0
 633 0010 03F00803 		and	r3, r3, #8
 634 0014 002B     		cmp	r3, #0
 635 0016 F6D1     		bne	.L51
 768:.\Generated_Source\PSoC5/Timer_Cycle.c ****     }
 769:.\Generated_Source\PSoC5/Timer_Cycle.c **** }
 636              		.loc 1 769 0
 637 0018 80BD     		pop	{r7, pc}
 638              		.cfi_endproc
 639              	.LFE14:
 640              		.size	Timer_Cycle_ClearFIFO, .-Timer_Cycle_ClearFIFO
 641 001a 00BF     		.text
 642              	.Letext0:
 643              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 644              		.section	.debug_info,"",%progbits
 645              	.Ldebug_info0:
 646 0000 4E020000 		.4byte	0x24e
 647 0004 0400     		.2byte	0x4
 648 0006 00000000 		.4byte	.Ldebug_abbrev0
 649 000a 04       		.byte	0x4
 650 000b 01       		.uleb128 0x1
 651 000c 2E010000 		.4byte	.LASF36
 652 0010 01       		.byte	0x1
 653 0011 63000000 		.4byte	.LASF37
 654 0015 31000000 		.4byte	.LASF38
 655 0019 00000000 		.4byte	.Ldebug_ranges0+0
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 26


 656 001d 00000000 		.4byte	0
 657 0021 00000000 		.4byte	.Ldebug_line0
 658 0025 02       		.uleb128 0x2
 659 0026 01       		.byte	0x1
 660 0027 06       		.byte	0x6
 661 0028 F0020000 		.4byte	.LASF0
 662 002c 02       		.uleb128 0x2
 663 002d 01       		.byte	0x1
 664 002e 08       		.byte	0x8
 665 002f CA000000 		.4byte	.LASF1
 666 0033 02       		.uleb128 0x2
 667 0034 02       		.byte	0x2
 668 0035 05       		.byte	0x5
 669 0036 6F020000 		.4byte	.LASF2
 670 003a 02       		.uleb128 0x2
 671 003b 02       		.byte	0x2
 672 003c 07       		.byte	0x7
 673 003d 1E000000 		.4byte	.LASF3
 674 0041 02       		.uleb128 0x2
 675 0042 04       		.byte	0x4
 676 0043 05       		.byte	0x5
 677 0044 E2020000 		.4byte	.LASF4
 678 0048 02       		.uleb128 0x2
 679 0049 04       		.byte	0x4
 680 004a 07       		.byte	0x7
 681 004b DD000000 		.4byte	.LASF5
 682 004f 02       		.uleb128 0x2
 683 0050 08       		.byte	0x8
 684 0051 05       		.byte	0x5
 685 0052 3B020000 		.4byte	.LASF6
 686 0056 02       		.uleb128 0x2
 687 0057 08       		.byte	0x8
 688 0058 07       		.byte	0x7
 689 0059 B3000000 		.4byte	.LASF7
 690 005d 03       		.uleb128 0x3
 691 005e 04       		.byte	0x4
 692 005f 05       		.byte	0x5
 693 0060 696E7400 		.ascii	"int\000"
 694 0064 02       		.uleb128 0x2
 695 0065 04       		.byte	0x4
 696 0066 07       		.byte	0x7
 697 0067 CA010000 		.4byte	.LASF8
 698 006b 04       		.uleb128 0x4
 699 006c 01010000 		.4byte	.LASF9
 700 0070 02       		.byte	0x2
 701 0071 A1       		.byte	0xa1
 702 0072 2C000000 		.4byte	0x2c
 703 0076 04       		.uleb128 0x4
 704 0077 C3010000 		.4byte	.LASF10
 705 007b 02       		.byte	0x2
 706 007c A3       		.byte	0xa3
 707 007d 48000000 		.4byte	0x48
 708 0081 02       		.uleb128 0x2
 709 0082 04       		.byte	0x4
 710 0083 04       		.byte	0x4
 711 0084 A5000000 		.4byte	.LASF11
 712 0088 02       		.uleb128 0x2
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 27


 713 0089 08       		.byte	0x8
 714 008a 04       		.byte	0x4
 715 008b BC010000 		.4byte	.LASF12
 716 008f 02       		.uleb128 0x2
 717 0090 01       		.byte	0x1
 718 0091 08       		.byte	0x8
 719 0092 EB020000 		.4byte	.LASF13
 720 0096 05       		.uleb128 0x5
 721 0097 D8000000 		.4byte	.LASF14
 722 009b 02       		.byte	0x2
 723 009c 4B01     		.2byte	0x14b
 724 009e A2000000 		.4byte	0xa2
 725 00a2 06       		.uleb128 0x6
 726 00a3 6B000000 		.4byte	0x6b
 727 00a7 05       		.uleb128 0x5
 728 00a8 11000000 		.4byte	.LASF15
 729 00ac 02       		.byte	0x2
 730 00ad 4D01     		.2byte	0x14d
 731 00af B3000000 		.4byte	0xb3
 732 00b3 06       		.uleb128 0x6
 733 00b4 76000000 		.4byte	0x76
 734 00b8 02       		.uleb128 0x2
 735 00b9 04       		.byte	0x4
 736 00ba 07       		.byte	0x7
 737 00bb 32020000 		.4byte	.LASF16
 738 00bf 07       		.uleb128 0x7
 739 00c0 21020000 		.4byte	.LASF20
 740 00c4 01       		.byte	0x1
 741 00c5 2B       		.byte	0x2b
 742 00c6 00000000 		.4byte	.LFB0
 743 00ca 4C000000 		.4byte	.LFE0-.LFB0
 744 00ce 01       		.uleb128 0x1
 745 00cf 9C       		.byte	0x9c
 746 00d0 E3000000 		.4byte	0xe3
 747 00d4 08       		.uleb128 0x8
 748 00d5 8A000000 		.4byte	.LASF39
 749 00d9 01       		.byte	0x1
 750 00da 2F       		.byte	0x2f
 751 00db 6B000000 		.4byte	0x6b
 752 00df 02       		.uleb128 0x2
 753 00e0 91       		.byte	0x91
 754 00e1 77       		.sleb128 -9
 755 00e2 00       		.byte	0
 756 00e3 09       		.uleb128 0x9
 757 00e4 F8010000 		.4byte	.LASF17
 758 00e8 01       		.byte	0x1
 759 00e9 B4       		.byte	0xb4
 760 00ea 00000000 		.4byte	.LFB1
 761 00ee 20000000 		.4byte	.LFE1-.LFB1
 762 00f2 01       		.uleb128 0x1
 763 00f3 9C       		.byte	0x9c
 764 00f4 0A       		.uleb128 0xa
 765 00f5 EF000000 		.4byte	.LASF18
 766 00f9 01       		.byte	0x1
 767 00fa D7       		.byte	0xd7
 768 00fb 00000000 		.4byte	.LFB2
 769 00ff 20000000 		.4byte	.LFE2-.LFB2
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 28


 770 0103 01       		.uleb128 0x1
 771 0104 9C       		.byte	0x9c
 772 0105 09       		.uleb128 0x9
 773 0106 00000000 		.4byte	.LASF19
 774 010a 01       		.byte	0x1
 775 010b F7       		.byte	0xf7
 776 010c 00000000 		.4byte	.LFB3
 777 0110 20000000 		.4byte	.LFE3-.LFB3
 778 0114 01       		.uleb128 0x1
 779 0115 9C       		.byte	0x9c
 780 0116 0B       		.uleb128 0xb
 781 0117 C5020000 		.4byte	.LASF21
 782 011b 01       		.byte	0x1
 783 011c 1701     		.2byte	0x117
 784 011e 00000000 		.4byte	.LFB4
 785 0122 20000000 		.4byte	.LFE4-.LFB4
 786 0126 01       		.uleb128 0x1
 787 0127 9C       		.byte	0x9c
 788 0128 3C010000 		.4byte	0x13c
 789 012c 0C       		.uleb128 0xc
 790 012d 49020000 		.4byte	.LASF26
 791 0131 01       		.byte	0x1
 792 0132 1701     		.2byte	0x117
 793 0134 6B000000 		.4byte	0x6b
 794 0138 02       		.uleb128 0x2
 795 0139 91       		.byte	0x91
 796 013a 77       		.sleb128 -9
 797 013b 00       		.byte	0
 798 013c 0D       		.uleb128 0xd
 799 013d 2C030000 		.4byte	.LASF22
 800 0141 01       		.byte	0x1
 801 0142 2E01     		.2byte	0x12e
 802 0144 00000000 		.4byte	.LFB5
 803 0148 14000000 		.4byte	.LFE5-.LFB5
 804 014c 01       		.uleb128 0x1
 805 014d 9C       		.byte	0x9c
 806 014e 0E       		.uleb128 0xe
 807 014f 0F010000 		.4byte	.LASF23
 808 0153 01       		.byte	0x1
 809 0154 4D01     		.2byte	0x14d
 810 0156 6B000000 		.4byte	0x6b
 811 015a 00000000 		.4byte	.LFB6
 812 015e 18000000 		.4byte	.LFE6-.LFB6
 813 0162 01       		.uleb128 0x1
 814 0163 9C       		.byte	0x9c
 815 0164 0E       		.uleb128 0xe
 816 0165 8D020000 		.4byte	.LASF24
 817 0169 01       		.byte	0x1
 818 016a 6401     		.2byte	0x164
 819 016c 6B000000 		.4byte	0x6b
 820 0170 00000000 		.4byte	.LFB7
 821 0174 18000000 		.4byte	.LFE7-.LFB7
 822 0178 01       		.uleb128 0x1
 823 0179 9C       		.byte	0x9c
 824 017a 0B       		.uleb128 0xb
 825 017b D7010000 		.4byte	.LASF25
 826 017f 01       		.byte	0x1
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 29


 827 0180 7B01     		.2byte	0x17b
 828 0182 00000000 		.4byte	.LFB8
 829 0186 20000000 		.4byte	.LFE8-.LFB8
 830 018a 01       		.uleb128 0x1
 831 018b 9C       		.byte	0x9c
 832 018c A0010000 		.4byte	0x1a0
 833 0190 0C       		.uleb128 0xc
 834 0191 07010000 		.4byte	.LASF27
 835 0195 01       		.byte	0x1
 836 0196 7B01     		.2byte	0x17b
 837 0198 6B000000 		.4byte	0x6b
 838 019c 02       		.uleb128 0x2
 839 019d 91       		.byte	0x91
 840 019e 77       		.sleb128 -9
 841 019f 00       		.byte	0
 842 01a0 0E       		.uleb128 0xe
 843 01a1 FC020000 		.4byte	.LASF28
 844 01a5 01       		.byte	0x1
 845 01a6 9501     		.2byte	0x195
 846 01a8 76000000 		.4byte	0x76
 847 01ac 00000000 		.4byte	.LFB9
 848 01b0 18000000 		.4byte	.LFE9-.LFB9
 849 01b4 01       		.uleb128 0x1
 850 01b5 9C       		.byte	0x9c
 851 01b6 0B       		.uleb128 0xb
 852 01b7 57020000 		.4byte	.LASF29
 853 01bb 01       		.byte	0x1
 854 01bc AF01     		.2byte	0x1af
 855 01be 00000000 		.4byte	.LFB10
 856 01c2 1C000000 		.4byte	.LFE10-.LFB10
 857 01c6 01       		.uleb128 0x1
 858 01c7 9C       		.byte	0x9c
 859 01c8 DC010000 		.4byte	0x1dc
 860 01cc 0C       		.uleb128 0xc
 861 01cd 17000000 		.4byte	.LASF30
 862 01d1 01       		.byte	0x1
 863 01d2 AF01     		.2byte	0x1af
 864 01d4 76000000 		.4byte	0x76
 865 01d8 02       		.uleb128 0x2
 866 01d9 91       		.byte	0x91
 867 01da 74       		.sleb128 -12
 868 01db 00       		.byte	0
 869 01dc 0E       		.uleb128 0xe
 870 01dd 48030000 		.4byte	.LASF31
 871 01e1 01       		.byte	0x1
 872 01e2 C801     		.2byte	0x1c8
 873 01e4 76000000 		.4byte	0x76
 874 01e8 00000000 		.4byte	.LFB11
 875 01ec 18000000 		.4byte	.LFE11-.LFB11
 876 01f0 01       		.uleb128 0x1
 877 01f1 9C       		.byte	0x9c
 878 01f2 0B       		.uleb128 0xb
 879 01f3 13030000 		.4byte	.LASF32
 880 01f7 01       		.byte	0x1
 881 01f8 E001     		.2byte	0x1e0
 882 01fa 00000000 		.4byte	.LFB12
 883 01fe 1C000000 		.4byte	.LFE12-.LFB12
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 30


 884 0202 01       		.uleb128 0x1
 885 0203 9C       		.byte	0x9c
 886 0204 18020000 		.4byte	0x218
 887 0208 0C       		.uleb128 0xc
 888 0209 AB000000 		.4byte	.LASF33
 889 020d 01       		.byte	0x1
 890 020e E001     		.2byte	0x1e0
 891 0210 76000000 		.4byte	0x76
 892 0214 02       		.uleb128 0x2
 893 0215 91       		.byte	0x91
 894 0216 74       		.sleb128 -12
 895 0217 00       		.byte	0
 896 0218 0E       		.uleb128 0xe
 897 0219 AD020000 		.4byte	.LASF34
 898 021d 01       		.byte	0x1
 899 021e FC01     		.2byte	0x1fc
 900 0220 76000000 		.4byte	0x76
 901 0224 00000000 		.4byte	.LFB13
 902 0228 20000000 		.4byte	.LFE13-.LFB13
 903 022c 01       		.uleb128 0x1
 904 022d 9C       		.byte	0x9c
 905 022e 0F       		.uleb128 0xf
 906 022f 0B020000 		.4byte	.LASF35
 907 0233 01       		.byte	0x1
 908 0234 FB02     		.2byte	0x2fb
 909 0236 00000000 		.4byte	.LFB14
 910 023a 1A000000 		.4byte	.LFE14-.LFB14
 911 023e 01       		.uleb128 0x1
 912 023f 9C       		.byte	0x9c
 913 0240 10       		.uleb128 0x10
 914 0241 79020000 		.4byte	.LASF40
 915 0245 01       		.byte	0x1
 916 0246 1A       		.byte	0x1a
 917 0247 6B000000 		.4byte	0x6b
 918 024b 05       		.uleb128 0x5
 919 024c 03       		.byte	0x3
 920 024d 00000000 		.4byte	Timer_Cycle_initVar
 921 0251 00       		.byte	0
 922              		.section	.debug_abbrev,"",%progbits
 923              	.Ldebug_abbrev0:
 924 0000 01       		.uleb128 0x1
 925 0001 11       		.uleb128 0x11
 926 0002 01       		.byte	0x1
 927 0003 25       		.uleb128 0x25
 928 0004 0E       		.uleb128 0xe
 929 0005 13       		.uleb128 0x13
 930 0006 0B       		.uleb128 0xb
 931 0007 03       		.uleb128 0x3
 932 0008 0E       		.uleb128 0xe
 933 0009 1B       		.uleb128 0x1b
 934 000a 0E       		.uleb128 0xe
 935 000b 55       		.uleb128 0x55
 936 000c 17       		.uleb128 0x17
 937 000d 11       		.uleb128 0x11
 938 000e 01       		.uleb128 0x1
 939 000f 10       		.uleb128 0x10
 940 0010 17       		.uleb128 0x17
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 31


 941 0011 00       		.byte	0
 942 0012 00       		.byte	0
 943 0013 02       		.uleb128 0x2
 944 0014 24       		.uleb128 0x24
 945 0015 00       		.byte	0
 946 0016 0B       		.uleb128 0xb
 947 0017 0B       		.uleb128 0xb
 948 0018 3E       		.uleb128 0x3e
 949 0019 0B       		.uleb128 0xb
 950 001a 03       		.uleb128 0x3
 951 001b 0E       		.uleb128 0xe
 952 001c 00       		.byte	0
 953 001d 00       		.byte	0
 954 001e 03       		.uleb128 0x3
 955 001f 24       		.uleb128 0x24
 956 0020 00       		.byte	0
 957 0021 0B       		.uleb128 0xb
 958 0022 0B       		.uleb128 0xb
 959 0023 3E       		.uleb128 0x3e
 960 0024 0B       		.uleb128 0xb
 961 0025 03       		.uleb128 0x3
 962 0026 08       		.uleb128 0x8
 963 0027 00       		.byte	0
 964 0028 00       		.byte	0
 965 0029 04       		.uleb128 0x4
 966 002a 16       		.uleb128 0x16
 967 002b 00       		.byte	0
 968 002c 03       		.uleb128 0x3
 969 002d 0E       		.uleb128 0xe
 970 002e 3A       		.uleb128 0x3a
 971 002f 0B       		.uleb128 0xb
 972 0030 3B       		.uleb128 0x3b
 973 0031 0B       		.uleb128 0xb
 974 0032 49       		.uleb128 0x49
 975 0033 13       		.uleb128 0x13
 976 0034 00       		.byte	0
 977 0035 00       		.byte	0
 978 0036 05       		.uleb128 0x5
 979 0037 16       		.uleb128 0x16
 980 0038 00       		.byte	0
 981 0039 03       		.uleb128 0x3
 982 003a 0E       		.uleb128 0xe
 983 003b 3A       		.uleb128 0x3a
 984 003c 0B       		.uleb128 0xb
 985 003d 3B       		.uleb128 0x3b
 986 003e 05       		.uleb128 0x5
 987 003f 49       		.uleb128 0x49
 988 0040 13       		.uleb128 0x13
 989 0041 00       		.byte	0
 990 0042 00       		.byte	0
 991 0043 06       		.uleb128 0x6
 992 0044 35       		.uleb128 0x35
 993 0045 00       		.byte	0
 994 0046 49       		.uleb128 0x49
 995 0047 13       		.uleb128 0x13
 996 0048 00       		.byte	0
 997 0049 00       		.byte	0
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 32


 998 004a 07       		.uleb128 0x7
 999 004b 2E       		.uleb128 0x2e
 1000 004c 01       		.byte	0x1
 1001 004d 3F       		.uleb128 0x3f
 1002 004e 19       		.uleb128 0x19
 1003 004f 03       		.uleb128 0x3
 1004 0050 0E       		.uleb128 0xe
 1005 0051 3A       		.uleb128 0x3a
 1006 0052 0B       		.uleb128 0xb
 1007 0053 3B       		.uleb128 0x3b
 1008 0054 0B       		.uleb128 0xb
 1009 0055 27       		.uleb128 0x27
 1010 0056 19       		.uleb128 0x19
 1011 0057 11       		.uleb128 0x11
 1012 0058 01       		.uleb128 0x1
 1013 0059 12       		.uleb128 0x12
 1014 005a 06       		.uleb128 0x6
 1015 005b 40       		.uleb128 0x40
 1016 005c 18       		.uleb128 0x18
 1017 005d 9642     		.uleb128 0x2116
 1018 005f 19       		.uleb128 0x19
 1019 0060 01       		.uleb128 0x1
 1020 0061 13       		.uleb128 0x13
 1021 0062 00       		.byte	0
 1022 0063 00       		.byte	0
 1023 0064 08       		.uleb128 0x8
 1024 0065 34       		.uleb128 0x34
 1025 0066 00       		.byte	0
 1026 0067 03       		.uleb128 0x3
 1027 0068 0E       		.uleb128 0xe
 1028 0069 3A       		.uleb128 0x3a
 1029 006a 0B       		.uleb128 0xb
 1030 006b 3B       		.uleb128 0x3b
 1031 006c 0B       		.uleb128 0xb
 1032 006d 49       		.uleb128 0x49
 1033 006e 13       		.uleb128 0x13
 1034 006f 02       		.uleb128 0x2
 1035 0070 18       		.uleb128 0x18
 1036 0071 00       		.byte	0
 1037 0072 00       		.byte	0
 1038 0073 09       		.uleb128 0x9
 1039 0074 2E       		.uleb128 0x2e
 1040 0075 00       		.byte	0
 1041 0076 3F       		.uleb128 0x3f
 1042 0077 19       		.uleb128 0x19
 1043 0078 03       		.uleb128 0x3
 1044 0079 0E       		.uleb128 0xe
 1045 007a 3A       		.uleb128 0x3a
 1046 007b 0B       		.uleb128 0xb
 1047 007c 3B       		.uleb128 0x3b
 1048 007d 0B       		.uleb128 0xb
 1049 007e 27       		.uleb128 0x27
 1050 007f 19       		.uleb128 0x19
 1051 0080 11       		.uleb128 0x11
 1052 0081 01       		.uleb128 0x1
 1053 0082 12       		.uleb128 0x12
 1054 0083 06       		.uleb128 0x6
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 33


 1055 0084 40       		.uleb128 0x40
 1056 0085 18       		.uleb128 0x18
 1057 0086 9742     		.uleb128 0x2117
 1058 0088 19       		.uleb128 0x19
 1059 0089 00       		.byte	0
 1060 008a 00       		.byte	0
 1061 008b 0A       		.uleb128 0xa
 1062 008c 2E       		.uleb128 0x2e
 1063 008d 00       		.byte	0
 1064 008e 3F       		.uleb128 0x3f
 1065 008f 19       		.uleb128 0x19
 1066 0090 03       		.uleb128 0x3
 1067 0091 0E       		.uleb128 0xe
 1068 0092 3A       		.uleb128 0x3a
 1069 0093 0B       		.uleb128 0xb
 1070 0094 3B       		.uleb128 0x3b
 1071 0095 0B       		.uleb128 0xb
 1072 0096 27       		.uleb128 0x27
 1073 0097 19       		.uleb128 0x19
 1074 0098 11       		.uleb128 0x11
 1075 0099 01       		.uleb128 0x1
 1076 009a 12       		.uleb128 0x12
 1077 009b 06       		.uleb128 0x6
 1078 009c 40       		.uleb128 0x40
 1079 009d 18       		.uleb128 0x18
 1080 009e 9642     		.uleb128 0x2116
 1081 00a0 19       		.uleb128 0x19
 1082 00a1 00       		.byte	0
 1083 00a2 00       		.byte	0
 1084 00a3 0B       		.uleb128 0xb
 1085 00a4 2E       		.uleb128 0x2e
 1086 00a5 01       		.byte	0x1
 1087 00a6 3F       		.uleb128 0x3f
 1088 00a7 19       		.uleb128 0x19
 1089 00a8 03       		.uleb128 0x3
 1090 00a9 0E       		.uleb128 0xe
 1091 00aa 3A       		.uleb128 0x3a
 1092 00ab 0B       		.uleb128 0xb
 1093 00ac 3B       		.uleb128 0x3b
 1094 00ad 05       		.uleb128 0x5
 1095 00ae 27       		.uleb128 0x27
 1096 00af 19       		.uleb128 0x19
 1097 00b0 11       		.uleb128 0x11
 1098 00b1 01       		.uleb128 0x1
 1099 00b2 12       		.uleb128 0x12
 1100 00b3 06       		.uleb128 0x6
 1101 00b4 40       		.uleb128 0x40
 1102 00b5 18       		.uleb128 0x18
 1103 00b6 9742     		.uleb128 0x2117
 1104 00b8 19       		.uleb128 0x19
 1105 00b9 01       		.uleb128 0x1
 1106 00ba 13       		.uleb128 0x13
 1107 00bb 00       		.byte	0
 1108 00bc 00       		.byte	0
 1109 00bd 0C       		.uleb128 0xc
 1110 00be 05       		.uleb128 0x5
 1111 00bf 00       		.byte	0
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 34


 1112 00c0 03       		.uleb128 0x3
 1113 00c1 0E       		.uleb128 0xe
 1114 00c2 3A       		.uleb128 0x3a
 1115 00c3 0B       		.uleb128 0xb
 1116 00c4 3B       		.uleb128 0x3b
 1117 00c5 05       		.uleb128 0x5
 1118 00c6 49       		.uleb128 0x49
 1119 00c7 13       		.uleb128 0x13
 1120 00c8 02       		.uleb128 0x2
 1121 00c9 18       		.uleb128 0x18
 1122 00ca 00       		.byte	0
 1123 00cb 00       		.byte	0
 1124 00cc 0D       		.uleb128 0xd
 1125 00cd 2E       		.uleb128 0x2e
 1126 00ce 00       		.byte	0
 1127 00cf 3F       		.uleb128 0x3f
 1128 00d0 19       		.uleb128 0x19
 1129 00d1 03       		.uleb128 0x3
 1130 00d2 0E       		.uleb128 0xe
 1131 00d3 3A       		.uleb128 0x3a
 1132 00d4 0B       		.uleb128 0xb
 1133 00d5 3B       		.uleb128 0x3b
 1134 00d6 05       		.uleb128 0x5
 1135 00d7 27       		.uleb128 0x27
 1136 00d8 19       		.uleb128 0x19
 1137 00d9 11       		.uleb128 0x11
 1138 00da 01       		.uleb128 0x1
 1139 00db 12       		.uleb128 0x12
 1140 00dc 06       		.uleb128 0x6
 1141 00dd 40       		.uleb128 0x40
 1142 00de 18       		.uleb128 0x18
 1143 00df 9742     		.uleb128 0x2117
 1144 00e1 19       		.uleb128 0x19
 1145 00e2 00       		.byte	0
 1146 00e3 00       		.byte	0
 1147 00e4 0E       		.uleb128 0xe
 1148 00e5 2E       		.uleb128 0x2e
 1149 00e6 00       		.byte	0
 1150 00e7 3F       		.uleb128 0x3f
 1151 00e8 19       		.uleb128 0x19
 1152 00e9 03       		.uleb128 0x3
 1153 00ea 0E       		.uleb128 0xe
 1154 00eb 3A       		.uleb128 0x3a
 1155 00ec 0B       		.uleb128 0xb
 1156 00ed 3B       		.uleb128 0x3b
 1157 00ee 05       		.uleb128 0x5
 1158 00ef 27       		.uleb128 0x27
 1159 00f0 19       		.uleb128 0x19
 1160 00f1 49       		.uleb128 0x49
 1161 00f2 13       		.uleb128 0x13
 1162 00f3 11       		.uleb128 0x11
 1163 00f4 01       		.uleb128 0x1
 1164 00f5 12       		.uleb128 0x12
 1165 00f6 06       		.uleb128 0x6
 1166 00f7 40       		.uleb128 0x40
 1167 00f8 18       		.uleb128 0x18
 1168 00f9 9742     		.uleb128 0x2117
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 35


 1169 00fb 19       		.uleb128 0x19
 1170 00fc 00       		.byte	0
 1171 00fd 00       		.byte	0
 1172 00fe 0F       		.uleb128 0xf
 1173 00ff 2E       		.uleb128 0x2e
 1174 0100 00       		.byte	0
 1175 0101 3F       		.uleb128 0x3f
 1176 0102 19       		.uleb128 0x19
 1177 0103 03       		.uleb128 0x3
 1178 0104 0E       		.uleb128 0xe
 1179 0105 3A       		.uleb128 0x3a
 1180 0106 0B       		.uleb128 0xb
 1181 0107 3B       		.uleb128 0x3b
 1182 0108 05       		.uleb128 0x5
 1183 0109 27       		.uleb128 0x27
 1184 010a 19       		.uleb128 0x19
 1185 010b 11       		.uleb128 0x11
 1186 010c 01       		.uleb128 0x1
 1187 010d 12       		.uleb128 0x12
 1188 010e 06       		.uleb128 0x6
 1189 010f 40       		.uleb128 0x40
 1190 0110 18       		.uleb128 0x18
 1191 0111 9642     		.uleb128 0x2116
 1192 0113 19       		.uleb128 0x19
 1193 0114 00       		.byte	0
 1194 0115 00       		.byte	0
 1195 0116 10       		.uleb128 0x10
 1196 0117 34       		.uleb128 0x34
 1197 0118 00       		.byte	0
 1198 0119 03       		.uleb128 0x3
 1199 011a 0E       		.uleb128 0xe
 1200 011b 3A       		.uleb128 0x3a
 1201 011c 0B       		.uleb128 0xb
 1202 011d 3B       		.uleb128 0x3b
 1203 011e 0B       		.uleb128 0xb
 1204 011f 49       		.uleb128 0x49
 1205 0120 13       		.uleb128 0x13
 1206 0121 3F       		.uleb128 0x3f
 1207 0122 19       		.uleb128 0x19
 1208 0123 02       		.uleb128 0x2
 1209 0124 18       		.uleb128 0x18
 1210 0125 00       		.byte	0
 1211 0126 00       		.byte	0
 1212 0127 00       		.byte	0
 1213              		.section	.debug_aranges,"",%progbits
 1214 0000 8C000000 		.4byte	0x8c
 1215 0004 0200     		.2byte	0x2
 1216 0006 00000000 		.4byte	.Ldebug_info0
 1217 000a 04       		.byte	0x4
 1218 000b 00       		.byte	0
 1219 000c 0000     		.2byte	0
 1220 000e 0000     		.2byte	0
 1221 0010 00000000 		.4byte	.LFB0
 1222 0014 4C000000 		.4byte	.LFE0-.LFB0
 1223 0018 00000000 		.4byte	.LFB1
 1224 001c 20000000 		.4byte	.LFE1-.LFB1
 1225 0020 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 36


 1226 0024 20000000 		.4byte	.LFE2-.LFB2
 1227 0028 00000000 		.4byte	.LFB3
 1228 002c 20000000 		.4byte	.LFE3-.LFB3
 1229 0030 00000000 		.4byte	.LFB4
 1230 0034 20000000 		.4byte	.LFE4-.LFB4
 1231 0038 00000000 		.4byte	.LFB5
 1232 003c 14000000 		.4byte	.LFE5-.LFB5
 1233 0040 00000000 		.4byte	.LFB6
 1234 0044 18000000 		.4byte	.LFE6-.LFB6
 1235 0048 00000000 		.4byte	.LFB7
 1236 004c 18000000 		.4byte	.LFE7-.LFB7
 1237 0050 00000000 		.4byte	.LFB8
 1238 0054 20000000 		.4byte	.LFE8-.LFB8
 1239 0058 00000000 		.4byte	.LFB9
 1240 005c 18000000 		.4byte	.LFE9-.LFB9
 1241 0060 00000000 		.4byte	.LFB10
 1242 0064 1C000000 		.4byte	.LFE10-.LFB10
 1243 0068 00000000 		.4byte	.LFB11
 1244 006c 18000000 		.4byte	.LFE11-.LFB11
 1245 0070 00000000 		.4byte	.LFB12
 1246 0074 1C000000 		.4byte	.LFE12-.LFB12
 1247 0078 00000000 		.4byte	.LFB13
 1248 007c 20000000 		.4byte	.LFE13-.LFB13
 1249 0080 00000000 		.4byte	.LFB14
 1250 0084 1A000000 		.4byte	.LFE14-.LFB14
 1251 0088 00000000 		.4byte	0
 1252 008c 00000000 		.4byte	0
 1253              		.section	.debug_ranges,"",%progbits
 1254              	.Ldebug_ranges0:
 1255 0000 00000000 		.4byte	.LFB0
 1256 0004 4C000000 		.4byte	.LFE0
 1257 0008 00000000 		.4byte	.LFB1
 1258 000c 20000000 		.4byte	.LFE1
 1259 0010 00000000 		.4byte	.LFB2
 1260 0014 20000000 		.4byte	.LFE2
 1261 0018 00000000 		.4byte	.LFB3
 1262 001c 20000000 		.4byte	.LFE3
 1263 0020 00000000 		.4byte	.LFB4
 1264 0024 20000000 		.4byte	.LFE4
 1265 0028 00000000 		.4byte	.LFB5
 1266 002c 14000000 		.4byte	.LFE5
 1267 0030 00000000 		.4byte	.LFB6
 1268 0034 18000000 		.4byte	.LFE6
 1269 0038 00000000 		.4byte	.LFB7
 1270 003c 18000000 		.4byte	.LFE7
 1271 0040 00000000 		.4byte	.LFB8
 1272 0044 20000000 		.4byte	.LFE8
 1273 0048 00000000 		.4byte	.LFB9
 1274 004c 18000000 		.4byte	.LFE9
 1275 0050 00000000 		.4byte	.LFB10
 1276 0054 1C000000 		.4byte	.LFE10
 1277 0058 00000000 		.4byte	.LFB11
 1278 005c 18000000 		.4byte	.LFE11
 1279 0060 00000000 		.4byte	.LFB12
 1280 0064 1C000000 		.4byte	.LFE12
 1281 0068 00000000 		.4byte	.LFB13
 1282 006c 20000000 		.4byte	.LFE13
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 37


 1283 0070 00000000 		.4byte	.LFB14
 1284 0074 1A000000 		.4byte	.LFE14
 1285 0078 00000000 		.4byte	0
 1286 007c 00000000 		.4byte	0
 1287              		.section	.debug_line,"",%progbits
 1288              	.Ldebug_line0:
 1289 0000 72010000 		.section	.debug_str,"MS",%progbits,1
 1289      02004A00 
 1289      00000201 
 1289      FB0E0D00 
 1289      01010101 
 1290              	.LASF19:
 1291 0000 54696D65 		.ascii	"Timer_Cycle_Stop\000"
 1291      725F4379 
 1291      636C655F 
 1291      53746F70 
 1291      00
 1292              	.LASF15:
 1293 0011 72656733 		.ascii	"reg32\000"
 1293      3200
 1294              	.LASF30:
 1295 0017 70657269 		.ascii	"period\000"
 1295      6F6400
 1296              	.LASF3:
 1297 001e 73686F72 		.ascii	"short unsigned int\000"
 1297      7420756E 
 1297      7369676E 
 1297      65642069 
 1297      6E7400
 1298              	.LASF38:
 1299 0031 433A5C55 		.ascii	"C:\\Users\\gaul2016\\Desktop\\TAC_PID\\TAC_PSOC5.cy"
 1299      73657273 
 1299      5C676175 
 1299      6C323031 
 1299      365C4465 
 1300 005f 64736E00 		.ascii	"dsn\000"
 1301              	.LASF37:
 1302 0063 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\Timer_Cycle.c\000"
 1302      6E657261 
 1302      7465645F 
 1302      536F7572 
 1302      63655C50 
 1303              	.LASF39:
 1304 008a 54696D65 		.ascii	"Timer_Cycle_interruptState\000"
 1304      725F4379 
 1304      636C655F 
 1304      696E7465 
 1304      72727570 
 1305              	.LASF11:
 1306 00a5 666C6F61 		.ascii	"float\000"
 1306      7400
 1307              	.LASF33:
 1308 00ab 636F756E 		.ascii	"counter\000"
 1308      74657200 
 1309              	.LASF7:
 1310 00b3 6C6F6E67 		.ascii	"long long unsigned int\000"
 1310      206C6F6E 
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 38


 1310      6720756E 
 1310      7369676E 
 1310      65642069 
 1311              	.LASF1:
 1312 00ca 756E7369 		.ascii	"unsigned char\000"
 1312      676E6564 
 1312      20636861 
 1312      7200
 1313              	.LASF14:
 1314 00d8 72656738 		.ascii	"reg8\000"
 1314      00
 1315              	.LASF5:
 1316 00dd 6C6F6E67 		.ascii	"long unsigned int\000"
 1316      20756E73 
 1316      69676E65 
 1316      6420696E 
 1316      7400
 1317              	.LASF18:
 1318 00ef 54696D65 		.ascii	"Timer_Cycle_Start\000"
 1318      725F4379 
 1318      636C655F 
 1318      53746172 
 1318      7400
 1319              	.LASF9:
 1320 0101 75696E74 		.ascii	"uint8\000"
 1320      3800
 1321              	.LASF27:
 1322 0107 636F6E74 		.ascii	"control\000"
 1322      726F6C00 
 1323              	.LASF23:
 1324 010f 54696D65 		.ascii	"Timer_Cycle_ReadStatusRegister\000"
 1324      725F4379 
 1324      636C655F 
 1324      52656164 
 1324      53746174 
 1325              	.LASF36:
 1326 012e 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1326      4320342E 
 1326      392E3320 
 1326      32303135 
 1326      30333033 
 1327 0161 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1327      20726576 
 1327      6973696F 
 1327      6E203232 
 1327      31323230 
 1328 0194 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1328      66756E63 
 1328      74696F6E 
 1328      2D736563 
 1328      74696F6E 
 1329              	.LASF12:
 1330 01bc 646F7562 		.ascii	"double\000"
 1330      6C6500
 1331              	.LASF10:
 1332 01c3 75696E74 		.ascii	"uint32\000"
 1332      333200
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 39


 1333              	.LASF8:
 1334 01ca 756E7369 		.ascii	"unsigned int\000"
 1334      676E6564 
 1334      20696E74 
 1334      00
 1335              	.LASF25:
 1336 01d7 54696D65 		.ascii	"Timer_Cycle_WriteControlRegister\000"
 1336      725F4379 
 1336      636C655F 
 1336      57726974 
 1336      65436F6E 
 1337              	.LASF17:
 1338 01f8 54696D65 		.ascii	"Timer_Cycle_Enable\000"
 1338      725F4379 
 1338      636C655F 
 1338      456E6162 
 1338      6C6500
 1339              	.LASF35:
 1340 020b 54696D65 		.ascii	"Timer_Cycle_ClearFIFO\000"
 1340      725F4379 
 1340      636C655F 
 1340      436C6561 
 1340      72464946 
 1341              	.LASF20:
 1342 0221 54696D65 		.ascii	"Timer_Cycle_Init\000"
 1342      725F4379 
 1342      636C655F 
 1342      496E6974 
 1342      00
 1343              	.LASF16:
 1344 0232 73697A65 		.ascii	"sizetype\000"
 1344      74797065 
 1344      00
 1345              	.LASF6:
 1346 023b 6C6F6E67 		.ascii	"long long int\000"
 1346      206C6F6E 
 1346      6720696E 
 1346      7400
 1347              	.LASF26:
 1348 0249 696E7465 		.ascii	"interruptMode\000"
 1348      72727570 
 1348      744D6F64 
 1348      6500
 1349              	.LASF29:
 1350 0257 54696D65 		.ascii	"Timer_Cycle_WritePeriod\000"
 1350      725F4379 
 1350      636C655F 
 1350      57726974 
 1350      65506572 
 1351              	.LASF2:
 1352 026f 73686F72 		.ascii	"short int\000"
 1352      7420696E 
 1352      7400
 1353              	.LASF40:
 1354 0279 54696D65 		.ascii	"Timer_Cycle_initVar\000"
 1354      725F4379 
 1354      636C655F 
ARM GAS  C:\Users\gaul2016\AppData\Local\Temp\ccIoTNqT.s 			page 40


 1354      696E6974 
 1354      56617200 
 1355              	.LASF24:
 1356 028d 54696D65 		.ascii	"Timer_Cycle_ReadControlRegister\000"
 1356      725F4379 
 1356      636C655F 
 1356      52656164 
 1356      436F6E74 
 1357              	.LASF34:
 1358 02ad 54696D65 		.ascii	"Timer_Cycle_ReadCounter\000"
 1358      725F4379 
 1358      636C655F 
 1358      52656164 
 1358      436F756E 
 1359              	.LASF21:
 1360 02c5 54696D65 		.ascii	"Timer_Cycle_SetInterruptMode\000"
 1360      725F4379 
 1360      636C655F 
 1360      53657449 
 1360      6E746572 
 1361              	.LASF4:
 1362 02e2 6C6F6E67 		.ascii	"long int\000"
 1362      20696E74 
 1362      00
 1363              	.LASF13:
 1364 02eb 63686172 		.ascii	"char\000"
 1364      00
 1365              	.LASF0:
 1366 02f0 7369676E 		.ascii	"signed char\000"
 1366      65642063 
 1366      68617200 
 1367              	.LASF28:
 1368 02fc 54696D65 		.ascii	"Timer_Cycle_ReadPeriod\000"
 1368      725F4379 
 1368      636C655F 
 1368      52656164 
 1368      50657269 
 1369              	.LASF32:
 1370 0313 54696D65 		.ascii	"Timer_Cycle_WriteCounter\000"
 1370      725F4379 
 1370      636C655F 
 1370      57726974 
 1370      65436F75 
 1371              	.LASF22:
 1372 032c 54696D65 		.ascii	"Timer_Cycle_SoftwareCapture\000"
 1372      725F4379 
 1372      636C655F 
 1372      536F6674 
 1372      77617265 
 1373              	.LASF31:
 1374 0348 54696D65 		.ascii	"Timer_Cycle_ReadCapture\000"
 1374      725F4379 
 1374      636C655F 
 1374      52656164 
 1374      43617074 
 1375              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
