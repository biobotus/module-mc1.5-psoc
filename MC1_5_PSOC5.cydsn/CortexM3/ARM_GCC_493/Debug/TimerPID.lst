ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"TimerPID.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	TimerPID_initVar
  19              		.bss
  20              		.type	TimerPID_initVar, %object
  21              		.size	TimerPID_initVar, 1
  22              	TimerPID_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.TimerPID_Init,"ax",%progbits
  25              		.align	2
  26              		.global	TimerPID_Init
  27              		.thumb
  28              		.thumb_func
  29              		.type	TimerPID_Init, %function
  30              	TimerPID_Init:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\TimerPID.c"
   1:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/TimerPID.c **** * File Name: TimerPID.c
   3:.\Generated_Source\PSoC5/TimerPID.c **** * Version 2.70
   4:.\Generated_Source\PSoC5/TimerPID.c **** *
   5:.\Generated_Source\PSoC5/TimerPID.c **** * Description:
   6:.\Generated_Source\PSoC5/TimerPID.c **** *  The Timer component consists of a 8, 16, 24 or 32-bit timer with
   7:.\Generated_Source\PSoC5/TimerPID.c **** *  a selectable period between 2 and 2^Width - 1.  The timer may free run
   8:.\Generated_Source\PSoC5/TimerPID.c **** *  or be used as a capture timer as well.  The capture can be initiated
   9:.\Generated_Source\PSoC5/TimerPID.c **** *  by a positive or negative edge signal as well as via software.
  10:.\Generated_Source\PSoC5/TimerPID.c **** *  A trigger input can be programmed to enable the timer on rising edge
  11:.\Generated_Source\PSoC5/TimerPID.c **** *  falling edge, either edge or continous run.
  12:.\Generated_Source\PSoC5/TimerPID.c **** *  Interrupts may be generated due to a terminal count condition
  13:.\Generated_Source\PSoC5/TimerPID.c **** *  or a capture event.
  14:.\Generated_Source\PSoC5/TimerPID.c **** *
  15:.\Generated_Source\PSoC5/TimerPID.c **** * Note:
  16:.\Generated_Source\PSoC5/TimerPID.c **** *
  17:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
  18:.\Generated_Source\PSoC5/TimerPID.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  19:.\Generated_Source\PSoC5/TimerPID.c **** * You may use this file only in accordance with the license, terms, conditions,
  20:.\Generated_Source\PSoC5/TimerPID.c **** * disclaimers, and limitations in the end user license agreement accompanying
  21:.\Generated_Source\PSoC5/TimerPID.c **** * the software package with which this file was provided.
  22:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************/
  23:.\Generated_Source\PSoC5/TimerPID.c **** 
  24:.\Generated_Source\PSoC5/TimerPID.c **** #include "TimerPID.h"
  25:.\Generated_Source\PSoC5/TimerPID.c **** 
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 2


  26:.\Generated_Source\PSoC5/TimerPID.c **** uint8 TimerPID_initVar = 0u;
  27:.\Generated_Source\PSoC5/TimerPID.c **** 
  28:.\Generated_Source\PSoC5/TimerPID.c **** 
  29:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
  30:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_Init
  31:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
  32:.\Generated_Source\PSoC5/TimerPID.c **** *
  33:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
  34:.\Generated_Source\PSoC5/TimerPID.c **** *  Initialize to the schematic state
  35:.\Generated_Source\PSoC5/TimerPID.c **** *
  36:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
  37:.\Generated_Source\PSoC5/TimerPID.c **** *  void
  38:.\Generated_Source\PSoC5/TimerPID.c **** *
  39:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
  40:.\Generated_Source\PSoC5/TimerPID.c **** *  void
  41:.\Generated_Source\PSoC5/TimerPID.c **** *
  42:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
  43:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_Init(void) 
  44:.\Generated_Source\PSoC5/TimerPID.c **** {
  33              		.loc 1 44 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45:.\Generated_Source\PSoC5/TimerPID.c ****     #if(!TimerPID_UsingFixedFunction)
  46:.\Generated_Source\PSoC5/TimerPID.c ****             /* Interrupt State Backup for Critical Region*/
  47:.\Generated_Source\PSoC5/TimerPID.c ****             uint8 TimerPID_interruptState;
  48:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Interrupt state back up for Fixed Function only */
  49:.\Generated_Source\PSoC5/TimerPID.c **** 
  50:.\Generated_Source\PSoC5/TimerPID.c ****     #if (TimerPID_UsingFixedFunction)
  51:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear all bits but the enable bit (if it's already set) for Timer operation */
  52:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= TimerPID_CTRL_ENABLE;
  53:.\Generated_Source\PSoC5/TimerPID.c **** 
  54:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear the mode bits for continuous run mode */
  55:.\Generated_Source\PSoC5/TimerPID.c ****         #if (CY_PSOC5A)
  56:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_CONTROL2 &= ((uint8)(~TimerPID_CTRL_MODE_MASK));
  57:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Clear bits in CONTROL2 only in PSOC5A */
  58:.\Generated_Source\PSoC5/TimerPID.c **** 
  59:.\Generated_Source\PSoC5/TimerPID.c ****         #if (CY_PSOC3 || CY_PSOC5LP)
  60:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_CONTROL3 &= ((uint8)(~TimerPID_CTRL_MODE_MASK));
  61:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* CONTROL3 register exists only in PSoC3 OR PSoC5LP */
  62:.\Generated_Source\PSoC5/TimerPID.c **** 
  63:.\Generated_Source\PSoC5/TimerPID.c ****         /* Check if One Shot mode is enabled i.e. RunMode !=0*/
  64:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_RunModeUsed != 0x0u)
  65:.\Generated_Source\PSoC5/TimerPID.c ****             /* Set 3rd bit of Control register to enable one shot mode */
  66:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_CONTROL |= 0x04u;
  67:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* One Shot enabled only when RunModeUsed is not Continuous*/
  68:.\Generated_Source\PSoC5/TimerPID.c **** 
  69:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_RunModeUsed == 2)
  70:.\Generated_Source\PSoC5/TimerPID.c ****             #if (CY_PSOC5A)
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 3


  71:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Set last 2 bits of control2 register if one shot(halt on
  72:.\Generated_Source\PSoC5/TimerPID.c ****                 interrupt) is enabled*/
  73:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL2 |= 0x03u;
  74:.\Generated_Source\PSoC5/TimerPID.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL2 for PSoC5A */
  75:.\Generated_Source\PSoC5/TimerPID.c **** 
  76:.\Generated_Source\PSoC5/TimerPID.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  77:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Set last 2 bits of control3 register if one shot(halt on
  78:.\Generated_Source\PSoC5/TimerPID.c ****                 interrupt) is enabled*/
  79:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 |= 0x03u;
  80:.\Generated_Source\PSoC5/TimerPID.c ****             #endif /* Set One-Shot Halt on Interrupt bit in CONTROL3 for PSoC3 or PSoC5LP */
  81:.\Generated_Source\PSoC5/TimerPID.c **** 
  82:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Remove section if One Shot Halt on Interrupt is not enabled */
  83:.\Generated_Source\PSoC5/TimerPID.c **** 
  84:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_UsingHWEnable != 0)
  85:.\Generated_Source\PSoC5/TimerPID.c ****             #if (CY_PSOC5A)
  86:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Set the default Run Mode of the Timer to Continuous */
  87:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL2 |= TimerPID_CTRL_MODE_PULSEWIDTH;
  88:.\Generated_Source\PSoC5/TimerPID.c ****             #endif /* Set Continuous Run Mode in CONTROL2 for PSoC5A */
  89:.\Generated_Source\PSoC5/TimerPID.c **** 
  90:.\Generated_Source\PSoC5/TimerPID.c ****             #if (CY_PSOC3 || CY_PSOC5LP)
  91:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Clear and Set ROD and COD bits of CFG2 register */
  92:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 &= ((uint8)(~TimerPID_CTRL_RCOD_MASK));
  93:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 |= TimerPID_CTRL_RCOD;
  94:.\Generated_Source\PSoC5/TimerPID.c **** 
  95:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Clear and Enable the HW enable bit in CFG2 register */
  96:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 &= ((uint8)(~TimerPID_CTRL_ENBL_MASK));
  97:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 |= TimerPID_CTRL_ENBL;
  98:.\Generated_Source\PSoC5/TimerPID.c **** 
  99:.\Generated_Source\PSoC5/TimerPID.c ****                 /* Set the default Run Mode of the Timer to Continuous */
 100:.\Generated_Source\PSoC5/TimerPID.c ****                 TimerPID_CONTROL3 |= TimerPID_CTRL_MODE_CONTINUOUS;
 101:.\Generated_Source\PSoC5/TimerPID.c ****             #endif /* Set Continuous Run Mode in CONTROL3 for PSoC3ES3 or PSoC5A */
 102:.\Generated_Source\PSoC5/TimerPID.c **** 
 103:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Configure Run Mode with hardware enable */
 104:.\Generated_Source\PSoC5/TimerPID.c **** 
 105:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear and Set SYNCTC and SYNCCMP bits of RT1 register */
 106:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_RT1 &= ((uint8)(~TimerPID_RT1_MASK));
 107:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_RT1 |= TimerPID_SYNC;
 108:.\Generated_Source\PSoC5/TimerPID.c **** 
 109:.\Generated_Source\PSoC5/TimerPID.c ****         /*Enable DSI Sync all all inputs of the Timer*/
 110:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_RT1 &= ((uint8)(~TimerPID_SYNCDSI_MASK));
 111:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_RT1 |= TimerPID_SYNCDSI_EN;
 112:.\Generated_Source\PSoC5/TimerPID.c **** 
 113:.\Generated_Source\PSoC5/TimerPID.c ****         /* Set the IRQ to use the status register interrupts */
 114:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL2 |= TimerPID_CTRL2_IRQ_SEL;
 115:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Configuring registers of fixed function implementation */
 116:.\Generated_Source\PSoC5/TimerPID.c **** 
 117:.\Generated_Source\PSoC5/TimerPID.c ****     /* Set Initial values from Configuration */
 118:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_WritePeriod(TimerPID_INIT_PERIOD);
  45              		.loc 1 118 0
  46 0006 0F48     		ldr	r0, .L2
  47 0008 FFF7FEFF 		bl	TimerPID_WritePeriod
 119:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_WriteCounter(TimerPID_INIT_PERIOD);
  48              		.loc 1 119 0
  49 000c 0D48     		ldr	r0, .L2
  50 000e FFF7FEFF 		bl	TimerPID_WriteCounter
 120:.\Generated_Source\PSoC5/TimerPID.c **** 
 121:.\Generated_Source\PSoC5/TimerPID.c ****     #if (TimerPID_UsingHWCaptureCounter)/* Capture counter is enabled */
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 4


 122:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CAPTURE_COUNT_CTRL |= TimerPID_CNTR_ENABLE;
 123:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_SetCaptureCount(TimerPID_INIT_CAPTURE_COUNT);
 124:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Configure capture counter value */
 125:.\Generated_Source\PSoC5/TimerPID.c **** 
 126:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UsingFixedFunction)
 127:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_SoftwareCaptureMode)
 128:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_SetCaptureMode(TimerPID_INIT_CAPTURE_MODE);
 129:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Set Capture Mode for UDB implementation if capture mode is software controlled */
 130:.\Generated_Source\PSoC5/TimerPID.c **** 
 131:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_SoftwareTriggerMode)
 132:.\Generated_Source\PSoC5/TimerPID.c ****             #if (!TimerPID_UDB_CONTROL_REG_REMOVED)
 133:.\Generated_Source\PSoC5/TimerPID.c ****                 if (0u == (TimerPID_CONTROL & TimerPID__B_TIMER__TM_SOFTWARE))
 134:.\Generated_Source\PSoC5/TimerPID.c ****                 {
 135:.\Generated_Source\PSoC5/TimerPID.c ****                     TimerPID_SetTriggerMode(TimerPID_INIT_TRIGGER_MODE);
 136:.\Generated_Source\PSoC5/TimerPID.c ****                 }
 137:.\Generated_Source\PSoC5/TimerPID.c ****             #endif /* (!TimerPID_UDB_CONTROL_REG_REMOVED) */
 138:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Set trigger mode for UDB Implementation if trigger mode is software controlled */
 139:.\Generated_Source\PSoC5/TimerPID.c **** 
 140:.\Generated_Source\PSoC5/TimerPID.c ****         /* CyEnterCriticalRegion and CyExitCriticalRegion are used to mark following region critica
 141:.\Generated_Source\PSoC5/TimerPID.c ****         /* Enter Critical Region*/
 142:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_interruptState = CyEnterCriticalSection();
  51              		.loc 1 142 0
  52 0012 FFF7FEFF 		bl	CyEnterCriticalSection
  53 0016 0346     		mov	r3, r0
  54 0018 FB71     		strb	r3, [r7, #7]
 143:.\Generated_Source\PSoC5/TimerPID.c **** 
 144:.\Generated_Source\PSoC5/TimerPID.c ****         /* Use the interrupt output of the status register for IRQ output */
 145:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_STATUS_AUX_CTRL |= TimerPID_STATUS_ACTL_INT_EN_MASK;
  55              		.loc 1 145 0
  56 001a 0B4A     		ldr	r2, .L2+4
  57 001c 0A4B     		ldr	r3, .L2+4
  58 001e 1B78     		ldrb	r3, [r3]
  59 0020 DBB2     		uxtb	r3, r3
  60 0022 43F01003 		orr	r3, r3, #16
  61 0026 DBB2     		uxtb	r3, r3
  62 0028 1370     		strb	r3, [r2]
 146:.\Generated_Source\PSoC5/TimerPID.c **** 
 147:.\Generated_Source\PSoC5/TimerPID.c ****         /* Exit Critical Region*/
 148:.\Generated_Source\PSoC5/TimerPID.c ****         CyExitCriticalSection(TimerPID_interruptState);
  63              		.loc 1 148 0
  64 002a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
  65 002c 1846     		mov	r0, r3
  66 002e FFF7FEFF 		bl	CyExitCriticalSection
 149:.\Generated_Source\PSoC5/TimerPID.c **** 
 150:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_EnableTriggerMode)
 151:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_EnableTrigger();
 152:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Set Trigger enable bit for UDB implementation in the control register*/
 153:.\Generated_Source\PSoC5/TimerPID.c **** 		
 154:.\Generated_Source\PSoC5/TimerPID.c **** 		
 155:.\Generated_Source\PSoC5/TimerPID.c ****         #if (TimerPID_InterruptOnCaptureCount && !TimerPID_UDB_CONTROL_REG_REMOVED)
 156:.\Generated_Source\PSoC5/TimerPID.c ****             TimerPID_SetInterruptCount(TimerPID_INIT_INT_CAPTURE_COUNT);
 157:.\Generated_Source\PSoC5/TimerPID.c ****         #endif /* Set interrupt count in UDB implementation if interrupt count feature is checked.*
 158:.\Generated_Source\PSoC5/TimerPID.c **** 
 159:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_ClearFIFO();
  67              		.loc 1 159 0
  68 0032 FFF7FEFF 		bl	TimerPID_ClearFIFO
 160:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Configure additional features of UDB implementation */
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 5


 161:.\Generated_Source\PSoC5/TimerPID.c **** 
 162:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_SetInterruptMode(TimerPID_INIT_INTERRUPT_MODE);
  69              		.loc 1 162 0
  70 0036 0120     		movs	r0, #1
  71 0038 FFF7FEFF 		bl	TimerPID_SetInterruptMode
 163:.\Generated_Source\PSoC5/TimerPID.c **** }
  72              		.loc 1 163 0
  73 003c 0837     		adds	r7, r7, #8
  74              		.cfi_def_cfa_offset 8
  75 003e BD46     		mov	sp, r7
  76              		.cfi_def_cfa_register 13
  77              		@ sp needed
  78 0040 80BD     		pop	{r7, pc}
  79              	.L3:
  80 0042 00BF     		.align	2
  81              	.L2:
  82 0044 FF1AB700 		.word	11999999
  83 0048 96650040 		.word	1073767830
  84              		.cfi_endproc
  85              	.LFE0:
  86              		.size	TimerPID_Init, .-TimerPID_Init
  87              		.section	.text.TimerPID_Enable,"ax",%progbits
  88              		.align	2
  89              		.global	TimerPID_Enable
  90              		.thumb
  91              		.thumb_func
  92              		.type	TimerPID_Enable, %function
  93              	TimerPID_Enable:
  94              	.LFB1:
 164:.\Generated_Source\PSoC5/TimerPID.c **** 
 165:.\Generated_Source\PSoC5/TimerPID.c **** 
 166:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 167:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_Enable
 168:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 169:.\Generated_Source\PSoC5/TimerPID.c **** *
 170:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 171:.\Generated_Source\PSoC5/TimerPID.c **** *  Enable the Timer
 172:.\Generated_Source\PSoC5/TimerPID.c **** *
 173:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 174:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 175:.\Generated_Source\PSoC5/TimerPID.c **** *
 176:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 177:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 178:.\Generated_Source\PSoC5/TimerPID.c **** *
 179:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 180:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_Enable(void) 
 181:.\Generated_Source\PSoC5/TimerPID.c **** {
  95              		.loc 1 181 0
  96              		.cfi_startproc
  97              		@ args = 0, pretend = 0, frame = 0
  98              		@ frame_needed = 1, uses_anonymous_args = 0
  99              		@ link register save eliminated.
 100 0000 80B4     		push	{r7}
 101              		.cfi_def_cfa_offset 4
 102              		.cfi_offset 7, -4
 103 0002 00AF     		add	r7, sp, #0
 104              		.cfi_def_cfa_register 7
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 6


 182:.\Generated_Source\PSoC5/TimerPID.c ****     /* Globally Enable the Fixed Function Block chosen */
 183:.\Generated_Source\PSoC5/TimerPID.c ****     #if (TimerPID_UsingFixedFunction)
 184:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_GLOBAL_ENABLE |= TimerPID_BLOCK_EN_MASK;
 185:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_GLOBAL_STBY_ENABLE |= TimerPID_BLOCK_STBY_EN_MASK;
 186:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Set Enable bit for enabling Fixed function timer*/
 187:.\Generated_Source\PSoC5/TimerPID.c **** 
 188:.\Generated_Source\PSoC5/TimerPID.c ****     /* Remove assignment if control register is removed */
 189:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED || TimerPID_UsingFixedFunction)
 190:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL |= TimerPID_CTRL_ENABLE;
 105              		.loc 1 190 0
 106 0004 054A     		ldr	r2, .L5
 107 0006 054B     		ldr	r3, .L5
 108 0008 1B78     		ldrb	r3, [r3]
 109 000a DBB2     		uxtb	r3, r3
 110 000c 63F07F03 		orn	r3, r3, #127
 111 0010 DBB2     		uxtb	r3, r3
 112 0012 1370     		strb	r3, [r2]
 191:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Remove assignment if control register is removed */
 192:.\Generated_Source\PSoC5/TimerPID.c **** }
 113              		.loc 1 192 0
 114 0014 BD46     		mov	sp, r7
 115              		.cfi_def_cfa_register 13
 116              		@ sp needed
 117 0016 5DF8047B 		ldr	r7, [sp], #4
 118              		.cfi_restore 7
 119              		.cfi_def_cfa_offset 0
 120 001a 7047     		bx	lr
 121              	.L6:
 122              		.align	2
 123              	.L5:
 124 001c 74650040 		.word	1073767796
 125              		.cfi_endproc
 126              	.LFE1:
 127              		.size	TimerPID_Enable, .-TimerPID_Enable
 128              		.section	.text.TimerPID_Start,"ax",%progbits
 129              		.align	2
 130              		.global	TimerPID_Start
 131              		.thumb
 132              		.thumb_func
 133              		.type	TimerPID_Start, %function
 134              	TimerPID_Start:
 135              	.LFB2:
 193:.\Generated_Source\PSoC5/TimerPID.c **** 
 194:.\Generated_Source\PSoC5/TimerPID.c **** 
 195:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 196:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_Start
 197:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 198:.\Generated_Source\PSoC5/TimerPID.c **** *
 199:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 200:.\Generated_Source\PSoC5/TimerPID.c **** *  The start function initializes the timer with the default values, the
 201:.\Generated_Source\PSoC5/TimerPID.c **** *  enables the timerto begin counting.  It does not enable interrupts,
 202:.\Generated_Source\PSoC5/TimerPID.c **** *  the EnableInt command should be called if interrupt generation is required.
 203:.\Generated_Source\PSoC5/TimerPID.c **** *
 204:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 205:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 206:.\Generated_Source\PSoC5/TimerPID.c **** *
 207:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 7


 208:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 209:.\Generated_Source\PSoC5/TimerPID.c **** *
 210:.\Generated_Source\PSoC5/TimerPID.c **** * Global variables:
 211:.\Generated_Source\PSoC5/TimerPID.c **** *  TimerPID_initVar: Is modified when this function is called for the
 212:.\Generated_Source\PSoC5/TimerPID.c **** *   first time. Is used to ensure that initialization happens only once.
 213:.\Generated_Source\PSoC5/TimerPID.c **** *
 214:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 215:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_Start(void) 
 216:.\Generated_Source\PSoC5/TimerPID.c **** {
 136              		.loc 1 216 0
 137              		.cfi_startproc
 138              		@ args = 0, pretend = 0, frame = 0
 139              		@ frame_needed = 1, uses_anonymous_args = 0
 140 0000 80B5     		push	{r7, lr}
 141              		.cfi_def_cfa_offset 8
 142              		.cfi_offset 7, -8
 143              		.cfi_offset 14, -4
 144 0002 00AF     		add	r7, sp, #0
 145              		.cfi_def_cfa_register 7
 217:.\Generated_Source\PSoC5/TimerPID.c ****     if(TimerPID_initVar == 0u)
 146              		.loc 1 217 0
 147 0004 054B     		ldr	r3, .L9
 148 0006 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 149 0008 002B     		cmp	r3, #0
 150 000a 04D1     		bne	.L8
 218:.\Generated_Source\PSoC5/TimerPID.c ****     {
 219:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_Init();
 151              		.loc 1 219 0
 152 000c FFF7FEFF 		bl	TimerPID_Init
 220:.\Generated_Source\PSoC5/TimerPID.c **** 
 221:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_initVar = 1u;   /* Clear this bit for Initialization */
 153              		.loc 1 221 0
 154 0010 024B     		ldr	r3, .L9
 155 0012 0122     		movs	r2, #1
 156 0014 1A70     		strb	r2, [r3]
 157              	.L8:
 222:.\Generated_Source\PSoC5/TimerPID.c ****     }
 223:.\Generated_Source\PSoC5/TimerPID.c **** 
 224:.\Generated_Source\PSoC5/TimerPID.c ****     /* Enable the Timer */
 225:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_Enable();
 158              		.loc 1 225 0
 159 0016 FFF7FEFF 		bl	TimerPID_Enable
 226:.\Generated_Source\PSoC5/TimerPID.c **** }
 160              		.loc 1 226 0
 161 001a 80BD     		pop	{r7, pc}
 162              	.L10:
 163              		.align	2
 164              	.L9:
 165 001c 00000000 		.word	TimerPID_initVar
 166              		.cfi_endproc
 167              	.LFE2:
 168              		.size	TimerPID_Start, .-TimerPID_Start
 169              		.section	.text.TimerPID_Stop,"ax",%progbits
 170              		.align	2
 171              		.global	TimerPID_Stop
 172              		.thumb
 173              		.thumb_func
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 8


 174              		.type	TimerPID_Stop, %function
 175              	TimerPID_Stop:
 176              	.LFB3:
 227:.\Generated_Source\PSoC5/TimerPID.c **** 
 228:.\Generated_Source\PSoC5/TimerPID.c **** 
 229:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 230:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_Stop
 231:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 232:.\Generated_Source\PSoC5/TimerPID.c **** *
 233:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 234:.\Generated_Source\PSoC5/TimerPID.c **** *  The stop function halts the timer, but does not change any modes or disable
 235:.\Generated_Source\PSoC5/TimerPID.c **** *  interrupts.
 236:.\Generated_Source\PSoC5/TimerPID.c **** *
 237:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 238:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 239:.\Generated_Source\PSoC5/TimerPID.c **** *
 240:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 241:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 242:.\Generated_Source\PSoC5/TimerPID.c **** *
 243:.\Generated_Source\PSoC5/TimerPID.c **** * Side Effects: If the Enable mode is set to Hardware only then this function
 244:.\Generated_Source\PSoC5/TimerPID.c **** *               has no effect on the operation of the timer.
 245:.\Generated_Source\PSoC5/TimerPID.c **** *
 246:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 247:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_Stop(void) 
 248:.\Generated_Source\PSoC5/TimerPID.c **** {
 177              		.loc 1 248 0
 178              		.cfi_startproc
 179              		@ args = 0, pretend = 0, frame = 0
 180              		@ frame_needed = 1, uses_anonymous_args = 0
 181              		@ link register save eliminated.
 182 0000 80B4     		push	{r7}
 183              		.cfi_def_cfa_offset 4
 184              		.cfi_offset 7, -4
 185 0002 00AF     		add	r7, sp, #0
 186              		.cfi_def_cfa_register 7
 249:.\Generated_Source\PSoC5/TimerPID.c ****     /* Disable Timer */
 250:.\Generated_Source\PSoC5/TimerPID.c ****     #if(!TimerPID_UDB_CONTROL_REG_REMOVED || TimerPID_UsingFixedFunction)
 251:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= ((uint8)(~TimerPID_CTRL_ENABLE));
 187              		.loc 1 251 0
 188 0004 054A     		ldr	r2, .L12
 189 0006 054B     		ldr	r3, .L12
 190 0008 1B78     		ldrb	r3, [r3]
 191 000a DBB2     		uxtb	r3, r3
 192 000c 03F07F03 		and	r3, r3, #127
 193 0010 DBB2     		uxtb	r3, r3
 194 0012 1370     		strb	r3, [r2]
 252:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Remove assignment if control register is removed */
 253:.\Generated_Source\PSoC5/TimerPID.c **** 
 254:.\Generated_Source\PSoC5/TimerPID.c ****     /* Globally disable the Fixed Function Block chosen */
 255:.\Generated_Source\PSoC5/TimerPID.c ****     #if (TimerPID_UsingFixedFunction)
 256:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_GLOBAL_ENABLE &= ((uint8)(~TimerPID_BLOCK_EN_MASK));
 257:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_GLOBAL_STBY_ENABLE &= ((uint8)(~TimerPID_BLOCK_STBY_EN_MASK));
 258:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Disable global enable for the Timer Fixed function block to stop the Timer*/
 259:.\Generated_Source\PSoC5/TimerPID.c **** }
 195              		.loc 1 259 0
 196 0014 BD46     		mov	sp, r7
 197              		.cfi_def_cfa_register 13
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 9


 198              		@ sp needed
 199 0016 5DF8047B 		ldr	r7, [sp], #4
 200              		.cfi_restore 7
 201              		.cfi_def_cfa_offset 0
 202 001a 7047     		bx	lr
 203              	.L13:
 204              		.align	2
 205              	.L12:
 206 001c 74650040 		.word	1073767796
 207              		.cfi_endproc
 208              	.LFE3:
 209              		.size	TimerPID_Stop, .-TimerPID_Stop
 210              		.section	.text.TimerPID_SetInterruptMode,"ax",%progbits
 211              		.align	2
 212              		.global	TimerPID_SetInterruptMode
 213              		.thumb
 214              		.thumb_func
 215              		.type	TimerPID_SetInterruptMode, %function
 216              	TimerPID_SetInterruptMode:
 217              	.LFB4:
 260:.\Generated_Source\PSoC5/TimerPID.c **** 
 261:.\Generated_Source\PSoC5/TimerPID.c **** 
 262:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 263:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SetInterruptMode
 264:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 265:.\Generated_Source\PSoC5/TimerPID.c **** *
 266:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 267:.\Generated_Source\PSoC5/TimerPID.c **** *  This function selects which of the interrupt inputs may cause an interrupt.
 268:.\Generated_Source\PSoC5/TimerPID.c **** *  The twosources are caputure and terminal.  One, both or neither may
 269:.\Generated_Source\PSoC5/TimerPID.c **** *  be selected.
 270:.\Generated_Source\PSoC5/TimerPID.c **** *
 271:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 272:.\Generated_Source\PSoC5/TimerPID.c **** *  interruptMode:   This parameter is used to enable interrups on either/or
 273:.\Generated_Source\PSoC5/TimerPID.c **** *                   terminal count or capture.
 274:.\Generated_Source\PSoC5/TimerPID.c **** *
 275:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 276:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 277:.\Generated_Source\PSoC5/TimerPID.c **** *
 278:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 279:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SetInterruptMode(uint8 interruptMode) 
 280:.\Generated_Source\PSoC5/TimerPID.c **** {
 218              		.loc 1 280 0
 219              		.cfi_startproc
 220              		@ args = 0, pretend = 0, frame = 8
 221              		@ frame_needed = 1, uses_anonymous_args = 0
 222              		@ link register save eliminated.
 223 0000 80B4     		push	{r7}
 224              		.cfi_def_cfa_offset 4
 225              		.cfi_offset 7, -4
 226 0002 83B0     		sub	sp, sp, #12
 227              		.cfi_def_cfa_offset 16
 228 0004 00AF     		add	r7, sp, #0
 229              		.cfi_def_cfa_register 7
 230 0006 0346     		mov	r3, r0
 231 0008 FB71     		strb	r3, [r7, #7]
 281:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_STATUS_MASK = interruptMode;
 232              		.loc 1 281 0
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 10


 233 000a 044A     		ldr	r2, .L15
 234 000c FB79     		ldrb	r3, [r7, #7]
 235 000e 1370     		strb	r3, [r2]
 282:.\Generated_Source\PSoC5/TimerPID.c **** }
 236              		.loc 1 282 0
 237 0010 0C37     		adds	r7, r7, #12
 238              		.cfi_def_cfa_offset 4
 239 0012 BD46     		mov	sp, r7
 240              		.cfi_def_cfa_register 13
 241              		@ sp needed
 242 0014 5DF8047B 		ldr	r7, [sp], #4
 243              		.cfi_restore 7
 244              		.cfi_def_cfa_offset 0
 245 0018 7047     		bx	lr
 246              	.L16:
 247 001a 00BF     		.align	2
 248              	.L15:
 249 001c 86650040 		.word	1073767814
 250              		.cfi_endproc
 251              	.LFE4:
 252              		.size	TimerPID_SetInterruptMode, .-TimerPID_SetInterruptMode
 253              		.section	.text.TimerPID_SoftwareCapture,"ax",%progbits
 254              		.align	2
 255              		.global	TimerPID_SoftwareCapture
 256              		.thumb
 257              		.thumb_func
 258              		.type	TimerPID_SoftwareCapture, %function
 259              	TimerPID_SoftwareCapture:
 260              	.LFB5:
 283:.\Generated_Source\PSoC5/TimerPID.c **** 
 284:.\Generated_Source\PSoC5/TimerPID.c **** 
 285:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 286:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SoftwareCapture
 287:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 288:.\Generated_Source\PSoC5/TimerPID.c **** *
 289:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 290:.\Generated_Source\PSoC5/TimerPID.c **** *  This function forces a capture independent of the capture signal.
 291:.\Generated_Source\PSoC5/TimerPID.c **** *
 292:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 293:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 294:.\Generated_Source\PSoC5/TimerPID.c **** *
 295:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 296:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 297:.\Generated_Source\PSoC5/TimerPID.c **** *
 298:.\Generated_Source\PSoC5/TimerPID.c **** * Side Effects:
 299:.\Generated_Source\PSoC5/TimerPID.c **** *  An existing hardware capture could be overwritten.
 300:.\Generated_Source\PSoC5/TimerPID.c **** *
 301:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 302:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SoftwareCapture(void) 
 303:.\Generated_Source\PSoC5/TimerPID.c **** {
 261              		.loc 1 303 0
 262              		.cfi_startproc
 263              		@ args = 0, pretend = 0, frame = 0
 264              		@ frame_needed = 1, uses_anonymous_args = 0
 265              		@ link register save eliminated.
 266 0000 80B4     		push	{r7}
 267              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 11


 268              		.cfi_offset 7, -4
 269 0002 00AF     		add	r7, sp, #0
 270              		.cfi_def_cfa_register 7
 304:.\Generated_Source\PSoC5/TimerPID.c ****     /* Generate a software capture by reading the counter register */
 305:.\Generated_Source\PSoC5/TimerPID.c ****     #if(TimerPID_UsingFixedFunction)
 306:.\Generated_Source\PSoC5/TimerPID.c ****         (void)CY_GET_REG16(TimerPID_COUNTER_LSB_PTR);
 307:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 308:.\Generated_Source\PSoC5/TimerPID.c ****         (void)CY_GET_REG8(TimerPID_COUNTER_LSB_PTR_8BIT);
 271              		.loc 1 308 0
 272 0004 024B     		ldr	r3, .L18
 273 0006 1B78     		ldrb	r3, [r3]
 309:.\Generated_Source\PSoC5/TimerPID.c ****     #endif/* (TimerPID_UsingFixedFunction) */
 310:.\Generated_Source\PSoC5/TimerPID.c ****     /* Capture Data is now in the FIFO */
 311:.\Generated_Source\PSoC5/TimerPID.c **** }
 274              		.loc 1 311 0
 275 0008 BD46     		mov	sp, r7
 276              		.cfi_def_cfa_register 13
 277              		@ sp needed
 278 000a 5DF8047B 		ldr	r7, [sp], #4
 279              		.cfi_restore 7
 280              		.cfi_def_cfa_offset 0
 281 000e 7047     		bx	lr
 282              	.L19:
 283              		.align	2
 284              	.L18:
 285 0010 04650040 		.word	1073767684
 286              		.cfi_endproc
 287              	.LFE5:
 288              		.size	TimerPID_SoftwareCapture, .-TimerPID_SoftwareCapture
 289              		.section	.text.TimerPID_ReadStatusRegister,"ax",%progbits
 290              		.align	2
 291              		.global	TimerPID_ReadStatusRegister
 292              		.thumb
 293              		.thumb_func
 294              		.type	TimerPID_ReadStatusRegister, %function
 295              	TimerPID_ReadStatusRegister:
 296              	.LFB6:
 312:.\Generated_Source\PSoC5/TimerPID.c **** 
 313:.\Generated_Source\PSoC5/TimerPID.c **** 
 314:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 315:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadStatusRegister
 316:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 317:.\Generated_Source\PSoC5/TimerPID.c **** *
 318:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 319:.\Generated_Source\PSoC5/TimerPID.c **** *  Reads the status register and returns it's state. This function should use
 320:.\Generated_Source\PSoC5/TimerPID.c **** *  defined types for the bit-field information as the bits in this register may
 321:.\Generated_Source\PSoC5/TimerPID.c **** *  be permuteable.
 322:.\Generated_Source\PSoC5/TimerPID.c **** *
 323:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 324:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 325:.\Generated_Source\PSoC5/TimerPID.c **** *
 326:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 327:.\Generated_Source\PSoC5/TimerPID.c **** *  The contents of the status register
 328:.\Generated_Source\PSoC5/TimerPID.c **** *
 329:.\Generated_Source\PSoC5/TimerPID.c **** * Side Effects:
 330:.\Generated_Source\PSoC5/TimerPID.c **** *  Status register bits may be clear on read.
 331:.\Generated_Source\PSoC5/TimerPID.c **** *
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 12


 332:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 333:.\Generated_Source\PSoC5/TimerPID.c **** uint8   TimerPID_ReadStatusRegister(void) 
 334:.\Generated_Source\PSoC5/TimerPID.c **** {
 297              		.loc 1 334 0
 298              		.cfi_startproc
 299              		@ args = 0, pretend = 0, frame = 0
 300              		@ frame_needed = 1, uses_anonymous_args = 0
 301              		@ link register save eliminated.
 302 0000 80B4     		push	{r7}
 303              		.cfi_def_cfa_offset 4
 304              		.cfi_offset 7, -4
 305 0002 00AF     		add	r7, sp, #0
 306              		.cfi_def_cfa_register 7
 335:.\Generated_Source\PSoC5/TimerPID.c ****     return (TimerPID_STATUS);
 307              		.loc 1 335 0
 308 0004 034B     		ldr	r3, .L22
 309 0006 1B78     		ldrb	r3, [r3]
 310 0008 DBB2     		uxtb	r3, r3
 336:.\Generated_Source\PSoC5/TimerPID.c **** }
 311              		.loc 1 336 0
 312 000a 1846     		mov	r0, r3
 313 000c BD46     		mov	sp, r7
 314              		.cfi_def_cfa_register 13
 315              		@ sp needed
 316 000e 5DF8047B 		ldr	r7, [sp], #4
 317              		.cfi_restore 7
 318              		.cfi_def_cfa_offset 0
 319 0012 7047     		bx	lr
 320              	.L23:
 321              		.align	2
 322              	.L22:
 323 0014 66650040 		.word	1073767782
 324              		.cfi_endproc
 325              	.LFE6:
 326              		.size	TimerPID_ReadStatusRegister, .-TimerPID_ReadStatusRegister
 327              		.section	.text.TimerPID_ReadControlRegister,"ax",%progbits
 328              		.align	2
 329              		.global	TimerPID_ReadControlRegister
 330              		.thumb
 331              		.thumb_func
 332              		.type	TimerPID_ReadControlRegister, %function
 333              	TimerPID_ReadControlRegister:
 334              	.LFB7:
 337:.\Generated_Source\PSoC5/TimerPID.c **** 
 338:.\Generated_Source\PSoC5/TimerPID.c **** 
 339:.\Generated_Source\PSoC5/TimerPID.c **** #if (!TimerPID_UDB_CONTROL_REG_REMOVED) /* Remove API if control register is unused */
 340:.\Generated_Source\PSoC5/TimerPID.c **** 
 341:.\Generated_Source\PSoC5/TimerPID.c **** 
 342:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 343:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadControlRegister
 344:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 345:.\Generated_Source\PSoC5/TimerPID.c **** *
 346:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 347:.\Generated_Source\PSoC5/TimerPID.c **** *  Reads the control register and returns it's value.
 348:.\Generated_Source\PSoC5/TimerPID.c **** *
 349:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 350:.\Generated_Source\PSoC5/TimerPID.c **** *  void
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 13


 351:.\Generated_Source\PSoC5/TimerPID.c **** *
 352:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 353:.\Generated_Source\PSoC5/TimerPID.c **** *  The contents of the control register
 354:.\Generated_Source\PSoC5/TimerPID.c **** *
 355:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 356:.\Generated_Source\PSoC5/TimerPID.c **** uint8 TimerPID_ReadControlRegister(void) 
 357:.\Generated_Source\PSoC5/TimerPID.c **** {
 335              		.loc 1 357 0
 336              		.cfi_startproc
 337              		@ args = 0, pretend = 0, frame = 0
 338              		@ frame_needed = 1, uses_anonymous_args = 0
 339              		@ link register save eliminated.
 340 0000 80B4     		push	{r7}
 341              		.cfi_def_cfa_offset 4
 342              		.cfi_offset 7, -4
 343 0002 00AF     		add	r7, sp, #0
 344              		.cfi_def_cfa_register 7
 358:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED) 
 359:.\Generated_Source\PSoC5/TimerPID.c ****         return ((uint8)TimerPID_CONTROL);
 345              		.loc 1 359 0
 346 0004 034B     		ldr	r3, .L26
 347 0006 1B78     		ldrb	r3, [r3]
 348 0008 DBB2     		uxtb	r3, r3
 360:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 361:.\Generated_Source\PSoC5/TimerPID.c ****         return (0);
 362:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* (!TimerPID_UDB_CONTROL_REG_REMOVED) */
 363:.\Generated_Source\PSoC5/TimerPID.c **** }
 349              		.loc 1 363 0
 350 000a 1846     		mov	r0, r3
 351 000c BD46     		mov	sp, r7
 352              		.cfi_def_cfa_register 13
 353              		@ sp needed
 354 000e 5DF8047B 		ldr	r7, [sp], #4
 355              		.cfi_restore 7
 356              		.cfi_def_cfa_offset 0
 357 0012 7047     		bx	lr
 358              	.L27:
 359              		.align	2
 360              	.L26:
 361 0014 74650040 		.word	1073767796
 362              		.cfi_endproc
 363              	.LFE7:
 364              		.size	TimerPID_ReadControlRegister, .-TimerPID_ReadControlRegister
 365              		.section	.text.TimerPID_WriteControlRegister,"ax",%progbits
 366              		.align	2
 367              		.global	TimerPID_WriteControlRegister
 368              		.thumb
 369              		.thumb_func
 370              		.type	TimerPID_WriteControlRegister, %function
 371              	TimerPID_WriteControlRegister:
 372              	.LFB8:
 364:.\Generated_Source\PSoC5/TimerPID.c **** 
 365:.\Generated_Source\PSoC5/TimerPID.c **** 
 366:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 367:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_WriteControlRegister
 368:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 369:.\Generated_Source\PSoC5/TimerPID.c **** *
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 14


 370:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 371:.\Generated_Source\PSoC5/TimerPID.c **** *  Sets the bit-field of the control register.
 372:.\Generated_Source\PSoC5/TimerPID.c **** *
 373:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 374:.\Generated_Source\PSoC5/TimerPID.c **** *  control: The contents of the control register
 375:.\Generated_Source\PSoC5/TimerPID.c **** *
 376:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 377:.\Generated_Source\PSoC5/TimerPID.c **** *
 378:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 379:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_WriteControlRegister(uint8 control) 
 380:.\Generated_Source\PSoC5/TimerPID.c **** {
 373              		.loc 1 380 0
 374              		.cfi_startproc
 375              		@ args = 0, pretend = 0, frame = 8
 376              		@ frame_needed = 1, uses_anonymous_args = 0
 377              		@ link register save eliminated.
 378 0000 80B4     		push	{r7}
 379              		.cfi_def_cfa_offset 4
 380              		.cfi_offset 7, -4
 381 0002 83B0     		sub	sp, sp, #12
 382              		.cfi_def_cfa_offset 16
 383 0004 00AF     		add	r7, sp, #0
 384              		.cfi_def_cfa_register 7
 385 0006 0346     		mov	r3, r0
 386 0008 FB71     		strb	r3, [r7, #7]
 381:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED) 
 382:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL = control;
 387              		.loc 1 382 0
 388 000a 044A     		ldr	r2, .L29
 389 000c FB79     		ldrb	r3, [r7, #7]
 390 000e 1370     		strb	r3, [r2]
 383:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 384:.\Generated_Source\PSoC5/TimerPID.c ****         control = 0u;
 385:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* (!TimerPID_UDB_CONTROL_REG_REMOVED) */
 386:.\Generated_Source\PSoC5/TimerPID.c **** }
 391              		.loc 1 386 0
 392 0010 0C37     		adds	r7, r7, #12
 393              		.cfi_def_cfa_offset 4
 394 0012 BD46     		mov	sp, r7
 395              		.cfi_def_cfa_register 13
 396              		@ sp needed
 397 0014 5DF8047B 		ldr	r7, [sp], #4
 398              		.cfi_restore 7
 399              		.cfi_def_cfa_offset 0
 400 0018 7047     		bx	lr
 401              	.L30:
 402 001a 00BF     		.align	2
 403              	.L29:
 404 001c 74650040 		.word	1073767796
 405              		.cfi_endproc
 406              	.LFE8:
 407              		.size	TimerPID_WriteControlRegister, .-TimerPID_WriteControlRegister
 408              		.section	.text.TimerPID_ReadPeriod,"ax",%progbits
 409              		.align	2
 410              		.global	TimerPID_ReadPeriod
 411              		.thumb
 412              		.thumb_func
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 15


 413              		.type	TimerPID_ReadPeriod, %function
 414              	TimerPID_ReadPeriod:
 415              	.LFB9:
 387:.\Generated_Source\PSoC5/TimerPID.c **** 
 388:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* Remove API if control register is unused */
 389:.\Generated_Source\PSoC5/TimerPID.c **** 
 390:.\Generated_Source\PSoC5/TimerPID.c **** 
 391:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 392:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadPeriod
 393:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 394:.\Generated_Source\PSoC5/TimerPID.c **** *
 395:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 396:.\Generated_Source\PSoC5/TimerPID.c **** *  This function returns the current value of the Period.
 397:.\Generated_Source\PSoC5/TimerPID.c **** *
 398:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 399:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 400:.\Generated_Source\PSoC5/TimerPID.c **** *
 401:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 402:.\Generated_Source\PSoC5/TimerPID.c **** *  The present value of the counter.
 403:.\Generated_Source\PSoC5/TimerPID.c **** *
 404:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 405:.\Generated_Source\PSoC5/TimerPID.c **** uint32 TimerPID_ReadPeriod(void) 
 406:.\Generated_Source\PSoC5/TimerPID.c **** {
 416              		.loc 1 406 0
 417              		.cfi_startproc
 418              		@ args = 0, pretend = 0, frame = 0
 419              		@ frame_needed = 1, uses_anonymous_args = 0
 420              		@ link register save eliminated.
 421 0000 80B4     		push	{r7}
 422              		.cfi_def_cfa_offset 4
 423              		.cfi_offset 7, -4
 424 0002 00AF     		add	r7, sp, #0
 425              		.cfi_def_cfa_register 7
 407:.\Generated_Source\PSoC5/TimerPID.c ****    #if(TimerPID_UsingFixedFunction)
 408:.\Generated_Source\PSoC5/TimerPID.c ****        return ((uint32)CY_GET_REG16(TimerPID_PERIOD_LSB_PTR));
 409:.\Generated_Source\PSoC5/TimerPID.c ****    #else
 410:.\Generated_Source\PSoC5/TimerPID.c ****        return (CY_GET_REG24(TimerPID_PERIOD_LSB_PTR));
 426              		.loc 1 410 0
 427 0004 044B     		ldr	r3, .L33
 428 0006 1B68     		ldr	r3, [r3]
 429 0008 23F07F43 		bic	r3, r3, #-16777216
 411:.\Generated_Source\PSoC5/TimerPID.c ****    #endif /* (TimerPID_UsingFixedFunction) */
 412:.\Generated_Source\PSoC5/TimerPID.c **** }
 430              		.loc 1 412 0
 431 000c 1846     		mov	r0, r3
 432 000e BD46     		mov	sp, r7
 433              		.cfi_def_cfa_register 13
 434              		@ sp needed
 435 0010 5DF8047B 		ldr	r7, [sp], #4
 436              		.cfi_restore 7
 437              		.cfi_def_cfa_offset 0
 438 0014 7047     		bx	lr
 439              	.L34:
 440 0016 00BF     		.align	2
 441              	.L33:
 442 0018 24650040 		.word	1073767716
 443              		.cfi_endproc
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 16


 444              	.LFE9:
 445              		.size	TimerPID_ReadPeriod, .-TimerPID_ReadPeriod
 446              		.section	.text.TimerPID_WritePeriod,"ax",%progbits
 447              		.align	2
 448              		.global	TimerPID_WritePeriod
 449              		.thumb
 450              		.thumb_func
 451              		.type	TimerPID_WritePeriod, %function
 452              	TimerPID_WritePeriod:
 453              	.LFB10:
 413:.\Generated_Source\PSoC5/TimerPID.c **** 
 414:.\Generated_Source\PSoC5/TimerPID.c **** 
 415:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 416:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_WritePeriod
 417:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 418:.\Generated_Source\PSoC5/TimerPID.c **** *
 419:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 420:.\Generated_Source\PSoC5/TimerPID.c **** *  This function is used to change the period of the counter.  The new period
 421:.\Generated_Source\PSoC5/TimerPID.c **** *  will be loaded the next time terminal count is detected.
 422:.\Generated_Source\PSoC5/TimerPID.c **** *
 423:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 424:.\Generated_Source\PSoC5/TimerPID.c **** *  period: This value may be between 1 and (2^Resolution)-1.  A value of 0 will
 425:.\Generated_Source\PSoC5/TimerPID.c **** *          result in the counter remaining at zero.
 426:.\Generated_Source\PSoC5/TimerPID.c **** *
 427:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 428:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 429:.\Generated_Source\PSoC5/TimerPID.c **** *
 430:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 431:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_WritePeriod(uint32 period) 
 432:.\Generated_Source\PSoC5/TimerPID.c **** {
 454              		.loc 1 432 0
 455              		.cfi_startproc
 456              		@ args = 0, pretend = 0, frame = 8
 457              		@ frame_needed = 1, uses_anonymous_args = 0
 458 0000 80B5     		push	{r7, lr}
 459              		.cfi_def_cfa_offset 8
 460              		.cfi_offset 7, -8
 461              		.cfi_offset 14, -4
 462 0002 82B0     		sub	sp, sp, #8
 463              		.cfi_def_cfa_offset 16
 464 0004 00AF     		add	r7, sp, #0
 465              		.cfi_def_cfa_register 7
 466 0006 7860     		str	r0, [r7, #4]
 433:.\Generated_Source\PSoC5/TimerPID.c ****     #if(TimerPID_UsingFixedFunction)
 434:.\Generated_Source\PSoC5/TimerPID.c ****         uint16 period_temp = (uint16)period;
 435:.\Generated_Source\PSoC5/TimerPID.c ****         CY_SET_REG16(TimerPID_PERIOD_LSB_PTR, period_temp);
 436:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 437:.\Generated_Source\PSoC5/TimerPID.c ****         CY_SET_REG24(TimerPID_PERIOD_LSB_PTR, period);
 467              		.loc 1 437 0
 468 0008 0348     		ldr	r0, .L36
 469 000a 7968     		ldr	r1, [r7, #4]
 470 000c FFF7FEFF 		bl	CySetReg24
 438:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /*Write Period value with appropriate resolution suffix depending on UDB or fixed functi
 439:.\Generated_Source\PSoC5/TimerPID.c **** }
 471              		.loc 1 439 0
 472 0010 0837     		adds	r7, r7, #8
 473              		.cfi_def_cfa_offset 8
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 17


 474 0012 BD46     		mov	sp, r7
 475              		.cfi_def_cfa_register 13
 476              		@ sp needed
 477 0014 80BD     		pop	{r7, pc}
 478              	.L37:
 479 0016 00BF     		.align	2
 480              	.L36:
 481 0018 24650040 		.word	1073767716
 482              		.cfi_endproc
 483              	.LFE10:
 484              		.size	TimerPID_WritePeriod, .-TimerPID_WritePeriod
 485              		.section	.text.TimerPID_ReadCapture,"ax",%progbits
 486              		.align	2
 487              		.global	TimerPID_ReadCapture
 488              		.thumb
 489              		.thumb_func
 490              		.type	TimerPID_ReadCapture, %function
 491              	TimerPID_ReadCapture:
 492              	.LFB11:
 440:.\Generated_Source\PSoC5/TimerPID.c **** 
 441:.\Generated_Source\PSoC5/TimerPID.c **** 
 442:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 443:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadCapture
 444:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 445:.\Generated_Source\PSoC5/TimerPID.c **** *
 446:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 447:.\Generated_Source\PSoC5/TimerPID.c **** *  This function returns the last value captured.
 448:.\Generated_Source\PSoC5/TimerPID.c **** *
 449:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 450:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 451:.\Generated_Source\PSoC5/TimerPID.c **** *
 452:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 453:.\Generated_Source\PSoC5/TimerPID.c **** *  Present Capture value.
 454:.\Generated_Source\PSoC5/TimerPID.c **** *
 455:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 456:.\Generated_Source\PSoC5/TimerPID.c **** uint32 TimerPID_ReadCapture(void) 
 457:.\Generated_Source\PSoC5/TimerPID.c **** {
 493              		.loc 1 457 0
 494              		.cfi_startproc
 495              		@ args = 0, pretend = 0, frame = 0
 496              		@ frame_needed = 1, uses_anonymous_args = 0
 497              		@ link register save eliminated.
 498 0000 80B4     		push	{r7}
 499              		.cfi_def_cfa_offset 4
 500              		.cfi_offset 7, -4
 501 0002 00AF     		add	r7, sp, #0
 502              		.cfi_def_cfa_register 7
 458:.\Generated_Source\PSoC5/TimerPID.c ****    #if(TimerPID_UsingFixedFunction)
 459:.\Generated_Source\PSoC5/TimerPID.c ****        return ((uint32)CY_GET_REG16(TimerPID_CAPTURE_LSB_PTR));
 460:.\Generated_Source\PSoC5/TimerPID.c ****    #else
 461:.\Generated_Source\PSoC5/TimerPID.c ****        return (CY_GET_REG24(TimerPID_CAPTURE_LSB_PTR));
 503              		.loc 1 461 0
 504 0004 044B     		ldr	r3, .L40
 505 0006 1B68     		ldr	r3, [r3]
 506 0008 23F07F43 		bic	r3, r3, #-16777216
 462:.\Generated_Source\PSoC5/TimerPID.c ****    #endif /* (TimerPID_UsingFixedFunction) */
 463:.\Generated_Source\PSoC5/TimerPID.c **** }
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 18


 507              		.loc 1 463 0
 508 000c 1846     		mov	r0, r3
 509 000e BD46     		mov	sp, r7
 510              		.cfi_def_cfa_register 13
 511              		@ sp needed
 512 0010 5DF8047B 		ldr	r7, [sp], #4
 513              		.cfi_restore 7
 514              		.cfi_def_cfa_offset 0
 515 0014 7047     		bx	lr
 516              	.L41:
 517 0016 00BF     		.align	2
 518              	.L40:
 519 0018 44650040 		.word	1073767748
 520              		.cfi_endproc
 521              	.LFE11:
 522              		.size	TimerPID_ReadCapture, .-TimerPID_ReadCapture
 523              		.section	.text.TimerPID_WriteCounter,"ax",%progbits
 524              		.align	2
 525              		.global	TimerPID_WriteCounter
 526              		.thumb
 527              		.thumb_func
 528              		.type	TimerPID_WriteCounter, %function
 529              	TimerPID_WriteCounter:
 530              	.LFB12:
 464:.\Generated_Source\PSoC5/TimerPID.c **** 
 465:.\Generated_Source\PSoC5/TimerPID.c **** 
 466:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 467:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_WriteCounter
 468:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 469:.\Generated_Source\PSoC5/TimerPID.c **** *
 470:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 471:.\Generated_Source\PSoC5/TimerPID.c **** *  This funtion is used to set the counter to a specific value
 472:.\Generated_Source\PSoC5/TimerPID.c **** *
 473:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 474:.\Generated_Source\PSoC5/TimerPID.c **** *  counter:  New counter value.
 475:.\Generated_Source\PSoC5/TimerPID.c **** *
 476:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 477:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 478:.\Generated_Source\PSoC5/TimerPID.c **** *
 479:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 480:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_WriteCounter(uint32 counter) 
 481:.\Generated_Source\PSoC5/TimerPID.c **** {
 531              		.loc 1 481 0
 532              		.cfi_startproc
 533              		@ args = 0, pretend = 0, frame = 8
 534              		@ frame_needed = 1, uses_anonymous_args = 0
 535 0000 80B5     		push	{r7, lr}
 536              		.cfi_def_cfa_offset 8
 537              		.cfi_offset 7, -8
 538              		.cfi_offset 14, -4
 539 0002 82B0     		sub	sp, sp, #8
 540              		.cfi_def_cfa_offset 16
 541 0004 00AF     		add	r7, sp, #0
 542              		.cfi_def_cfa_register 7
 543 0006 7860     		str	r0, [r7, #4]
 482:.\Generated_Source\PSoC5/TimerPID.c ****    #if(TimerPID_UsingFixedFunction)
 483:.\Generated_Source\PSoC5/TimerPID.c ****         /* This functionality is removed until a FixedFunction HW update to
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 19


 484:.\Generated_Source\PSoC5/TimerPID.c ****          * allow this register to be written
 485:.\Generated_Source\PSoC5/TimerPID.c ****          */
 486:.\Generated_Source\PSoC5/TimerPID.c ****         CY_SET_REG16(TimerPID_COUNTER_LSB_PTR, (uint16)counter);
 487:.\Generated_Source\PSoC5/TimerPID.c ****         
 488:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 489:.\Generated_Source\PSoC5/TimerPID.c ****         CY_SET_REG24(TimerPID_COUNTER_LSB_PTR, counter);
 544              		.loc 1 489 0
 545 0008 0348     		ldr	r0, .L43
 546 000a 7968     		ldr	r1, [r7, #4]
 547 000c FFF7FEFF 		bl	CySetReg24
 490:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Set Write Counter only for the UDB implementation (Write Counter not available in fix
 491:.\Generated_Source\PSoC5/TimerPID.c **** }
 548              		.loc 1 491 0
 549 0010 0837     		adds	r7, r7, #8
 550              		.cfi_def_cfa_offset 8
 551 0012 BD46     		mov	sp, r7
 552              		.cfi_def_cfa_register 13
 553              		@ sp needed
 554 0014 80BD     		pop	{r7, pc}
 555              	.L44:
 556 0016 00BF     		.align	2
 557              	.L43:
 558 0018 04650040 		.word	1073767684
 559              		.cfi_endproc
 560              	.LFE12:
 561              		.size	TimerPID_WriteCounter, .-TimerPID_WriteCounter
 562              		.section	.text.TimerPID_ReadCounter,"ax",%progbits
 563              		.align	2
 564              		.global	TimerPID_ReadCounter
 565              		.thumb
 566              		.thumb_func
 567              		.type	TimerPID_ReadCounter, %function
 568              	TimerPID_ReadCounter:
 569              	.LFB13:
 492:.\Generated_Source\PSoC5/TimerPID.c **** 
 493:.\Generated_Source\PSoC5/TimerPID.c **** 
 494:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 495:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadCounter
 496:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 497:.\Generated_Source\PSoC5/TimerPID.c **** *
 498:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 499:.\Generated_Source\PSoC5/TimerPID.c **** *  This function returns the current counter value.
 500:.\Generated_Source\PSoC5/TimerPID.c **** *
 501:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 502:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 503:.\Generated_Source\PSoC5/TimerPID.c **** *
 504:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 505:.\Generated_Source\PSoC5/TimerPID.c **** *  Present compare value.
 506:.\Generated_Source\PSoC5/TimerPID.c **** *
 507:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 508:.\Generated_Source\PSoC5/TimerPID.c **** uint32 TimerPID_ReadCounter(void) 
 509:.\Generated_Source\PSoC5/TimerPID.c **** {
 570              		.loc 1 509 0
 571              		.cfi_startproc
 572              		@ args = 0, pretend = 0, frame = 0
 573              		@ frame_needed = 1, uses_anonymous_args = 0
 574              		@ link register save eliminated.
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 20


 575 0000 80B4     		push	{r7}
 576              		.cfi_def_cfa_offset 4
 577              		.cfi_offset 7, -4
 578 0002 00AF     		add	r7, sp, #0
 579              		.cfi_def_cfa_register 7
 510:.\Generated_Source\PSoC5/TimerPID.c ****     /* Force capture by reading Accumulator */
 511:.\Generated_Source\PSoC5/TimerPID.c ****     /* Must first do a software capture to be able to read the counter */
 512:.\Generated_Source\PSoC5/TimerPID.c ****     /* It is up to the user code to make sure there isn't already captured data in the FIFO */
 513:.\Generated_Source\PSoC5/TimerPID.c ****     #if(TimerPID_UsingFixedFunction)
 514:.\Generated_Source\PSoC5/TimerPID.c ****         (void)CY_GET_REG16(TimerPID_COUNTER_LSB_PTR);
 515:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 516:.\Generated_Source\PSoC5/TimerPID.c ****         (void)CY_GET_REG8(TimerPID_COUNTER_LSB_PTR_8BIT);
 580              		.loc 1 516 0
 581 0004 054B     		ldr	r3, .L47
 582 0006 1B78     		ldrb	r3, [r3]
 517:.\Generated_Source\PSoC5/TimerPID.c ****     #endif/* (TimerPID_UsingFixedFunction) */
 518:.\Generated_Source\PSoC5/TimerPID.c **** 
 519:.\Generated_Source\PSoC5/TimerPID.c ****     /* Read the data from the FIFO (or capture register for Fixed Function)*/
 520:.\Generated_Source\PSoC5/TimerPID.c ****     #if(TimerPID_UsingFixedFunction)
 521:.\Generated_Source\PSoC5/TimerPID.c ****         return ((uint32)CY_GET_REG16(TimerPID_CAPTURE_LSB_PTR));
 522:.\Generated_Source\PSoC5/TimerPID.c ****     #else
 523:.\Generated_Source\PSoC5/TimerPID.c ****         return (CY_GET_REG24(TimerPID_CAPTURE_LSB_PTR));
 583              		.loc 1 523 0
 584 0008 054B     		ldr	r3, .L47+4
 585 000a 1B68     		ldr	r3, [r3]
 586 000c 23F07F43 		bic	r3, r3, #-16777216
 524:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* (TimerPID_UsingFixedFunction) */
 525:.\Generated_Source\PSoC5/TimerPID.c **** }
 587              		.loc 1 525 0
 588 0010 1846     		mov	r0, r3
 589 0012 BD46     		mov	sp, r7
 590              		.cfi_def_cfa_register 13
 591              		@ sp needed
 592 0014 5DF8047B 		ldr	r7, [sp], #4
 593              		.cfi_restore 7
 594              		.cfi_def_cfa_offset 0
 595 0018 7047     		bx	lr
 596              	.L48:
 597 001a 00BF     		.align	2
 598              	.L47:
 599 001c 04650040 		.word	1073767684
 600 0020 44650040 		.word	1073767748
 601              		.cfi_endproc
 602              	.LFE13:
 603              		.size	TimerPID_ReadCounter, .-TimerPID_ReadCounter
 604              		.section	.text.TimerPID_ClearFIFO,"ax",%progbits
 605              		.align	2
 606              		.global	TimerPID_ClearFIFO
 607              		.thumb
 608              		.thumb_func
 609              		.type	TimerPID_ClearFIFO, %function
 610              	TimerPID_ClearFIFO:
 611              	.LFB14:
 526:.\Generated_Source\PSoC5/TimerPID.c **** 
 527:.\Generated_Source\PSoC5/TimerPID.c **** 
 528:.\Generated_Source\PSoC5/TimerPID.c **** #if(!TimerPID_UsingFixedFunction) /* UDB Specific Functions */
 529:.\Generated_Source\PSoC5/TimerPID.c **** 
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 21


 530:.\Generated_Source\PSoC5/TimerPID.c ****     
 531:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 532:.\Generated_Source\PSoC5/TimerPID.c ****  * The functions below this point are only available using the UDB
 533:.\Generated_Source\PSoC5/TimerPID.c ****  * implementation.  If a feature is selected, then the API is enabled.
 534:.\Generated_Source\PSoC5/TimerPID.c ****  ******************************************************************************/
 535:.\Generated_Source\PSoC5/TimerPID.c **** 
 536:.\Generated_Source\PSoC5/TimerPID.c **** 
 537:.\Generated_Source\PSoC5/TimerPID.c **** #if (TimerPID_SoftwareCaptureMode)
 538:.\Generated_Source\PSoC5/TimerPID.c **** 
 539:.\Generated_Source\PSoC5/TimerPID.c **** 
 540:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 541:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SetCaptureMode
 542:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 543:.\Generated_Source\PSoC5/TimerPID.c **** *
 544:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 545:.\Generated_Source\PSoC5/TimerPID.c **** *  This function sets the capture mode to either rising or falling edge.
 546:.\Generated_Source\PSoC5/TimerPID.c **** *
 547:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 548:.\Generated_Source\PSoC5/TimerPID.c **** *  captureMode: This parameter sets the capture mode of the UDB capture feature
 549:.\Generated_Source\PSoC5/TimerPID.c **** *  The parameter values are defined using the
 550:.\Generated_Source\PSoC5/TimerPID.c **** *  #define TimerPID__B_TIMER__CM_NONE 0
 551:.\Generated_Source\PSoC5/TimerPID.c **** #define TimerPID__B_TIMER__CM_RISINGEDGE 1
 552:.\Generated_Source\PSoC5/TimerPID.c **** #define TimerPID__B_TIMER__CM_FALLINGEDGE 2
 553:.\Generated_Source\PSoC5/TimerPID.c **** #define TimerPID__B_TIMER__CM_EITHEREDGE 3
 554:.\Generated_Source\PSoC5/TimerPID.c **** #define TimerPID__B_TIMER__CM_SOFTWARE 4
 555:.\Generated_Source\PSoC5/TimerPID.c ****  identifiers
 556:.\Generated_Source\PSoC5/TimerPID.c **** *  The following are the possible values of the parameter
 557:.\Generated_Source\PSoC5/TimerPID.c **** *  TimerPID__B_TIMER__CM_NONE        - Set Capture mode to None
 558:.\Generated_Source\PSoC5/TimerPID.c **** *  TimerPID__B_TIMER__CM_RISINGEDGE  - Rising edge of Capture input
 559:.\Generated_Source\PSoC5/TimerPID.c **** *  TimerPID__B_TIMER__CM_FALLINGEDGE - Falling edge of Capture input
 560:.\Generated_Source\PSoC5/TimerPID.c **** *  TimerPID__B_TIMER__CM_EITHEREDGE  - Either edge of Capture input
 561:.\Generated_Source\PSoC5/TimerPID.c **** *
 562:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 563:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 564:.\Generated_Source\PSoC5/TimerPID.c **** *
 565:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 566:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SetCaptureMode(uint8 captureMode) 
 567:.\Generated_Source\PSoC5/TimerPID.c **** {
 568:.\Generated_Source\PSoC5/TimerPID.c ****     /* This must only set to two bits of the control register associated */
 569:.\Generated_Source\PSoC5/TimerPID.c ****     captureMode = ((uint8)((uint8)captureMode << TimerPID_CTRL_CAP_MODE_SHIFT));
 570:.\Generated_Source\PSoC5/TimerPID.c ****     captureMode &= (TimerPID_CTRL_CAP_MODE_MASK);
 571:.\Generated_Source\PSoC5/TimerPID.c **** 
 572:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED)
 573:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear the Current Setting */
 574:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= ((uint8)(~TimerPID_CTRL_CAP_MODE_MASK));
 575:.\Generated_Source\PSoC5/TimerPID.c **** 
 576:.\Generated_Source\PSoC5/TimerPID.c ****         /* Write The New Setting */
 577:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL |= captureMode;
 578:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* (!TimerPID_UDB_CONTROL_REG_REMOVED) */
 579:.\Generated_Source\PSoC5/TimerPID.c **** }
 580:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* Remove API if Capture Mode is not Software Controlled */
 581:.\Generated_Source\PSoC5/TimerPID.c **** 
 582:.\Generated_Source\PSoC5/TimerPID.c **** 
 583:.\Generated_Source\PSoC5/TimerPID.c **** #if (TimerPID_SoftwareTriggerMode)
 584:.\Generated_Source\PSoC5/TimerPID.c **** 
 585:.\Generated_Source\PSoC5/TimerPID.c **** 
 586:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 22


 587:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SetTriggerMode
 588:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 589:.\Generated_Source\PSoC5/TimerPID.c **** *
 590:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 591:.\Generated_Source\PSoC5/TimerPID.c **** *  This function sets the trigger input mode
 592:.\Generated_Source\PSoC5/TimerPID.c **** *
 593:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 594:.\Generated_Source\PSoC5/TimerPID.c **** *  triggerMode: Pass one of the pre-defined Trigger Modes (except Software)
 595:.\Generated_Source\PSoC5/TimerPID.c ****     #define TimerPID__B_TIMER__TM_NONE 0x00u
 596:.\Generated_Source\PSoC5/TimerPID.c ****     #define TimerPID__B_TIMER__TM_RISINGEDGE 0x04u
 597:.\Generated_Source\PSoC5/TimerPID.c ****     #define TimerPID__B_TIMER__TM_FALLINGEDGE 0x08u
 598:.\Generated_Source\PSoC5/TimerPID.c ****     #define TimerPID__B_TIMER__TM_EITHEREDGE 0x0Cu
 599:.\Generated_Source\PSoC5/TimerPID.c ****     #define TimerPID__B_TIMER__TM_SOFTWARE 0x10u
 600:.\Generated_Source\PSoC5/TimerPID.c **** *
 601:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 602:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 603:.\Generated_Source\PSoC5/TimerPID.c **** *
 604:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 605:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SetTriggerMode(uint8 triggerMode) 
 606:.\Generated_Source\PSoC5/TimerPID.c **** {
 607:.\Generated_Source\PSoC5/TimerPID.c ****     /* This must only set to two bits of the control register associated */
 608:.\Generated_Source\PSoC5/TimerPID.c ****     triggerMode &= TimerPID_CTRL_TRIG_MODE_MASK;
 609:.\Generated_Source\PSoC5/TimerPID.c **** 
 610:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 611:.\Generated_Source\PSoC5/TimerPID.c ****     
 612:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear the Current Setting */
 613:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= ((uint8)(~TimerPID_CTRL_TRIG_MODE_MASK));
 614:.\Generated_Source\PSoC5/TimerPID.c **** 
 615:.\Generated_Source\PSoC5/TimerPID.c ****         /* Write The New Setting */
 616:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL |= (triggerMode | TimerPID__B_TIMER__TM_SOFTWARE);
 617:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Remove code section if control register is not used */
 618:.\Generated_Source\PSoC5/TimerPID.c **** }
 619:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* Remove API if Trigger Mode is not Software Controlled */
 620:.\Generated_Source\PSoC5/TimerPID.c **** 
 621:.\Generated_Source\PSoC5/TimerPID.c **** #if (TimerPID_EnableTriggerMode)
 622:.\Generated_Source\PSoC5/TimerPID.c **** 
 623:.\Generated_Source\PSoC5/TimerPID.c **** 
 624:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 625:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_EnableTrigger
 626:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 627:.\Generated_Source\PSoC5/TimerPID.c **** *
 628:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 629:.\Generated_Source\PSoC5/TimerPID.c **** *  Sets the control bit enabling Hardware Trigger mode
 630:.\Generated_Source\PSoC5/TimerPID.c **** *
 631:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 632:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 633:.\Generated_Source\PSoC5/TimerPID.c **** *
 634:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 635:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 636:.\Generated_Source\PSoC5/TimerPID.c **** *
 637:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 638:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_EnableTrigger(void) 
 639:.\Generated_Source\PSoC5/TimerPID.c **** {
 640:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED)   /* Remove assignment if control register is removed *
 641:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL |= TimerPID_CTRL_TRIG_EN;
 642:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Remove code section if control register is not used */
 643:.\Generated_Source\PSoC5/TimerPID.c **** }
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 23


 644:.\Generated_Source\PSoC5/TimerPID.c **** 
 645:.\Generated_Source\PSoC5/TimerPID.c **** 
 646:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_DisableTrigger
 648:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/TimerPID.c **** *
 650:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 651:.\Generated_Source\PSoC5/TimerPID.c **** *  Clears the control bit enabling Hardware Trigger mode
 652:.\Generated_Source\PSoC5/TimerPID.c **** *
 653:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 654:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 655:.\Generated_Source\PSoC5/TimerPID.c **** *
 656:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 657:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 658:.\Generated_Source\PSoC5/TimerPID.c **** *
 659:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_DisableTrigger(void) 
 661:.\Generated_Source\PSoC5/TimerPID.c **** {
 662:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED )   /* Remove assignment if control register is removed 
 663:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= ((uint8)(~TimerPID_CTRL_TRIG_EN));
 664:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* Remove code section if control register is not used */
 665:.\Generated_Source\PSoC5/TimerPID.c **** }
 666:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* Remove API is Trigger Mode is set to None */
 667:.\Generated_Source\PSoC5/TimerPID.c **** 
 668:.\Generated_Source\PSoC5/TimerPID.c **** #if(TimerPID_InterruptOnCaptureCount)
 669:.\Generated_Source\PSoC5/TimerPID.c **** 
 670:.\Generated_Source\PSoC5/TimerPID.c **** 
 671:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 672:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SetInterruptCount
 673:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 674:.\Generated_Source\PSoC5/TimerPID.c **** *
 675:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 676:.\Generated_Source\PSoC5/TimerPID.c **** *  This function sets the capture count before an interrupt is triggered.
 677:.\Generated_Source\PSoC5/TimerPID.c **** *
 678:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 679:.\Generated_Source\PSoC5/TimerPID.c **** *  interruptCount:  A value between 0 and 3 is valid.  If the value is 0, then
 680:.\Generated_Source\PSoC5/TimerPID.c **** *                   an interrupt will occur each time a capture occurs.
 681:.\Generated_Source\PSoC5/TimerPID.c **** *                   A value of 1 to 3 will cause the interrupt
 682:.\Generated_Source\PSoC5/TimerPID.c **** *                   to delay by the same number of captures.
 683:.\Generated_Source\PSoC5/TimerPID.c **** *
 684:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 685:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 686:.\Generated_Source\PSoC5/TimerPID.c **** *
 687:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 688:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SetInterruptCount(uint8 interruptCount) 
 689:.\Generated_Source\PSoC5/TimerPID.c **** {
 690:.\Generated_Source\PSoC5/TimerPID.c ****     /* This must only set to two bits of the control register associated */
 691:.\Generated_Source\PSoC5/TimerPID.c ****     interruptCount &= TimerPID_CTRL_INTCNT_MASK;
 692:.\Generated_Source\PSoC5/TimerPID.c **** 
 693:.\Generated_Source\PSoC5/TimerPID.c ****     #if (!TimerPID_UDB_CONTROL_REG_REMOVED)
 694:.\Generated_Source\PSoC5/TimerPID.c ****         /* Clear the Current Setting */
 695:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL &= ((uint8)(~TimerPID_CTRL_INTCNT_MASK));
 696:.\Generated_Source\PSoC5/TimerPID.c ****         /* Write The New Setting */
 697:.\Generated_Source\PSoC5/TimerPID.c ****         TimerPID_CONTROL |= interruptCount;
 698:.\Generated_Source\PSoC5/TimerPID.c ****     #endif /* (!TimerPID_UDB_CONTROL_REG_REMOVED) */
 699:.\Generated_Source\PSoC5/TimerPID.c **** }
 700:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* TimerPID_InterruptOnCaptureCount */
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 24


 701:.\Generated_Source\PSoC5/TimerPID.c **** 
 702:.\Generated_Source\PSoC5/TimerPID.c **** 
 703:.\Generated_Source\PSoC5/TimerPID.c **** #if (TimerPID_UsingHWCaptureCounter)
 704:.\Generated_Source\PSoC5/TimerPID.c **** 
 705:.\Generated_Source\PSoC5/TimerPID.c **** 
 706:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 707:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_SetCaptureCount
 708:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 709:.\Generated_Source\PSoC5/TimerPID.c **** *
 710:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 711:.\Generated_Source\PSoC5/TimerPID.c **** *  This function sets the capture count
 712:.\Generated_Source\PSoC5/TimerPID.c **** *
 713:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 714:.\Generated_Source\PSoC5/TimerPID.c **** *  captureCount: A value between 2 and 127 inclusive is valid.  A value of 1
 715:.\Generated_Source\PSoC5/TimerPID.c **** *                to 127 will cause the interrupt to delay by the same number of
 716:.\Generated_Source\PSoC5/TimerPID.c **** *                captures.
 717:.\Generated_Source\PSoC5/TimerPID.c **** *
 718:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 719:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 720:.\Generated_Source\PSoC5/TimerPID.c **** *
 721:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 722:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_SetCaptureCount(uint8 captureCount) 
 723:.\Generated_Source\PSoC5/TimerPID.c **** {
 724:.\Generated_Source\PSoC5/TimerPID.c ****     TimerPID_CAP_COUNT = captureCount;
 725:.\Generated_Source\PSoC5/TimerPID.c **** }
 726:.\Generated_Source\PSoC5/TimerPID.c **** 
 727:.\Generated_Source\PSoC5/TimerPID.c **** 
 728:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 729:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ReadCaptureCount
 730:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 731:.\Generated_Source\PSoC5/TimerPID.c **** *
 732:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 733:.\Generated_Source\PSoC5/TimerPID.c **** *  This function reads the capture count setting
 734:.\Generated_Source\PSoC5/TimerPID.c **** *
 735:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 736:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 737:.\Generated_Source\PSoC5/TimerPID.c **** *
 738:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 739:.\Generated_Source\PSoC5/TimerPID.c **** *  Returns the Capture Count Setting
 740:.\Generated_Source\PSoC5/TimerPID.c **** *
 741:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 742:.\Generated_Source\PSoC5/TimerPID.c **** uint8 TimerPID_ReadCaptureCount(void) 
 743:.\Generated_Source\PSoC5/TimerPID.c **** {
 744:.\Generated_Source\PSoC5/TimerPID.c ****     return ((uint8)TimerPID_CAP_COUNT);
 745:.\Generated_Source\PSoC5/TimerPID.c **** }
 746:.\Generated_Source\PSoC5/TimerPID.c **** #endif /* TimerPID_UsingHWCaptureCounter */
 747:.\Generated_Source\PSoC5/TimerPID.c **** 
 748:.\Generated_Source\PSoC5/TimerPID.c **** 
 749:.\Generated_Source\PSoC5/TimerPID.c **** /*******************************************************************************
 750:.\Generated_Source\PSoC5/TimerPID.c **** * Function Name: TimerPID_ClearFIFO
 751:.\Generated_Source\PSoC5/TimerPID.c **** ********************************************************************************
 752:.\Generated_Source\PSoC5/TimerPID.c **** *
 753:.\Generated_Source\PSoC5/TimerPID.c **** * Summary:
 754:.\Generated_Source\PSoC5/TimerPID.c **** *  This function clears all capture data from the capture FIFO
 755:.\Generated_Source\PSoC5/TimerPID.c **** *
 756:.\Generated_Source\PSoC5/TimerPID.c **** * Parameters:
 757:.\Generated_Source\PSoC5/TimerPID.c **** *  void
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 25


 758:.\Generated_Source\PSoC5/TimerPID.c **** *
 759:.\Generated_Source\PSoC5/TimerPID.c **** * Return:
 760:.\Generated_Source\PSoC5/TimerPID.c **** *  void
 761:.\Generated_Source\PSoC5/TimerPID.c **** *
 762:.\Generated_Source\PSoC5/TimerPID.c **** *******************************************************************************/
 763:.\Generated_Source\PSoC5/TimerPID.c **** void TimerPID_ClearFIFO(void) 
 764:.\Generated_Source\PSoC5/TimerPID.c **** {
 612              		.loc 1 764 0
 613              		.cfi_startproc
 614              		@ args = 0, pretend = 0, frame = 0
 615              		@ frame_needed = 1, uses_anonymous_args = 0
 616 0000 80B5     		push	{r7, lr}
 617              		.cfi_def_cfa_offset 8
 618              		.cfi_offset 7, -8
 619              		.cfi_offset 14, -4
 620 0002 00AF     		add	r7, sp, #0
 621              		.cfi_def_cfa_register 7
 765:.\Generated_Source\PSoC5/TimerPID.c ****     while(0u != (TimerPID_ReadStatusRegister() & TimerPID_STATUS_FIFONEMP))
 622              		.loc 1 765 0
 623 0004 01E0     		b	.L50
 624              	.L51:
 766:.\Generated_Source\PSoC5/TimerPID.c ****     {
 767:.\Generated_Source\PSoC5/TimerPID.c ****         (void)TimerPID_ReadCapture();
 625              		.loc 1 767 0
 626 0006 FFF7FEFF 		bl	TimerPID_ReadCapture
 627              	.L50:
 765:.\Generated_Source\PSoC5/TimerPID.c ****     while(0u != (TimerPID_ReadStatusRegister() & TimerPID_STATUS_FIFONEMP))
 628              		.loc 1 765 0
 629 000a FFF7FEFF 		bl	TimerPID_ReadStatusRegister
 630 000e 0346     		mov	r3, r0
 631 0010 03F00803 		and	r3, r3, #8
 632 0014 002B     		cmp	r3, #0
 633 0016 F6D1     		bne	.L51
 768:.\Generated_Source\PSoC5/TimerPID.c ****     }
 769:.\Generated_Source\PSoC5/TimerPID.c **** }
 634              		.loc 1 769 0
 635 0018 80BD     		pop	{r7, pc}
 636              		.cfi_endproc
 637              	.LFE14:
 638              		.size	TimerPID_ClearFIFO, .-TimerPID_ClearFIFO
 639 001a 00BF     		.text
 640              	.Letext0:
 641              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 642              		.section	.debug_info,"",%progbits
 643              	.Ldebug_info0:
 644 0000 4E020000 		.4byte	0x24e
 645 0004 0400     		.2byte	0x4
 646 0006 00000000 		.4byte	.Ldebug_abbrev0
 647 000a 04       		.byte	0x4
 648 000b 01       		.uleb128 0x1
 649 000c 29020000 		.4byte	.LASF36
 650 0010 01       		.byte	0x1
 651 0011 AA010000 		.4byte	.LASF37
 652 0015 6B000000 		.4byte	.LASF38
 653 0019 00000000 		.4byte	.Ldebug_ranges0+0
 654 001d 00000000 		.4byte	0
 655 0021 00000000 		.4byte	.Ldebug_line0
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 26


 656 0025 02       		.uleb128 0x2
 657 0026 01       		.byte	0x1
 658 0027 06       		.byte	0x6
 659 0028 1A030000 		.4byte	.LASF0
 660 002c 02       		.uleb128 0x2
 661 002d 01       		.byte	0x1
 662 002e 08       		.byte	0x8
 663 002f A7000000 		.4byte	.LASF1
 664 0033 02       		.uleb128 0x2
 665 0034 02       		.byte	0x2
 666 0035 05       		.byte	0x5
 667 0036 B7020000 		.4byte	.LASF2
 668 003a 02       		.uleb128 0x2
 669 003b 02       		.byte	0x2
 670 003c 07       		.byte	0x7
 671 003d 3F000000 		.4byte	.LASF3
 672 0041 02       		.uleb128 0x2
 673 0042 04       		.byte	0x4
 674 0043 05       		.byte	0x5
 675 0044 03030000 		.4byte	.LASF4
 676 0048 02       		.uleb128 0x2
 677 0049 04       		.byte	0x4
 678 004a 07       		.byte	0x7
 679 004b CB000000 		.4byte	.LASF5
 680 004f 02       		.uleb128 0x2
 681 0050 08       		.byte	0x8
 682 0051 05       		.byte	0x5
 683 0052 0D020000 		.4byte	.LASF6
 684 0056 02       		.uleb128 0x2
 685 0057 08       		.byte	0x8
 686 0058 07       		.byte	0x7
 687 0059 79010000 		.4byte	.LASF7
 688 005d 03       		.uleb128 0x3
 689 005e 04       		.byte	0x4
 690 005f 05       		.byte	0x5
 691 0060 696E7400 		.ascii	"int\000"
 692 0064 02       		.uleb128 0x2
 693 0065 04       		.byte	0x4
 694 0066 07       		.byte	0x7
 695 0067 52010000 		.4byte	.LASF8
 696 006b 04       		.uleb128 0x4
 697 006c DD000000 		.4byte	.LASF9
 698 0070 02       		.byte	0x2
 699 0071 A1       		.byte	0xa1
 700 0072 2C000000 		.4byte	0x2c
 701 0076 04       		.uleb128 0x4
 702 0077 3D010000 		.4byte	.LASF10
 703 007b 02       		.byte	0x2
 704 007c A3       		.byte	0xa3
 705 007d 48000000 		.4byte	0x48
 706 0081 02       		.uleb128 0x2
 707 0082 04       		.byte	0x4
 708 0083 04       		.byte	0x4
 709 0084 99000000 		.4byte	.LASF11
 710 0088 02       		.uleb128 0x2
 711 0089 08       		.byte	0x8
 712 008a 04       		.byte	0x4
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 27


 713 008b 23010000 		.4byte	.LASF12
 714 008f 02       		.uleb128 0x2
 715 0090 01       		.byte	0x1
 716 0091 08       		.byte	0x8
 717 0092 74010000 		.4byte	.LASF13
 718 0096 05       		.uleb128 0x5
 719 0097 B5000000 		.4byte	.LASF14
 720 009b 02       		.byte	0x2
 721 009c 4B01     		.2byte	0x14b
 722 009e A2000000 		.4byte	0xa2
 723 00a2 06       		.uleb128 0x6
 724 00a3 6B000000 		.4byte	0x6b
 725 00a7 05       		.uleb128 0x5
 726 00a8 00000000 		.4byte	.LASF15
 727 00ac 02       		.byte	0x2
 728 00ad 4D01     		.2byte	0x14d
 729 00af B3000000 		.4byte	0xb3
 730 00b3 06       		.uleb128 0x6
 731 00b4 76000000 		.4byte	0x76
 732 00b8 02       		.uleb128 0x2
 733 00b9 04       		.byte	0x4
 734 00ba 07       		.byte	0x7
 735 00bb 04020000 		.4byte	.LASF16
 736 00bf 07       		.uleb128 0x7
 737 00c0 44010000 		.4byte	.LASF20
 738 00c4 01       		.byte	0x1
 739 00c5 2B       		.byte	0x2b
 740 00c6 00000000 		.4byte	.LFB0
 741 00ca 4C000000 		.4byte	.LFE0-.LFB0
 742 00ce 01       		.uleb128 0x1
 743 00cf 9C       		.byte	0x9c
 744 00d0 E3000000 		.4byte	0xe3
 745 00d4 08       		.uleb128 0x8
 746 00d5 CE010000 		.4byte	.LASF39
 747 00d9 01       		.byte	0x1
 748 00da 2F       		.byte	0x2f
 749 00db 6B000000 		.4byte	0x6b
 750 00df 02       		.uleb128 0x2
 751 00e0 91       		.byte	0x91
 752 00e1 77       		.sleb128 -9
 753 00e2 00       		.byte	0
 754 00e3 09       		.uleb128 0x9
 755 00e4 C1020000 		.4byte	.LASF17
 756 00e8 01       		.byte	0x1
 757 00e9 B4       		.byte	0xb4
 758 00ea 00000000 		.4byte	.LFB1
 759 00ee 20000000 		.4byte	.LFE1-.LFB1
 760 00f2 01       		.uleb128 0x1
 761 00f3 9C       		.byte	0x9c
 762 00f4 0A       		.uleb128 0xa
 763 00f5 EB000000 		.4byte	.LASF18
 764 00f9 01       		.byte	0x1
 765 00fa D7       		.byte	0xd7
 766 00fb 00000000 		.4byte	.LFB2
 767 00ff 20000000 		.4byte	.LFE2-.LFB2
 768 0103 01       		.uleb128 0x1
 769 0104 9C       		.byte	0x9c
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 28


 770 0105 09       		.uleb128 0x9
 771 0106 0C030000 		.4byte	.LASF19
 772 010a 01       		.byte	0x1
 773 010b F7       		.byte	0xf7
 774 010c 00000000 		.4byte	.LFB3
 775 0110 20000000 		.4byte	.LFE3-.LFB3
 776 0114 01       		.uleb128 0x1
 777 0115 9C       		.byte	0x9c
 778 0116 0B       		.uleb128 0xb
 779 0117 90010000 		.4byte	.LASF21
 780 011b 01       		.byte	0x1
 781 011c 1701     		.2byte	0x117
 782 011e 00000000 		.4byte	.LFB4
 783 0122 20000000 		.4byte	.LFE4-.LFB4
 784 0126 01       		.uleb128 0x1
 785 0127 9C       		.byte	0x9c
 786 0128 3C010000 		.4byte	0x13c
 787 012c 0C       		.uleb128 0xc
 788 012d 1B020000 		.4byte	.LASF26
 789 0131 01       		.byte	0x1
 790 0132 1701     		.2byte	0x117
 791 0134 6B000000 		.4byte	0x6b
 792 0138 02       		.uleb128 0x2
 793 0139 91       		.byte	0x91
 794 013a 77       		.sleb128 -9
 795 013b 00       		.byte	0
 796 013c 0D       		.uleb128 0xd
 797 013d 52000000 		.4byte	.LASF22
 798 0141 01       		.byte	0x1
 799 0142 2E01     		.2byte	0x12e
 800 0144 00000000 		.4byte	.LFB5
 801 0148 14000000 		.4byte	.LFE5-.LFB5
 802 014c 01       		.uleb128 0x1
 803 014d 9C       		.byte	0x9c
 804 014e 0E       		.uleb128 0xe
 805 014f E7020000 		.4byte	.LASF23
 806 0153 01       		.byte	0x1
 807 0154 4D01     		.2byte	0x14d
 808 0156 6B000000 		.4byte	0x6b
 809 015a 00000000 		.4byte	.LFB6
 810 015e 18000000 		.4byte	.LFE6-.LFB6
 811 0162 01       		.uleb128 0x1
 812 0163 9C       		.byte	0x9c
 813 0164 0E       		.uleb128 0xe
 814 0165 06000000 		.4byte	.LASF24
 815 0169 01       		.byte	0x1
 816 016a 6401     		.2byte	0x164
 817 016c 6B000000 		.4byte	0x6b
 818 0170 00000000 		.4byte	.LFB7
 819 0174 18000000 		.4byte	.LFE7-.LFB7
 820 0178 01       		.uleb128 0x1
 821 0179 9C       		.byte	0x9c
 822 017a 0B       		.uleb128 0xb
 823 017b E6010000 		.4byte	.LASF25
 824 017f 01       		.byte	0x1
 825 0180 7B01     		.2byte	0x17b
 826 0182 00000000 		.4byte	.LFB8
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 29


 827 0186 20000000 		.4byte	.LFE8-.LFB8
 828 018a 01       		.uleb128 0x1
 829 018b 9C       		.byte	0x9c
 830 018c A0010000 		.4byte	0x1a0
 831 0190 0C       		.uleb128 0xc
 832 0191 E3000000 		.4byte	.LASF27
 833 0195 01       		.byte	0x1
 834 0196 7B01     		.2byte	0x17b
 835 0198 6B000000 		.4byte	0x6b
 836 019c 02       		.uleb128 0x2
 837 019d 91       		.byte	0x91
 838 019e 77       		.sleb128 -9
 839 019f 00       		.byte	0
 840 01a0 0E       		.uleb128 0xe
 841 01a1 0F010000 		.4byte	.LASF28
 842 01a5 01       		.byte	0x1
 843 01a6 9501     		.2byte	0x195
 844 01a8 76000000 		.4byte	0x76
 845 01ac 00000000 		.4byte	.LFB9
 846 01b0 1C000000 		.4byte	.LFE9-.LFB9
 847 01b4 01       		.uleb128 0x1
 848 01b5 9C       		.byte	0x9c
 849 01b6 0F       		.uleb128 0xf
 850 01b7 23000000 		.4byte	.LASF29
 851 01bb 01       		.byte	0x1
 852 01bc AF01     		.2byte	0x1af
 853 01be 00000000 		.4byte	.LFB10
 854 01c2 1C000000 		.4byte	.LFE10-.LFB10
 855 01c6 01       		.uleb128 0x1
 856 01c7 9C       		.byte	0x9c
 857 01c8 DC010000 		.4byte	0x1dc
 858 01cc 0C       		.uleb128 0xc
 859 01cd 38000000 		.4byte	.LASF30
 860 01d1 01       		.byte	0x1
 861 01d2 AF01     		.2byte	0x1af
 862 01d4 76000000 		.4byte	0x76
 863 01d8 02       		.uleb128 0x2
 864 01d9 91       		.byte	0x91
 865 01da 74       		.sleb128 -12
 866 01db 00       		.byte	0
 867 01dc 0E       		.uleb128 0xe
 868 01dd 5F010000 		.4byte	.LASF31
 869 01e1 01       		.byte	0x1
 870 01e2 C801     		.2byte	0x1c8
 871 01e4 76000000 		.4byte	0x76
 872 01e8 00000000 		.4byte	.LFB11
 873 01ec 1C000000 		.4byte	.LFE11-.LFB11
 874 01f0 01       		.uleb128 0x1
 875 01f1 9C       		.byte	0x9c
 876 01f2 0F       		.uleb128 0xf
 877 01f3 D1020000 		.4byte	.LASF32
 878 01f7 01       		.byte	0x1
 879 01f8 E001     		.2byte	0x1e0
 880 01fa 00000000 		.4byte	.LFB12
 881 01fe 1C000000 		.4byte	.LFE12-.LFB12
 882 0202 01       		.uleb128 0x1
 883 0203 9C       		.byte	0x9c
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 30


 884 0204 18020000 		.4byte	0x218
 885 0208 0C       		.uleb128 0xc
 886 0209 9F000000 		.4byte	.LASF33
 887 020d 01       		.byte	0x1
 888 020e E001     		.2byte	0x1e0
 889 0210 76000000 		.4byte	0x76
 890 0214 02       		.uleb128 0x2
 891 0215 91       		.byte	0x91
 892 0216 74       		.sleb128 -12
 893 0217 00       		.byte	0
 894 0218 0E       		.uleb128 0xe
 895 0219 FA000000 		.4byte	.LASF34
 896 021d 01       		.byte	0x1
 897 021e FC01     		.2byte	0x1fc
 898 0220 76000000 		.4byte	0x76
 899 0224 00000000 		.4byte	.LFB13
 900 0228 24000000 		.4byte	.LFE13-.LFB13
 901 022c 01       		.uleb128 0x1
 902 022d 9C       		.byte	0x9c
 903 022e 10       		.uleb128 0x10
 904 022f 2A010000 		.4byte	.LASF35
 905 0233 01       		.byte	0x1
 906 0234 FB02     		.2byte	0x2fb
 907 0236 00000000 		.4byte	.LFB14
 908 023a 1A000000 		.4byte	.LFE14-.LFB14
 909 023e 01       		.uleb128 0x1
 910 023f 9C       		.byte	0x9c
 911 0240 11       		.uleb128 0x11
 912 0241 BA000000 		.4byte	.LASF40
 913 0245 01       		.byte	0x1
 914 0246 1A       		.byte	0x1a
 915 0247 6B000000 		.4byte	0x6b
 916 024b 05       		.uleb128 0x5
 917 024c 03       		.byte	0x3
 918 024d 00000000 		.4byte	TimerPID_initVar
 919 0251 00       		.byte	0
 920              		.section	.debug_abbrev,"",%progbits
 921              	.Ldebug_abbrev0:
 922 0000 01       		.uleb128 0x1
 923 0001 11       		.uleb128 0x11
 924 0002 01       		.byte	0x1
 925 0003 25       		.uleb128 0x25
 926 0004 0E       		.uleb128 0xe
 927 0005 13       		.uleb128 0x13
 928 0006 0B       		.uleb128 0xb
 929 0007 03       		.uleb128 0x3
 930 0008 0E       		.uleb128 0xe
 931 0009 1B       		.uleb128 0x1b
 932 000a 0E       		.uleb128 0xe
 933 000b 55       		.uleb128 0x55
 934 000c 17       		.uleb128 0x17
 935 000d 11       		.uleb128 0x11
 936 000e 01       		.uleb128 0x1
 937 000f 10       		.uleb128 0x10
 938 0010 17       		.uleb128 0x17
 939 0011 00       		.byte	0
 940 0012 00       		.byte	0
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 31


 941 0013 02       		.uleb128 0x2
 942 0014 24       		.uleb128 0x24
 943 0015 00       		.byte	0
 944 0016 0B       		.uleb128 0xb
 945 0017 0B       		.uleb128 0xb
 946 0018 3E       		.uleb128 0x3e
 947 0019 0B       		.uleb128 0xb
 948 001a 03       		.uleb128 0x3
 949 001b 0E       		.uleb128 0xe
 950 001c 00       		.byte	0
 951 001d 00       		.byte	0
 952 001e 03       		.uleb128 0x3
 953 001f 24       		.uleb128 0x24
 954 0020 00       		.byte	0
 955 0021 0B       		.uleb128 0xb
 956 0022 0B       		.uleb128 0xb
 957 0023 3E       		.uleb128 0x3e
 958 0024 0B       		.uleb128 0xb
 959 0025 03       		.uleb128 0x3
 960 0026 08       		.uleb128 0x8
 961 0027 00       		.byte	0
 962 0028 00       		.byte	0
 963 0029 04       		.uleb128 0x4
 964 002a 16       		.uleb128 0x16
 965 002b 00       		.byte	0
 966 002c 03       		.uleb128 0x3
 967 002d 0E       		.uleb128 0xe
 968 002e 3A       		.uleb128 0x3a
 969 002f 0B       		.uleb128 0xb
 970 0030 3B       		.uleb128 0x3b
 971 0031 0B       		.uleb128 0xb
 972 0032 49       		.uleb128 0x49
 973 0033 13       		.uleb128 0x13
 974 0034 00       		.byte	0
 975 0035 00       		.byte	0
 976 0036 05       		.uleb128 0x5
 977 0037 16       		.uleb128 0x16
 978 0038 00       		.byte	0
 979 0039 03       		.uleb128 0x3
 980 003a 0E       		.uleb128 0xe
 981 003b 3A       		.uleb128 0x3a
 982 003c 0B       		.uleb128 0xb
 983 003d 3B       		.uleb128 0x3b
 984 003e 05       		.uleb128 0x5
 985 003f 49       		.uleb128 0x49
 986 0040 13       		.uleb128 0x13
 987 0041 00       		.byte	0
 988 0042 00       		.byte	0
 989 0043 06       		.uleb128 0x6
 990 0044 35       		.uleb128 0x35
 991 0045 00       		.byte	0
 992 0046 49       		.uleb128 0x49
 993 0047 13       		.uleb128 0x13
 994 0048 00       		.byte	0
 995 0049 00       		.byte	0
 996 004a 07       		.uleb128 0x7
 997 004b 2E       		.uleb128 0x2e
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 32


 998 004c 01       		.byte	0x1
 999 004d 3F       		.uleb128 0x3f
 1000 004e 19       		.uleb128 0x19
 1001 004f 03       		.uleb128 0x3
 1002 0050 0E       		.uleb128 0xe
 1003 0051 3A       		.uleb128 0x3a
 1004 0052 0B       		.uleb128 0xb
 1005 0053 3B       		.uleb128 0x3b
 1006 0054 0B       		.uleb128 0xb
 1007 0055 27       		.uleb128 0x27
 1008 0056 19       		.uleb128 0x19
 1009 0057 11       		.uleb128 0x11
 1010 0058 01       		.uleb128 0x1
 1011 0059 12       		.uleb128 0x12
 1012 005a 06       		.uleb128 0x6
 1013 005b 40       		.uleb128 0x40
 1014 005c 18       		.uleb128 0x18
 1015 005d 9642     		.uleb128 0x2116
 1016 005f 19       		.uleb128 0x19
 1017 0060 01       		.uleb128 0x1
 1018 0061 13       		.uleb128 0x13
 1019 0062 00       		.byte	0
 1020 0063 00       		.byte	0
 1021 0064 08       		.uleb128 0x8
 1022 0065 34       		.uleb128 0x34
 1023 0066 00       		.byte	0
 1024 0067 03       		.uleb128 0x3
 1025 0068 0E       		.uleb128 0xe
 1026 0069 3A       		.uleb128 0x3a
 1027 006a 0B       		.uleb128 0xb
 1028 006b 3B       		.uleb128 0x3b
 1029 006c 0B       		.uleb128 0xb
 1030 006d 49       		.uleb128 0x49
 1031 006e 13       		.uleb128 0x13
 1032 006f 02       		.uleb128 0x2
 1033 0070 18       		.uleb128 0x18
 1034 0071 00       		.byte	0
 1035 0072 00       		.byte	0
 1036 0073 09       		.uleb128 0x9
 1037 0074 2E       		.uleb128 0x2e
 1038 0075 00       		.byte	0
 1039 0076 3F       		.uleb128 0x3f
 1040 0077 19       		.uleb128 0x19
 1041 0078 03       		.uleb128 0x3
 1042 0079 0E       		.uleb128 0xe
 1043 007a 3A       		.uleb128 0x3a
 1044 007b 0B       		.uleb128 0xb
 1045 007c 3B       		.uleb128 0x3b
 1046 007d 0B       		.uleb128 0xb
 1047 007e 27       		.uleb128 0x27
 1048 007f 19       		.uleb128 0x19
 1049 0080 11       		.uleb128 0x11
 1050 0081 01       		.uleb128 0x1
 1051 0082 12       		.uleb128 0x12
 1052 0083 06       		.uleb128 0x6
 1053 0084 40       		.uleb128 0x40
 1054 0085 18       		.uleb128 0x18
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 33


 1055 0086 9742     		.uleb128 0x2117
 1056 0088 19       		.uleb128 0x19
 1057 0089 00       		.byte	0
 1058 008a 00       		.byte	0
 1059 008b 0A       		.uleb128 0xa
 1060 008c 2E       		.uleb128 0x2e
 1061 008d 00       		.byte	0
 1062 008e 3F       		.uleb128 0x3f
 1063 008f 19       		.uleb128 0x19
 1064 0090 03       		.uleb128 0x3
 1065 0091 0E       		.uleb128 0xe
 1066 0092 3A       		.uleb128 0x3a
 1067 0093 0B       		.uleb128 0xb
 1068 0094 3B       		.uleb128 0x3b
 1069 0095 0B       		.uleb128 0xb
 1070 0096 27       		.uleb128 0x27
 1071 0097 19       		.uleb128 0x19
 1072 0098 11       		.uleb128 0x11
 1073 0099 01       		.uleb128 0x1
 1074 009a 12       		.uleb128 0x12
 1075 009b 06       		.uleb128 0x6
 1076 009c 40       		.uleb128 0x40
 1077 009d 18       		.uleb128 0x18
 1078 009e 9642     		.uleb128 0x2116
 1079 00a0 19       		.uleb128 0x19
 1080 00a1 00       		.byte	0
 1081 00a2 00       		.byte	0
 1082 00a3 0B       		.uleb128 0xb
 1083 00a4 2E       		.uleb128 0x2e
 1084 00a5 01       		.byte	0x1
 1085 00a6 3F       		.uleb128 0x3f
 1086 00a7 19       		.uleb128 0x19
 1087 00a8 03       		.uleb128 0x3
 1088 00a9 0E       		.uleb128 0xe
 1089 00aa 3A       		.uleb128 0x3a
 1090 00ab 0B       		.uleb128 0xb
 1091 00ac 3B       		.uleb128 0x3b
 1092 00ad 05       		.uleb128 0x5
 1093 00ae 27       		.uleb128 0x27
 1094 00af 19       		.uleb128 0x19
 1095 00b0 11       		.uleb128 0x11
 1096 00b1 01       		.uleb128 0x1
 1097 00b2 12       		.uleb128 0x12
 1098 00b3 06       		.uleb128 0x6
 1099 00b4 40       		.uleb128 0x40
 1100 00b5 18       		.uleb128 0x18
 1101 00b6 9742     		.uleb128 0x2117
 1102 00b8 19       		.uleb128 0x19
 1103 00b9 01       		.uleb128 0x1
 1104 00ba 13       		.uleb128 0x13
 1105 00bb 00       		.byte	0
 1106 00bc 00       		.byte	0
 1107 00bd 0C       		.uleb128 0xc
 1108 00be 05       		.uleb128 0x5
 1109 00bf 00       		.byte	0
 1110 00c0 03       		.uleb128 0x3
 1111 00c1 0E       		.uleb128 0xe
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 34


 1112 00c2 3A       		.uleb128 0x3a
 1113 00c3 0B       		.uleb128 0xb
 1114 00c4 3B       		.uleb128 0x3b
 1115 00c5 05       		.uleb128 0x5
 1116 00c6 49       		.uleb128 0x49
 1117 00c7 13       		.uleb128 0x13
 1118 00c8 02       		.uleb128 0x2
 1119 00c9 18       		.uleb128 0x18
 1120 00ca 00       		.byte	0
 1121 00cb 00       		.byte	0
 1122 00cc 0D       		.uleb128 0xd
 1123 00cd 2E       		.uleb128 0x2e
 1124 00ce 00       		.byte	0
 1125 00cf 3F       		.uleb128 0x3f
 1126 00d0 19       		.uleb128 0x19
 1127 00d1 03       		.uleb128 0x3
 1128 00d2 0E       		.uleb128 0xe
 1129 00d3 3A       		.uleb128 0x3a
 1130 00d4 0B       		.uleb128 0xb
 1131 00d5 3B       		.uleb128 0x3b
 1132 00d6 05       		.uleb128 0x5
 1133 00d7 27       		.uleb128 0x27
 1134 00d8 19       		.uleb128 0x19
 1135 00d9 11       		.uleb128 0x11
 1136 00da 01       		.uleb128 0x1
 1137 00db 12       		.uleb128 0x12
 1138 00dc 06       		.uleb128 0x6
 1139 00dd 40       		.uleb128 0x40
 1140 00de 18       		.uleb128 0x18
 1141 00df 9742     		.uleb128 0x2117
 1142 00e1 19       		.uleb128 0x19
 1143 00e2 00       		.byte	0
 1144 00e3 00       		.byte	0
 1145 00e4 0E       		.uleb128 0xe
 1146 00e5 2E       		.uleb128 0x2e
 1147 00e6 00       		.byte	0
 1148 00e7 3F       		.uleb128 0x3f
 1149 00e8 19       		.uleb128 0x19
 1150 00e9 03       		.uleb128 0x3
 1151 00ea 0E       		.uleb128 0xe
 1152 00eb 3A       		.uleb128 0x3a
 1153 00ec 0B       		.uleb128 0xb
 1154 00ed 3B       		.uleb128 0x3b
 1155 00ee 05       		.uleb128 0x5
 1156 00ef 27       		.uleb128 0x27
 1157 00f0 19       		.uleb128 0x19
 1158 00f1 49       		.uleb128 0x49
 1159 00f2 13       		.uleb128 0x13
 1160 00f3 11       		.uleb128 0x11
 1161 00f4 01       		.uleb128 0x1
 1162 00f5 12       		.uleb128 0x12
 1163 00f6 06       		.uleb128 0x6
 1164 00f7 40       		.uleb128 0x40
 1165 00f8 18       		.uleb128 0x18
 1166 00f9 9742     		.uleb128 0x2117
 1167 00fb 19       		.uleb128 0x19
 1168 00fc 00       		.byte	0
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 35


 1169 00fd 00       		.byte	0
 1170 00fe 0F       		.uleb128 0xf
 1171 00ff 2E       		.uleb128 0x2e
 1172 0100 01       		.byte	0x1
 1173 0101 3F       		.uleb128 0x3f
 1174 0102 19       		.uleb128 0x19
 1175 0103 03       		.uleb128 0x3
 1176 0104 0E       		.uleb128 0xe
 1177 0105 3A       		.uleb128 0x3a
 1178 0106 0B       		.uleb128 0xb
 1179 0107 3B       		.uleb128 0x3b
 1180 0108 05       		.uleb128 0x5
 1181 0109 27       		.uleb128 0x27
 1182 010a 19       		.uleb128 0x19
 1183 010b 11       		.uleb128 0x11
 1184 010c 01       		.uleb128 0x1
 1185 010d 12       		.uleb128 0x12
 1186 010e 06       		.uleb128 0x6
 1187 010f 40       		.uleb128 0x40
 1188 0110 18       		.uleb128 0x18
 1189 0111 9642     		.uleb128 0x2116
 1190 0113 19       		.uleb128 0x19
 1191 0114 01       		.uleb128 0x1
 1192 0115 13       		.uleb128 0x13
 1193 0116 00       		.byte	0
 1194 0117 00       		.byte	0
 1195 0118 10       		.uleb128 0x10
 1196 0119 2E       		.uleb128 0x2e
 1197 011a 00       		.byte	0
 1198 011b 3F       		.uleb128 0x3f
 1199 011c 19       		.uleb128 0x19
 1200 011d 03       		.uleb128 0x3
 1201 011e 0E       		.uleb128 0xe
 1202 011f 3A       		.uleb128 0x3a
 1203 0120 0B       		.uleb128 0xb
 1204 0121 3B       		.uleb128 0x3b
 1205 0122 05       		.uleb128 0x5
 1206 0123 27       		.uleb128 0x27
 1207 0124 19       		.uleb128 0x19
 1208 0125 11       		.uleb128 0x11
 1209 0126 01       		.uleb128 0x1
 1210 0127 12       		.uleb128 0x12
 1211 0128 06       		.uleb128 0x6
 1212 0129 40       		.uleb128 0x40
 1213 012a 18       		.uleb128 0x18
 1214 012b 9642     		.uleb128 0x2116
 1215 012d 19       		.uleb128 0x19
 1216 012e 00       		.byte	0
 1217 012f 00       		.byte	0
 1218 0130 11       		.uleb128 0x11
 1219 0131 34       		.uleb128 0x34
 1220 0132 00       		.byte	0
 1221 0133 03       		.uleb128 0x3
 1222 0134 0E       		.uleb128 0xe
 1223 0135 3A       		.uleb128 0x3a
 1224 0136 0B       		.uleb128 0xb
 1225 0137 3B       		.uleb128 0x3b
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 36


 1226 0138 0B       		.uleb128 0xb
 1227 0139 49       		.uleb128 0x49
 1228 013a 13       		.uleb128 0x13
 1229 013b 3F       		.uleb128 0x3f
 1230 013c 19       		.uleb128 0x19
 1231 013d 02       		.uleb128 0x2
 1232 013e 18       		.uleb128 0x18
 1233 013f 00       		.byte	0
 1234 0140 00       		.byte	0
 1235 0141 00       		.byte	0
 1236              		.section	.debug_aranges,"",%progbits
 1237 0000 8C000000 		.4byte	0x8c
 1238 0004 0200     		.2byte	0x2
 1239 0006 00000000 		.4byte	.Ldebug_info0
 1240 000a 04       		.byte	0x4
 1241 000b 00       		.byte	0
 1242 000c 0000     		.2byte	0
 1243 000e 0000     		.2byte	0
 1244 0010 00000000 		.4byte	.LFB0
 1245 0014 4C000000 		.4byte	.LFE0-.LFB0
 1246 0018 00000000 		.4byte	.LFB1
 1247 001c 20000000 		.4byte	.LFE1-.LFB1
 1248 0020 00000000 		.4byte	.LFB2
 1249 0024 20000000 		.4byte	.LFE2-.LFB2
 1250 0028 00000000 		.4byte	.LFB3
 1251 002c 20000000 		.4byte	.LFE3-.LFB3
 1252 0030 00000000 		.4byte	.LFB4
 1253 0034 20000000 		.4byte	.LFE4-.LFB4
 1254 0038 00000000 		.4byte	.LFB5
 1255 003c 14000000 		.4byte	.LFE5-.LFB5
 1256 0040 00000000 		.4byte	.LFB6
 1257 0044 18000000 		.4byte	.LFE6-.LFB6
 1258 0048 00000000 		.4byte	.LFB7
 1259 004c 18000000 		.4byte	.LFE7-.LFB7
 1260 0050 00000000 		.4byte	.LFB8
 1261 0054 20000000 		.4byte	.LFE8-.LFB8
 1262 0058 00000000 		.4byte	.LFB9
 1263 005c 1C000000 		.4byte	.LFE9-.LFB9
 1264 0060 00000000 		.4byte	.LFB10
 1265 0064 1C000000 		.4byte	.LFE10-.LFB10
 1266 0068 00000000 		.4byte	.LFB11
 1267 006c 1C000000 		.4byte	.LFE11-.LFB11
 1268 0070 00000000 		.4byte	.LFB12
 1269 0074 1C000000 		.4byte	.LFE12-.LFB12
 1270 0078 00000000 		.4byte	.LFB13
 1271 007c 24000000 		.4byte	.LFE13-.LFB13
 1272 0080 00000000 		.4byte	.LFB14
 1273 0084 1A000000 		.4byte	.LFE14-.LFB14
 1274 0088 00000000 		.4byte	0
 1275 008c 00000000 		.4byte	0
 1276              		.section	.debug_ranges,"",%progbits
 1277              	.Ldebug_ranges0:
 1278 0000 00000000 		.4byte	.LFB0
 1279 0004 4C000000 		.4byte	.LFE0
 1280 0008 00000000 		.4byte	.LFB1
 1281 000c 20000000 		.4byte	.LFE1
 1282 0010 00000000 		.4byte	.LFB2
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 37


 1283 0014 20000000 		.4byte	.LFE2
 1284 0018 00000000 		.4byte	.LFB3
 1285 001c 20000000 		.4byte	.LFE3
 1286 0020 00000000 		.4byte	.LFB4
 1287 0024 20000000 		.4byte	.LFE4
 1288 0028 00000000 		.4byte	.LFB5
 1289 002c 14000000 		.4byte	.LFE5
 1290 0030 00000000 		.4byte	.LFB6
 1291 0034 18000000 		.4byte	.LFE6
 1292 0038 00000000 		.4byte	.LFB7
 1293 003c 18000000 		.4byte	.LFE7
 1294 0040 00000000 		.4byte	.LFB8
 1295 0044 20000000 		.4byte	.LFE8
 1296 0048 00000000 		.4byte	.LFB9
 1297 004c 1C000000 		.4byte	.LFE9
 1298 0050 00000000 		.4byte	.LFB10
 1299 0054 1C000000 		.4byte	.LFE10
 1300 0058 00000000 		.4byte	.LFB11
 1301 005c 1C000000 		.4byte	.LFE11
 1302 0060 00000000 		.4byte	.LFB12
 1303 0064 1C000000 		.4byte	.LFE12
 1304 0068 00000000 		.4byte	.LFB13
 1305 006c 24000000 		.4byte	.LFE13
 1306 0070 00000000 		.4byte	.LFB14
 1307 0074 1A000000 		.4byte	.LFE14
 1308 0078 00000000 		.4byte	0
 1309 007c 00000000 		.4byte	0
 1310              		.section	.debug_line,"",%progbits
 1311              	.Ldebug_line0:
 1312 0000 6F010000 		.section	.debug_str,"MS",%progbits,1
 1312      02004700 
 1312      00000201 
 1312      FB0E0D00 
 1312      01010101 
 1313              	.LASF15:
 1314 0000 72656733 		.ascii	"reg32\000"
 1314      3200
 1315              	.LASF24:
 1316 0006 54696D65 		.ascii	"TimerPID_ReadControlRegister\000"
 1316      72504944 
 1316      5F526561 
 1316      64436F6E 
 1316      74726F6C 
 1317              	.LASF29:
 1318 0023 54696D65 		.ascii	"TimerPID_WritePeriod\000"
 1318      72504944 
 1318      5F577269 
 1318      74655065 
 1318      72696F64 
 1319              	.LASF30:
 1320 0038 70657269 		.ascii	"period\000"
 1320      6F6400
 1321              	.LASF3:
 1322 003f 73686F72 		.ascii	"short unsigned int\000"
 1322      7420756E 
 1322      7369676E 
 1322      65642069 
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 38


 1322      6E7400
 1323              	.LASF22:
 1324 0052 54696D65 		.ascii	"TimerPID_SoftwareCapture\000"
 1324      72504944 
 1324      5F536F66 
 1324      74776172 
 1324      65436170 
 1325              	.LASF38:
 1326 006b 433A5C55 		.ascii	"C:\\Users\\Lois\\Desktop\\MC1_5\\MC1_5_PSOC5.cydsn\000"
 1326      73657273 
 1326      5C4C6F69 
 1326      735C4465 
 1326      736B746F 
 1327              	.LASF11:
 1328 0099 666C6F61 		.ascii	"float\000"
 1328      7400
 1329              	.LASF33:
 1330 009f 636F756E 		.ascii	"counter\000"
 1330      74657200 
 1331              	.LASF1:
 1332 00a7 756E7369 		.ascii	"unsigned char\000"
 1332      676E6564 
 1332      20636861 
 1332      7200
 1333              	.LASF14:
 1334 00b5 72656738 		.ascii	"reg8\000"
 1334      00
 1335              	.LASF40:
 1336 00ba 54696D65 		.ascii	"TimerPID_initVar\000"
 1336      72504944 
 1336      5F696E69 
 1336      74566172 
 1336      00
 1337              	.LASF5:
 1338 00cb 6C6F6E67 		.ascii	"long unsigned int\000"
 1338      20756E73 
 1338      69676E65 
 1338      6420696E 
 1338      7400
 1339              	.LASF9:
 1340 00dd 75696E74 		.ascii	"uint8\000"
 1340      3800
 1341              	.LASF27:
 1342 00e3 636F6E74 		.ascii	"control\000"
 1342      726F6C00 
 1343              	.LASF18:
 1344 00eb 54696D65 		.ascii	"TimerPID_Start\000"
 1344      72504944 
 1344      5F537461 
 1344      727400
 1345              	.LASF34:
 1346 00fa 54696D65 		.ascii	"TimerPID_ReadCounter\000"
 1346      72504944 
 1346      5F526561 
 1346      64436F75 
 1346      6E746572 
 1347              	.LASF28:
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 39


 1348 010f 54696D65 		.ascii	"TimerPID_ReadPeriod\000"
 1348      72504944 
 1348      5F526561 
 1348      64506572 
 1348      696F6400 
 1349              	.LASF12:
 1350 0123 646F7562 		.ascii	"double\000"
 1350      6C6500
 1351              	.LASF35:
 1352 012a 54696D65 		.ascii	"TimerPID_ClearFIFO\000"
 1352      72504944 
 1352      5F436C65 
 1352      61724649 
 1352      464F00
 1353              	.LASF10:
 1354 013d 75696E74 		.ascii	"uint32\000"
 1354      333200
 1355              	.LASF20:
 1356 0144 54696D65 		.ascii	"TimerPID_Init\000"
 1356      72504944 
 1356      5F496E69 
 1356      7400
 1357              	.LASF8:
 1358 0152 756E7369 		.ascii	"unsigned int\000"
 1358      676E6564 
 1358      20696E74 
 1358      00
 1359              	.LASF31:
 1360 015f 54696D65 		.ascii	"TimerPID_ReadCapture\000"
 1360      72504944 
 1360      5F526561 
 1360      64436170 
 1360      74757265 
 1361              	.LASF13:
 1362 0174 63686172 		.ascii	"char\000"
 1362      00
 1363              	.LASF7:
 1364 0179 6C6F6E67 		.ascii	"long long unsigned int\000"
 1364      206C6F6E 
 1364      6720756E 
 1364      7369676E 
 1364      65642069 
 1365              	.LASF21:
 1366 0190 54696D65 		.ascii	"TimerPID_SetInterruptMode\000"
 1366      72504944 
 1366      5F536574 
 1366      496E7465 
 1366      72727570 
 1367              	.LASF37:
 1368 01aa 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\TimerPID.c\000"
 1368      6E657261 
 1368      7465645F 
 1368      536F7572 
 1368      63655C50 
 1369              	.LASF39:
 1370 01ce 54696D65 		.ascii	"TimerPID_interruptState\000"
 1370      72504944 
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 40


 1370      5F696E74 
 1370      65727275 
 1370      70745374 
 1371              	.LASF25:
 1372 01e6 54696D65 		.ascii	"TimerPID_WriteControlRegister\000"
 1372      72504944 
 1372      5F577269 
 1372      7465436F 
 1372      6E74726F 
 1373              	.LASF16:
 1374 0204 73697A65 		.ascii	"sizetype\000"
 1374      74797065 
 1374      00
 1375              	.LASF6:
 1376 020d 6C6F6E67 		.ascii	"long long int\000"
 1376      206C6F6E 
 1376      6720696E 
 1376      7400
 1377              	.LASF26:
 1378 021b 696E7465 		.ascii	"interruptMode\000"
 1378      72727570 
 1378      744D6F64 
 1378      6500
 1379              	.LASF36:
 1380 0229 474E5520 		.ascii	"GNU C 4.9.3 20150303 (release) [ARM/embedded-4_9-br"
 1380      4320342E 
 1380      392E3320 
 1380      32303135 
 1380      30333033 
 1381 025c 616E6368 		.ascii	"anch revision 221220] -mcpu=cortex-m3 -mthumb -g -O"
 1381      20726576 
 1381      6973696F 
 1381      6E203232 
 1381      31323230 
 1382 028f 30202D66 		.ascii	"0 -ffunction-sections -ffat-lto-objects\000"
 1382      66756E63 
 1382      74696F6E 
 1382      2D736563 
 1382      74696F6E 
 1383              	.LASF2:
 1384 02b7 73686F72 		.ascii	"short int\000"
 1384      7420696E 
 1384      7400
 1385              	.LASF17:
 1386 02c1 54696D65 		.ascii	"TimerPID_Enable\000"
 1386      72504944 
 1386      5F456E61 
 1386      626C6500 
 1387              	.LASF32:
 1388 02d1 54696D65 		.ascii	"TimerPID_WriteCounter\000"
 1388      72504944 
 1388      5F577269 
 1388      7465436F 
 1388      756E7465 
 1389              	.LASF23:
 1390 02e7 54696D65 		.ascii	"TimerPID_ReadStatusRegister\000"
 1390      72504944 
ARM GAS  C:\Users\Lois\AppData\Local\Temp\cclKRIK7.s 			page 41


 1390      5F526561 
 1390      64537461 
 1390      74757352 
 1391              	.LASF4:
 1392 0303 6C6F6E67 		.ascii	"long int\000"
 1392      20696E74 
 1392      00
 1393              	.LASF19:
 1394 030c 54696D65 		.ascii	"TimerPID_Stop\000"
 1394      72504944 
 1394      5F53746F 
 1394      7000
 1395              	.LASF0:
 1396 031a 7369676E 		.ascii	"signed char\000"
 1396      65642063 
 1396      68617200 
 1397              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.9.3 20150303 (release) [ARM/embedded-4_9-br
