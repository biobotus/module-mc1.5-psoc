ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART_episr.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.UART_EP_1_ISR,"ax",%progbits
  19              		.align	2
  20              		.global	UART_EP_1_ISR
  21              		.thumb
  22              		.thumb_func
  23              		.type	UART_EP_1_ISR, %function
  24              	UART_EP_1_ISR:
  25              	.LFB0:
  26              		.file 1 ".\\Generated_Source\\PSoC5\\UART_episr.c"
   1:.\Generated_Source\PSoC5/UART_episr.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART_episr.c **** * File Name: UART_episr.c
   3:.\Generated_Source\PSoC5/UART_episr.c **** * Version 2.80
   4:.\Generated_Source\PSoC5/UART_episr.c **** *
   5:.\Generated_Source\PSoC5/UART_episr.c **** * Description:
   6:.\Generated_Source\PSoC5/UART_episr.c **** *  Data endpoint Interrupt Service Routines
   7:.\Generated_Source\PSoC5/UART_episr.c **** *
   8:.\Generated_Source\PSoC5/UART_episr.c **** * Note:
   9:.\Generated_Source\PSoC5/UART_episr.c **** *
  10:.\Generated_Source\PSoC5/UART_episr.c **** ********************************************************************************
  11:.\Generated_Source\PSoC5/UART_episr.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  12:.\Generated_Source\PSoC5/UART_episr.c **** * You may use this file only in accordance with the license, terms, conditions,
  13:.\Generated_Source\PSoC5/UART_episr.c **** * disclaimers, and limitations in the end user license agreement accompanying
  14:.\Generated_Source\PSoC5/UART_episr.c **** * the software package with which this file was provided.
  15:.\Generated_Source\PSoC5/UART_episr.c **** *******************************************************************************/
  16:.\Generated_Source\PSoC5/UART_episr.c **** 
  17:.\Generated_Source\PSoC5/UART_episr.c **** #include "UART.h"
  18:.\Generated_Source\PSoC5/UART_episr.c **** #include "UART_pvt.h"
  19:.\Generated_Source\PSoC5/UART_episr.c **** #if (defined(UART_ENABLE_MIDI_STREAMING) && (UART_ENABLE_MIDI_API != 0u))
  20:.\Generated_Source\PSoC5/UART_episr.c ****     #include "UART_midi.h"
  21:.\Generated_Source\PSoC5/UART_episr.c **** #endif /* (defined(UART_ENABLE_MIDI_STREAMING) && (UART_ENABLE_MIDI_API != 0u)) */
  22:.\Generated_Source\PSoC5/UART_episr.c **** #if ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
  23:.\Generated_Source\PSoC5/UART_episr.c ****     #include "UART_EP8_DMA_Done_SR.h"
  24:.\Generated_Source\PSoC5/UART_episr.c ****     #include "UART_EP17_DMA_Done_SR.h"
  25:.\Generated_Source\PSoC5/UART_episr.c **** #endif /* (UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u) */
  26:.\Generated_Source\PSoC5/UART_episr.c **** 
  27:.\Generated_Source\PSoC5/UART_episr.c **** 
  28:.\Generated_Source\PSoC5/UART_episr.c **** /***************************************
  29:.\Generated_Source\PSoC5/UART_episr.c **** * Custom Declarations
  30:.\Generated_Source\PSoC5/UART_episr.c **** ***************************************/
  31:.\Generated_Source\PSoC5/UART_episr.c **** /* `#START CUSTOM_DECLARATIONS` Place your declaration here */
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 2


  32:.\Generated_Source\PSoC5/UART_episr.c **** //#include <device.h>
  33:.\Generated_Source\PSoC5/UART_episr.c **** /* `#END` */
  34:.\Generated_Source\PSoC5/UART_episr.c **** 
  35:.\Generated_Source\PSoC5/UART_episr.c **** 
  36:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP1_ISR_REMOVE == 0u)
  37:.\Generated_Source\PSoC5/UART_episr.c **** 
  38:.\Generated_Source\PSoC5/UART_episr.c **** 
  39:.\Generated_Source\PSoC5/UART_episr.c ****     /******************************************************************************
  40:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_1_ISR
  41:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************
  42:.\Generated_Source\PSoC5/UART_episr.c ****     *
  43:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
  44:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 1 Interrupt Service Routine
  45:.\Generated_Source\PSoC5/UART_episr.c ****     *
  46:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
  47:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
  48:.\Generated_Source\PSoC5/UART_episr.c ****     *
  49:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
  50:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
  51:.\Generated_Source\PSoC5/UART_episr.c ****     *
  52:.\Generated_Source\PSoC5/UART_episr.c ****     ******************************************************************************/
  53:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_1_ISR)
  54:.\Generated_Source\PSoC5/UART_episr.c ****     {
  27              		.loc 1 54 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32 0000 80B4     		push	{r7}
  33              		.cfi_def_cfa_offset 4
  34              		.cfi_offset 7, -4
  35 0002 00AF     		add	r7, sp, #0
  36              		.cfi_def_cfa_register 7
  55:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT)  && \
  56:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  57:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
  58:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  59:.\Generated_Source\PSoC5/UART_episr.c **** 
  60:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP1_USER_CODE` Place your code here */
  61:.\Generated_Source\PSoC5/UART_episr.c **** 
  62:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
  63:.\Generated_Source\PSoC5/UART_episr.c **** 
  64:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
  65:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  66:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
  67:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
  68:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  69:.\Generated_Source\PSoC5/UART_episr.c **** 
  70:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP1_CR0_PTR); /* Must read the mode reg */
  37              		.loc 1 70 0
  38 0004 104B     		ldr	r3, .L3
  39 0006 1B78     		ldrb	r3, [r3]
  71:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
  72:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP1].attrib & UART_EP_TYPE_MASK) !=
  40              		.loc 1 72 0
  41 0008 104B     		ldr	r3, .L3+4
  42 000a 1B7B     		ldrb	r3, [r3, #12]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 3


  43 000c DBB2     		uxtb	r3, r3
  44 000e 03F00303 		and	r3, r3, #3
  45 0012 012B     		cmp	r3, #1
  46 0014 08D0     		beq	.L2
  73:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
  74:.\Generated_Source\PSoC5/UART_episr.c ****         {
  75:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP1].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
  47              		.loc 1 75 0
  48 0016 0D4B     		ldr	r3, .L3+4
  49 0018 DB7B     		ldrb	r3, [r3, #15]
  50 001a DBB2     		uxtb	r3, r3
  51 001c 83F07F03 		eor	r3, r3, #127
  52 0020 DB43     		mvns	r3, r3
  53 0022 DAB2     		uxtb	r2, r3
  54 0024 094B     		ldr	r3, .L3+4
  55 0026 DA73     		strb	r2, [r3, #15]
  56              	.L2:
  76:.\Generated_Source\PSoC5/UART_episr.c ****         }
  77:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP1].apiEpState = UART_EVENT_PENDING;
  57              		.loc 1 77 0
  58 0028 084B     		ldr	r3, .L3+4
  59 002a 0122     		movs	r2, #1
  60 002c 5A73     		strb	r2, [r3, #13]
  78:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR) &
  61              		.loc 1 78 0
  62 002e 084B     		ldr	r3, .L3+8
  63 0030 074A     		ldr	r2, .L3+8
  64 0032 1278     		ldrb	r2, [r2]
  65 0034 D2B2     		uxtb	r2, r2
  66 0036 22F00102 		bic	r2, r2, #1
  67 003a D2B2     		uxtb	r2, r2
  68 003c 1A70     		strb	r2, [r3]
  79:.\Generated_Source\PSoC5/UART_episr.c ****                                                                     (uint8)~UART_SIE_EP_INT_EP1_MAS
  80:.\Generated_Source\PSoC5/UART_episr.c **** 
  81:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
  82:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
  83:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP1)
  84:.\Generated_Source\PSoC5/UART_episr.c ****             {
  85:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
  86:.\Generated_Source\PSoC5/UART_episr.c ****             }
  87:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
  88:.\Generated_Source\PSoC5/UART_episr.c **** 
  89:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP1_END_USER_CODE` Place your code here */
  90:.\Generated_Source\PSoC5/UART_episr.c **** 
  91:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
  92:.\Generated_Source\PSoC5/UART_episr.c **** 
  93:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
  94:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
  95:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
  96:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
  97:.\Generated_Source\PSoC5/UART_episr.c ****     }
  69              		.loc 1 97 0
  70 003e BD46     		mov	sp, r7
  71              		@ sp needed
  72 0040 5DF8047B 		ldr	r7, [sp], #4
  73 0044 7047     		bx	lr
  74              	.L4:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 4


  75 0046 00BF     		.align	2
  76              	.L3:
  77 0048 0E600040 		.word	1073766414
  78 004c 00000000 		.word	UART_EP
  79 0050 0B600040 		.word	1073766411
  80              		.cfi_endproc
  81              	.LFE0:
  82              		.size	UART_EP_1_ISR, .-UART_EP_1_ISR
  83              		.section	.text.UART_EP_2_ISR,"ax",%progbits
  84              		.align	2
  85              		.global	UART_EP_2_ISR
  86              		.thumb
  87              		.thumb_func
  88              		.type	UART_EP_2_ISR, %function
  89              	UART_EP_2_ISR:
  90              	.LFB1:
  98:.\Generated_Source\PSoC5/UART_episr.c **** 
  99:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP1_ISR_REMOVE */
 100:.\Generated_Source\PSoC5/UART_episr.c **** 
 101:.\Generated_Source\PSoC5/UART_episr.c **** 
 102:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP2_ISR_REMOVE == 0u)
 103:.\Generated_Source\PSoC5/UART_episr.c **** 
 104:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 105:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_2_ISR
 106:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 107:.\Generated_Source\PSoC5/UART_episr.c ****     *
 108:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 109:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 2 Interrupt Service Routine
 110:.\Generated_Source\PSoC5/UART_episr.c ****     *
 111:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 112:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 113:.\Generated_Source\PSoC5/UART_episr.c ****     *
 114:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 115:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 116:.\Generated_Source\PSoC5/UART_episr.c ****     *
 117:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 118:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_2_ISR)
 119:.\Generated_Source\PSoC5/UART_episr.c ****     {
  91              		.loc 1 119 0
  92              		.cfi_startproc
  93              		@ args = 0, pretend = 0, frame = 0
  94              		@ frame_needed = 1, uses_anonymous_args = 0
  95              		@ link register save eliminated.
  96 0000 80B4     		push	{r7}
  97              		.cfi_def_cfa_offset 4
  98              		.cfi_offset 7, -4
  99 0002 00AF     		add	r7, sp, #0
 100              		.cfi_def_cfa_register 7
 120:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 121:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 122:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 123:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 124:.\Generated_Source\PSoC5/UART_episr.c **** 
 125:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP2_USER_CODE` Place your code here */
 126:.\Generated_Source\PSoC5/UART_episr.c **** 
 127:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 128:.\Generated_Source\PSoC5/UART_episr.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 5


 129:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 130:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 131:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 132:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 133:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 134:.\Generated_Source\PSoC5/UART_episr.c **** 
 135:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP2_CR0_PTR); /* Must read the mode reg */
 101              		.loc 1 135 0
 102 0004 104B     		ldr	r3, .L7
 103 0006 1B78     		ldrb	r3, [r3]
 136:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 137:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP2].attrib & UART_EP_TYPE_MASK) !=
 104              		.loc 1 137 0
 105 0008 104B     		ldr	r3, .L7+4
 106 000a 1B7E     		ldrb	r3, [r3, #24]
 107 000c DBB2     		uxtb	r3, r3
 108 000e 03F00303 		and	r3, r3, #3
 109 0012 012B     		cmp	r3, #1
 110 0014 08D0     		beq	.L6
 138:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 139:.\Generated_Source\PSoC5/UART_episr.c ****         {
 140:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP2].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 111              		.loc 1 140 0
 112 0016 0D4B     		ldr	r3, .L7+4
 113 0018 DB7E     		ldrb	r3, [r3, #27]
 114 001a DBB2     		uxtb	r3, r3
 115 001c 83F07F03 		eor	r3, r3, #127
 116 0020 DB43     		mvns	r3, r3
 117 0022 DAB2     		uxtb	r2, r3
 118 0024 094B     		ldr	r3, .L7+4
 119 0026 DA76     		strb	r2, [r3, #27]
 120              	.L6:
 141:.\Generated_Source\PSoC5/UART_episr.c ****         }
 142:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP2].apiEpState = UART_EVENT_PENDING;
 121              		.loc 1 142 0
 122 0028 084B     		ldr	r3, .L7+4
 123 002a 0122     		movs	r2, #1
 124 002c 5A76     		strb	r2, [r3, #25]
 143:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 125              		.loc 1 143 0
 126 002e 084B     		ldr	r3, .L7+8
 127 0030 074A     		ldr	r2, .L7+8
 128 0032 1278     		ldrb	r2, [r2]
 129 0034 D2B2     		uxtb	r2, r2
 130 0036 22F00202 		bic	r2, r2, #2
 131 003a D2B2     		uxtb	r2, r2
 132 003c 1A70     		strb	r2, [r3]
 144:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 145:.\Generated_Source\PSoC5/UART_episr.c **** 
 146:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 147:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 148:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP2)
 149:.\Generated_Source\PSoC5/UART_episr.c ****             {
 150:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 151:.\Generated_Source\PSoC5/UART_episr.c ****             }
 152:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
 153:.\Generated_Source\PSoC5/UART_episr.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 6


 154:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP2_END_USER_CODE` Place your code here */
 155:.\Generated_Source\PSoC5/UART_episr.c **** 
 156:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 157:.\Generated_Source\PSoC5/UART_episr.c **** 
 158:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 159:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 160:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 161:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 162:.\Generated_Source\PSoC5/UART_episr.c ****     }
 133              		.loc 1 162 0
 134 003e BD46     		mov	sp, r7
 135              		@ sp needed
 136 0040 5DF8047B 		ldr	r7, [sp], #4
 137 0044 7047     		bx	lr
 138              	.L8:
 139 0046 00BF     		.align	2
 140              	.L7:
 141 0048 1E600040 		.word	1073766430
 142 004c 00000000 		.word	UART_EP
 143 0050 0B600040 		.word	1073766411
 144              		.cfi_endproc
 145              	.LFE1:
 146              		.size	UART_EP_2_ISR, .-UART_EP_2_ISR
 147              		.section	.text.UART_EP_3_ISR,"ax",%progbits
 148              		.align	2
 149              		.global	UART_EP_3_ISR
 150              		.thumb
 151              		.thumb_func
 152              		.type	UART_EP_3_ISR, %function
 153              	UART_EP_3_ISR:
 154              	.LFB2:
 163:.\Generated_Source\PSoC5/UART_episr.c **** 
 164:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP2_ISR_REMOVE */
 165:.\Generated_Source\PSoC5/UART_episr.c **** 
 166:.\Generated_Source\PSoC5/UART_episr.c **** 
 167:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP3_ISR_REMOVE == 0u)
 168:.\Generated_Source\PSoC5/UART_episr.c **** 
 169:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 170:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_3_ISR
 171:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 172:.\Generated_Source\PSoC5/UART_episr.c ****     *
 173:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 174:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 3 Interrupt Service Routine
 175:.\Generated_Source\PSoC5/UART_episr.c ****     *
 176:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 177:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 178:.\Generated_Source\PSoC5/UART_episr.c ****     *
 179:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 180:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 181:.\Generated_Source\PSoC5/UART_episr.c ****     *
 182:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 183:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_3_ISR)
 184:.\Generated_Source\PSoC5/UART_episr.c ****     {
 155              		.loc 1 184 0
 156              		.cfi_startproc
 157              		@ args = 0, pretend = 0, frame = 0
 158              		@ frame_needed = 1, uses_anonymous_args = 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 7


 159              		@ link register save eliminated.
 160 0000 80B4     		push	{r7}
 161              		.cfi_def_cfa_offset 4
 162              		.cfi_offset 7, -4
 163 0002 00AF     		add	r7, sp, #0
 164              		.cfi_def_cfa_register 7
 185:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 186:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 187:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 188:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3 */
 189:.\Generated_Source\PSoC5/UART_episr.c **** 
 190:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP3_USER_CODE` Place your code here */
 191:.\Generated_Source\PSoC5/UART_episr.c **** 
 192:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 193:.\Generated_Source\PSoC5/UART_episr.c **** 
 194:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 195:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 196:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 197:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 198:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 199:.\Generated_Source\PSoC5/UART_episr.c **** 
 200:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP3_CR0_PTR); /* Must read the mode reg */
 165              		.loc 1 200 0
 166 0004 124B     		ldr	r3, .L11
 167 0006 1B78     		ldrb	r3, [r3]
 201:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 202:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP3].attrib & UART_EP_TYPE_MASK) !=
 168              		.loc 1 202 0
 169 0008 124B     		ldr	r3, .L11+4
 170 000a 93F82430 		ldrb	r3, [r3, #36]
 171 000e DBB2     		uxtb	r3, r3
 172 0010 03F00303 		and	r3, r3, #3
 173 0014 012B     		cmp	r3, #1
 174 0016 0AD0     		beq	.L10
 203:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 204:.\Generated_Source\PSoC5/UART_episr.c ****         {
 205:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP3].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 175              		.loc 1 205 0
 176 0018 0E4B     		ldr	r3, .L11+4
 177 001a 93F82730 		ldrb	r3, [r3, #39]
 178 001e DBB2     		uxtb	r3, r3
 179 0020 83F07F03 		eor	r3, r3, #127
 180 0024 DB43     		mvns	r3, r3
 181 0026 DAB2     		uxtb	r2, r3
 182 0028 0A4B     		ldr	r3, .L11+4
 183 002a 83F82720 		strb	r2, [r3, #39]
 184              	.L10:
 206:.\Generated_Source\PSoC5/UART_episr.c ****         }
 207:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP3].apiEpState = UART_EVENT_PENDING;
 185              		.loc 1 207 0
 186 002e 094B     		ldr	r3, .L11+4
 187 0030 0122     		movs	r2, #1
 188 0032 83F82520 		strb	r2, [r3, #37]
 208:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 189              		.loc 1 208 0
 190 0036 084B     		ldr	r3, .L11+8
 191 0038 074A     		ldr	r2, .L11+8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 8


 192 003a 1278     		ldrb	r2, [r2]
 193 003c D2B2     		uxtb	r2, r2
 194 003e 22F00402 		bic	r2, r2, #4
 195 0042 D2B2     		uxtb	r2, r2
 196 0044 1A70     		strb	r2, [r3]
 209:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 210:.\Generated_Source\PSoC5/UART_episr.c **** 
 211:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 212:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 213:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP3)
 214:.\Generated_Source\PSoC5/UART_episr.c ****             {
 215:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 216:.\Generated_Source\PSoC5/UART_episr.c ****             }
 217:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
 218:.\Generated_Source\PSoC5/UART_episr.c **** 
 219:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP3_END_USER_CODE` Place your code here */
 220:.\Generated_Source\PSoC5/UART_episr.c **** 
 221:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 222:.\Generated_Source\PSoC5/UART_episr.c **** 
 223:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 224:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 225:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 226:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 227:.\Generated_Source\PSoC5/UART_episr.c ****     }
 197              		.loc 1 227 0
 198 0046 BD46     		mov	sp, r7
 199              		@ sp needed
 200 0048 5DF8047B 		ldr	r7, [sp], #4
 201 004c 7047     		bx	lr
 202              	.L12:
 203 004e 00BF     		.align	2
 204              	.L11:
 205 0050 2E600040 		.word	1073766446
 206 0054 00000000 		.word	UART_EP
 207 0058 0B600040 		.word	1073766411
 208              		.cfi_endproc
 209              	.LFE2:
 210              		.size	UART_EP_3_ISR, .-UART_EP_3_ISR
 211              		.section	.text.UART_SOF_ISR,"ax",%progbits
 212              		.align	2
 213              		.global	UART_SOF_ISR
 214              		.thumb
 215              		.thumb_func
 216              		.type	UART_SOF_ISR, %function
 217              	UART_SOF_ISR:
 218              	.LFB3:
 228:.\Generated_Source\PSoC5/UART_episr.c **** 
 229:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP3_ISR_REMOVE */
 230:.\Generated_Source\PSoC5/UART_episr.c **** 
 231:.\Generated_Source\PSoC5/UART_episr.c **** 
 232:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP4_ISR_REMOVE == 0u)
 233:.\Generated_Source\PSoC5/UART_episr.c **** 
 234:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 235:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_4_ISR
 236:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 237:.\Generated_Source\PSoC5/UART_episr.c ****     *
 238:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 9


 239:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 4 Interrupt Service Routine
 240:.\Generated_Source\PSoC5/UART_episr.c ****     *
 241:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 242:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 243:.\Generated_Source\PSoC5/UART_episr.c ****     *
 244:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 245:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 246:.\Generated_Source\PSoC5/UART_episr.c ****     *
 247:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 248:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_4_ISR)
 249:.\Generated_Source\PSoC5/UART_episr.c ****     {
 250:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 251:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 252:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 253:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 254:.\Generated_Source\PSoC5/UART_episr.c **** 
 255:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP4_USER_CODE` Place your code here */
 256:.\Generated_Source\PSoC5/UART_episr.c **** 
 257:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 258:.\Generated_Source\PSoC5/UART_episr.c **** 
 259:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 260:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 261:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 262:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 263:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 264:.\Generated_Source\PSoC5/UART_episr.c **** 
 265:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP4_CR0_PTR); /* Must read the mode reg */
 266:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 267:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP4].attrib & UART_EP_TYPE_MASK) !=
 268:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 269:.\Generated_Source\PSoC5/UART_episr.c ****         {
 270:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP4].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 271:.\Generated_Source\PSoC5/UART_episr.c ****         }
 272:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP4].apiEpState = UART_EVENT_PENDING;
 273:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 274:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 275:.\Generated_Source\PSoC5/UART_episr.c **** 
 276:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 277:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 278:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP4)
 279:.\Generated_Source\PSoC5/UART_episr.c ****             {
 280:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 281:.\Generated_Source\PSoC5/UART_episr.c ****             }
 282:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
 283:.\Generated_Source\PSoC5/UART_episr.c **** 
 284:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP4_END_USER_CODE` Place your code here */
 285:.\Generated_Source\PSoC5/UART_episr.c **** 
 286:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 287:.\Generated_Source\PSoC5/UART_episr.c **** 
 288:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 289:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 290:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 291:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 292:.\Generated_Source\PSoC5/UART_episr.c ****     }
 293:.\Generated_Source\PSoC5/UART_episr.c **** 
 294:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP4_ISR_REMOVE */
 295:.\Generated_Source\PSoC5/UART_episr.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 10


 296:.\Generated_Source\PSoC5/UART_episr.c **** 
 297:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP5_ISR_REMOVE == 0u)
 298:.\Generated_Source\PSoC5/UART_episr.c **** 
 299:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 300:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_5_ISR
 301:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 302:.\Generated_Source\PSoC5/UART_episr.c ****     *
 303:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 304:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 5 Interrupt Service Routine
 305:.\Generated_Source\PSoC5/UART_episr.c ****     *
 306:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 307:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 308:.\Generated_Source\PSoC5/UART_episr.c ****     *
 309:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 310:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 311:.\Generated_Source\PSoC5/UART_episr.c ****     *
 312:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 313:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_5_ISR)
 314:.\Generated_Source\PSoC5/UART_episr.c ****     {
 315:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 316:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 317:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 318:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 319:.\Generated_Source\PSoC5/UART_episr.c **** 
 320:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP5_USER_CODE` Place your code here */
 321:.\Generated_Source\PSoC5/UART_episr.c **** 
 322:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 323:.\Generated_Source\PSoC5/UART_episr.c **** 
 324:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 325:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 326:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 327:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 328:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 329:.\Generated_Source\PSoC5/UART_episr.c **** 
 330:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP5_CR0_PTR); /* Must read the mode reg */
 331:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 332:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP5].attrib & UART_EP_TYPE_MASK) !=
 333:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 334:.\Generated_Source\PSoC5/UART_episr.c ****         {
 335:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP5].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 336:.\Generated_Source\PSoC5/UART_episr.c ****         }
 337:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP5].apiEpState = UART_EVENT_PENDING;
 338:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 339:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 340:.\Generated_Source\PSoC5/UART_episr.c **** 
 341:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 342:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 343:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP5)
 344:.\Generated_Source\PSoC5/UART_episr.c ****             {
 345:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 346:.\Generated_Source\PSoC5/UART_episr.c ****             }
 347:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
 348:.\Generated_Source\PSoC5/UART_episr.c **** 
 349:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP5_END_USER_CODE` Place your code here */
 350:.\Generated_Source\PSoC5/UART_episr.c **** 
 351:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 352:.\Generated_Source\PSoC5/UART_episr.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 11


 353:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 354:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 355:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 356:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 357:.\Generated_Source\PSoC5/UART_episr.c ****     }
 358:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP5_ISR_REMOVE */
 359:.\Generated_Source\PSoC5/UART_episr.c **** 
 360:.\Generated_Source\PSoC5/UART_episr.c **** 
 361:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP6_ISR_REMOVE == 0u)
 362:.\Generated_Source\PSoC5/UART_episr.c **** 
 363:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 364:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_6_ISR
 365:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 366:.\Generated_Source\PSoC5/UART_episr.c ****     *
 367:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 368:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 6 Interrupt Service Routine
 369:.\Generated_Source\PSoC5/UART_episr.c ****     *
 370:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 371:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 372:.\Generated_Source\PSoC5/UART_episr.c ****     *
 373:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 374:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 375:.\Generated_Source\PSoC5/UART_episr.c ****     *
 376:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 377:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_6_ISR)
 378:.\Generated_Source\PSoC5/UART_episr.c ****     {
 379:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 380:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 381:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 382:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 383:.\Generated_Source\PSoC5/UART_episr.c **** 
 384:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP6_USER_CODE` Place your code here */
 385:.\Generated_Source\PSoC5/UART_episr.c **** 
 386:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 387:.\Generated_Source\PSoC5/UART_episr.c **** 
 388:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 389:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 390:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 391:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 392:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 393:.\Generated_Source\PSoC5/UART_episr.c **** 
 394:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP6_CR0_PTR); /* Must read the mode reg */
 395:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 396:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP6].attrib & UART_EP_TYPE_MASK) !=
 397:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 398:.\Generated_Source\PSoC5/UART_episr.c ****         {
 399:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP6].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 400:.\Generated_Source\PSoC5/UART_episr.c ****         }
 401:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP6].apiEpState = UART_EVENT_PENDING;
 402:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 403:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 404:.\Generated_Source\PSoC5/UART_episr.c **** 
 405:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 406:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 407:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP6)
 408:.\Generated_Source\PSoC5/UART_episr.c ****             {
 409:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 12


 410:.\Generated_Source\PSoC5/UART_episr.c ****             }
 411:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT  */
 412:.\Generated_Source\PSoC5/UART_episr.c **** 
 413:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP6_END_USER_CODE` Place your code here */
 414:.\Generated_Source\PSoC5/UART_episr.c **** 
 415:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 416:.\Generated_Source\PSoC5/UART_episr.c **** 
 417:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 418:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 419:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 420:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 421:.\Generated_Source\PSoC5/UART_episr.c ****     }
 422:.\Generated_Source\PSoC5/UART_episr.c **** 
 423:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP6_ISR_REMOVE */
 424:.\Generated_Source\PSoC5/UART_episr.c **** 
 425:.\Generated_Source\PSoC5/UART_episr.c **** 
 426:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP7_ISR_REMOVE == 0u)
 427:.\Generated_Source\PSoC5/UART_episr.c **** 
 428:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 429:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_7_ISR
 430:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 431:.\Generated_Source\PSoC5/UART_episr.c ****     *
 432:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 433:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 7 Interrupt Service Routine
 434:.\Generated_Source\PSoC5/UART_episr.c ****     *
 435:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 436:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 437:.\Generated_Source\PSoC5/UART_episr.c ****     *
 438:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 439:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 440:.\Generated_Source\PSoC5/UART_episr.c ****     *
 441:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 442:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_7_ISR)
 443:.\Generated_Source\PSoC5/UART_episr.c ****     {
 444:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 445:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 446:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 447:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 448:.\Generated_Source\PSoC5/UART_episr.c **** 
 449:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP7_USER_CODE` Place your code here */
 450:.\Generated_Source\PSoC5/UART_episr.c **** 
 451:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 452:.\Generated_Source\PSoC5/UART_episr.c **** 
 453:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 454:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 455:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 456:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 457:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 458:.\Generated_Source\PSoC5/UART_episr.c **** 
 459:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP7_CR0_PTR); /* Must read the mode reg */
 460:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 461:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP7].attrib & UART_EP_TYPE_MASK) !=
 462:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 463:.\Generated_Source\PSoC5/UART_episr.c ****         {
 464:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP7].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 465:.\Generated_Source\PSoC5/UART_episr.c ****         }
 466:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP7].apiEpState = UART_EVENT_PENDING;
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 13


 467:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 468:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 469:.\Generated_Source\PSoC5/UART_episr.c **** 
 470:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 471:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 472:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP7)
 473:.\Generated_Source\PSoC5/UART_episr.c ****             {
 474:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 475:.\Generated_Source\PSoC5/UART_episr.c ****             }
 476:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT  */
 477:.\Generated_Source\PSoC5/UART_episr.c **** 
 478:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP7_END_USER_CODE` Place your code here */
 479:.\Generated_Source\PSoC5/UART_episr.c **** 
 480:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 481:.\Generated_Source\PSoC5/UART_episr.c **** 
 482:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 483:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 484:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 485:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 486:.\Generated_Source\PSoC5/UART_episr.c ****     }
 487:.\Generated_Source\PSoC5/UART_episr.c **** 
 488:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP7_ISR_REMOVE */
 489:.\Generated_Source\PSoC5/UART_episr.c **** 
 490:.\Generated_Source\PSoC5/UART_episr.c **** 
 491:.\Generated_Source\PSoC5/UART_episr.c **** #if(UART_EP8_ISR_REMOVE == 0u)
 492:.\Generated_Source\PSoC5/UART_episr.c **** 
 493:.\Generated_Source\PSoC5/UART_episr.c ****     /*******************************************************************************
 494:.\Generated_Source\PSoC5/UART_episr.c ****     * Function Name: UART_EP_8_ISR
 495:.\Generated_Source\PSoC5/UART_episr.c ****     ********************************************************************************
 496:.\Generated_Source\PSoC5/UART_episr.c ****     *
 497:.\Generated_Source\PSoC5/UART_episr.c ****     * Summary:
 498:.\Generated_Source\PSoC5/UART_episr.c ****     *  Endpoint 8 Interrupt Service Routine
 499:.\Generated_Source\PSoC5/UART_episr.c ****     *
 500:.\Generated_Source\PSoC5/UART_episr.c ****     * Parameters:
 501:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 502:.\Generated_Source\PSoC5/UART_episr.c ****     *
 503:.\Generated_Source\PSoC5/UART_episr.c ****     * Return:
 504:.\Generated_Source\PSoC5/UART_episr.c ****     *  None.
 505:.\Generated_Source\PSoC5/UART_episr.c ****     *
 506:.\Generated_Source\PSoC5/UART_episr.c ****     *******************************************************************************/
 507:.\Generated_Source\PSoC5/UART_episr.c ****     CY_ISR(UART_EP_8_ISR)
 508:.\Generated_Source\PSoC5/UART_episr.c ****     {
 509:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 510:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 511:.\Generated_Source\PSoC5/UART_episr.c ****             uint8 int_en;
 512:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 513:.\Generated_Source\PSoC5/UART_episr.c **** 
 514:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP8_USER_CODE` Place your code here */
 515:.\Generated_Source\PSoC5/UART_episr.c **** 
 516:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 517:.\Generated_Source\PSoC5/UART_episr.c **** 
 518:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 519:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 520:.\Generated_Source\PSoC5/UART_episr.c ****             int_en = EA;
 521:.\Generated_Source\PSoC5/UART_episr.c ****             CyGlobalIntEnable;  /* Make sure nested interrupt is enabled */
 522:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 523:.\Generated_Source\PSoC5/UART_episr.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 14


 524:.\Generated_Source\PSoC5/UART_episr.c ****         CY_GET_REG8(UART_SIE_EP8_CR0_PTR); /* Must read the mode reg */
 525:.\Generated_Source\PSoC5/UART_episr.c ****         /* Do not toggle ISOC endpoint */
 526:.\Generated_Source\PSoC5/UART_episr.c ****         if((UART_EP[UART_EP8].attrib & UART_EP_TYPE_MASK) !=
 527:.\Generated_Source\PSoC5/UART_episr.c ****                                                                                     UART_EP_TYPE_IS
 528:.\Generated_Source\PSoC5/UART_episr.c ****         {
 529:.\Generated_Source\PSoC5/UART_episr.c ****             UART_EP[UART_EP8].epToggle ^= UART_EPX_CNT_DATA_TOGGLE;
 530:.\Generated_Source\PSoC5/UART_episr.c ****         }
 531:.\Generated_Source\PSoC5/UART_episr.c ****         UART_EP[UART_EP8].apiEpState = UART_EVENT_PENDING;
 532:.\Generated_Source\PSoC5/UART_episr.c ****         CY_SET_REG8(UART_SIE_EP_INT_SR_PTR, CY_GET_REG8(UART_SIE_EP_INT_SR_PTR)
 533:.\Generated_Source\PSoC5/UART_episr.c ****                                                                         & (uint8)~UART_SIE_EP_INT_E
 534:.\Generated_Source\PSoC5/UART_episr.c **** 
 535:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 536:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT)
 537:.\Generated_Source\PSoC5/UART_episr.c ****             if(UART_midi_out_ep == UART_EP8)
 538:.\Generated_Source\PSoC5/UART_episr.c ****             {
 539:.\Generated_Source\PSoC5/UART_episr.c ****                 UART_MIDI_OUT_EP_Service();
 540:.\Generated_Source\PSoC5/UART_episr.c ****             }
 541:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /*  UART_ISR_SERVICE_MIDI_OUT */
 542:.\Generated_Source\PSoC5/UART_episr.c **** 
 543:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#START EP8_END_USER_CODE` Place your code here */
 544:.\Generated_Source\PSoC5/UART_episr.c **** 
 545:.\Generated_Source\PSoC5/UART_episr.c ****         /* `#END` */
 546:.\Generated_Source\PSoC5/UART_episr.c **** 
 547:.\Generated_Source\PSoC5/UART_episr.c ****         #if (defined(UART_ENABLE_MIDI_STREAMING) && !defined(UART_MAIN_SERVICE_MIDI_OUT) && \
 548:.\Generated_Source\PSoC5/UART_episr.c ****                      UART_ISR_SERVICE_MIDI_OUT && CY_PSOC3)
 549:.\Generated_Source\PSoC5/UART_episr.c ****             EA = int_en;
 550:.\Generated_Source\PSoC5/UART_episr.c ****         #endif /* CY_PSOC3 & UART_ISR_SERVICE_MIDI_OUT  */
 551:.\Generated_Source\PSoC5/UART_episr.c ****     }
 552:.\Generated_Source\PSoC5/UART_episr.c **** 
 553:.\Generated_Source\PSoC5/UART_episr.c **** #endif   /*  UART_EP8_ISR_REMOVE */
 554:.\Generated_Source\PSoC5/UART_episr.c **** 
 555:.\Generated_Source\PSoC5/UART_episr.c **** 
 556:.\Generated_Source\PSoC5/UART_episr.c **** /*******************************************************************************
 557:.\Generated_Source\PSoC5/UART_episr.c **** * Function Name: UART_SOF_ISR
 558:.\Generated_Source\PSoC5/UART_episr.c **** ********************************************************************************
 559:.\Generated_Source\PSoC5/UART_episr.c **** *
 560:.\Generated_Source\PSoC5/UART_episr.c **** * Summary:
 561:.\Generated_Source\PSoC5/UART_episr.c **** *  Start of Frame Interrupt Service Routine
 562:.\Generated_Source\PSoC5/UART_episr.c **** *
 563:.\Generated_Source\PSoC5/UART_episr.c **** * Parameters:
 564:.\Generated_Source\PSoC5/UART_episr.c **** *  None.
 565:.\Generated_Source\PSoC5/UART_episr.c **** *
 566:.\Generated_Source\PSoC5/UART_episr.c **** * Return:
 567:.\Generated_Source\PSoC5/UART_episr.c **** *  None.
 568:.\Generated_Source\PSoC5/UART_episr.c **** *
 569:.\Generated_Source\PSoC5/UART_episr.c **** *******************************************************************************/
 570:.\Generated_Source\PSoC5/UART_episr.c **** CY_ISR(UART_SOF_ISR)
 571:.\Generated_Source\PSoC5/UART_episr.c **** {
 219              		.loc 1 571 0
 220              		.cfi_startproc
 221              		@ args = 0, pretend = 0, frame = 0
 222              		@ frame_needed = 1, uses_anonymous_args = 0
 223              		@ link register save eliminated.
 224 0000 80B4     		push	{r7}
 225              		.cfi_def_cfa_offset 4
 226              		.cfi_offset 7, -4
 227 0002 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 15


 228              		.cfi_def_cfa_register 7
 572:.\Generated_Source\PSoC5/UART_episr.c ****     /* `#START SOF_USER_CODE` Place your code here */
 573:.\Generated_Source\PSoC5/UART_episr.c ****     /* `#END` */
 574:.\Generated_Source\PSoC5/UART_episr.c **** }
 229              		.loc 1 574 0
 230 0004 BD46     		mov	sp, r7
 231              		@ sp needed
 232 0006 5DF8047B 		ldr	r7, [sp], #4
 233 000a 7047     		bx	lr
 234              		.cfi_endproc
 235              	.LFE3:
 236              		.size	UART_SOF_ISR, .-UART_SOF_ISR
 237              		.section	.text.UART_BUS_RESET_ISR,"ax",%progbits
 238              		.align	2
 239              		.global	UART_BUS_RESET_ISR
 240              		.thumb
 241              		.thumb_func
 242              		.type	UART_BUS_RESET_ISR, %function
 243              	UART_BUS_RESET_ISR:
 244              	.LFB4:
 575:.\Generated_Source\PSoC5/UART_episr.c **** 
 576:.\Generated_Source\PSoC5/UART_episr.c **** 
 577:.\Generated_Source\PSoC5/UART_episr.c **** /*******************************************************************************
 578:.\Generated_Source\PSoC5/UART_episr.c **** * Function Name: UART_BUS_RESET_ISR
 579:.\Generated_Source\PSoC5/UART_episr.c **** ********************************************************************************
 580:.\Generated_Source\PSoC5/UART_episr.c **** *
 581:.\Generated_Source\PSoC5/UART_episr.c **** * Summary:
 582:.\Generated_Source\PSoC5/UART_episr.c **** *  USB Bus Reset Interrupt Service Routine.  Calls _Start with the same
 583:.\Generated_Source\PSoC5/UART_episr.c **** *  parameters as the last USER call to _Start
 584:.\Generated_Source\PSoC5/UART_episr.c **** *
 585:.\Generated_Source\PSoC5/UART_episr.c **** * Parameters:
 586:.\Generated_Source\PSoC5/UART_episr.c **** *  None.
 587:.\Generated_Source\PSoC5/UART_episr.c **** *
 588:.\Generated_Source\PSoC5/UART_episr.c **** * Return:
 589:.\Generated_Source\PSoC5/UART_episr.c **** *  None.
 590:.\Generated_Source\PSoC5/UART_episr.c **** *
 591:.\Generated_Source\PSoC5/UART_episr.c **** *******************************************************************************/
 592:.\Generated_Source\PSoC5/UART_episr.c **** CY_ISR(UART_BUS_RESET_ISR)
 593:.\Generated_Source\PSoC5/UART_episr.c **** {
 245              		.loc 1 593 0
 246              		.cfi_startproc
 247              		@ args = 0, pretend = 0, frame = 0
 248              		@ frame_needed = 1, uses_anonymous_args = 0
 249 0000 80B5     		push	{r7, lr}
 250              		.cfi_def_cfa_offset 8
 251              		.cfi_offset 7, -8
 252              		.cfi_offset 14, -4
 253 0002 00AF     		add	r7, sp, #0
 254              		.cfi_def_cfa_register 7
 594:.\Generated_Source\PSoC5/UART_episr.c ****     /* `#START BUS_RESET_USER_CODE` Place your code here */
 595:.\Generated_Source\PSoC5/UART_episr.c **** 
 596:.\Generated_Source\PSoC5/UART_episr.c ****     /* `#END` */
 597:.\Generated_Source\PSoC5/UART_episr.c **** 
 598:.\Generated_Source\PSoC5/UART_episr.c ****     UART_ReInitComponent();
 255              		.loc 1 598 0
 256 0004 FFF7FEFF 		bl	UART_ReInitComponent
 599:.\Generated_Source\PSoC5/UART_episr.c **** }
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 16


 257              		.loc 1 599 0
 258 0008 80BD     		pop	{r7, pc}
 259              		.cfi_endproc
 260              	.LFE4:
 261              		.size	UART_BUS_RESET_ISR, .-UART_BUS_RESET_ISR
 262 000a 00BF     		.text
 263              	.Letext0:
 264              		.file 2 ".\\Generated_Source\\PSoC5\\cytypes.h"
 265              		.file 3 ".\\Generated_Source\\PSoC5\\UART.h"
 266              		.file 4 ".\\Generated_Source\\PSoC5\\UART_pvt.h"
 267              		.section	.debug_info,"",%progbits
 268              	.Ldebug_info0:
 269 0000 A2010000 		.4byte	0x1a2
 270 0004 0400     		.2byte	0x4
 271 0006 00000000 		.4byte	.Ldebug_abbrev0
 272 000a 04       		.byte	0x4
 273 000b 01       		.uleb128 0x1
 274 000c EA000000 		.4byte	.LASF31
 275 0010 01       		.byte	0x1
 276 0011 0A020000 		.4byte	.LASF32
 277 0015 C5010000 		.4byte	.LASF33
 278 0019 00000000 		.4byte	.Ldebug_ranges0+0
 279 001d 00000000 		.4byte	0
 280 0021 00000000 		.4byte	.Ldebug_line0
 281 0025 02       		.uleb128 0x2
 282 0026 01       		.byte	0x1
 283 0027 06       		.byte	0x6
 284 0028 FE010000 		.4byte	.LASF0
 285 002c 02       		.uleb128 0x2
 286 002d 01       		.byte	0x1
 287 002e 08       		.byte	0x8
 288 002f 5A000000 		.4byte	.LASF1
 289 0033 02       		.uleb128 0x2
 290 0034 02       		.byte	0x2
 291 0035 05       		.byte	0x5
 292 0036 A2010000 		.4byte	.LASF2
 293 003a 02       		.uleb128 0x2
 294 003b 02       		.byte	0x2
 295 003c 07       		.byte	0x7
 296 003d 16000000 		.4byte	.LASF3
 297 0041 02       		.uleb128 0x2
 298 0042 04       		.byte	0x4
 299 0043 05       		.byte	0x5
 300 0044 BC010000 		.4byte	.LASF4
 301 0048 02       		.uleb128 0x2
 302 0049 04       		.byte	0x4
 303 004a 07       		.byte	0x7
 304 004b 6D000000 		.4byte	.LASF5
 305 004f 02       		.uleb128 0x2
 306 0050 08       		.byte	0x8
 307 0051 05       		.byte	0x5
 308 0052 76010000 		.4byte	.LASF6
 309 0056 02       		.uleb128 0x2
 310 0057 08       		.byte	0x8
 311 0058 07       		.byte	0x7
 312 0059 C9000000 		.4byte	.LASF7
 313 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 17


 314 005e 04       		.byte	0x4
 315 005f 05       		.byte	0x5
 316 0060 696E7400 		.ascii	"int\000"
 317 0064 02       		.uleb128 0x2
 318 0065 04       		.byte	0x4
 319 0066 07       		.byte	0x7
 320 0067 BC000000 		.4byte	.LASF8
 321 006b 04       		.uleb128 0x4
 322 006c AC010000 		.4byte	.LASF9
 323 0070 02       		.byte	0x2
 324 0071 A1       		.byte	0xa1
 325 0072 2C000000 		.4byte	0x2c
 326 0076 04       		.uleb128 0x4
 327 0077 AA000000 		.4byte	.LASF10
 328 007b 02       		.byte	0x2
 329 007c A2       		.byte	0xa2
 330 007d 3A000000 		.4byte	0x3a
 331 0081 02       		.uleb128 0x2
 332 0082 04       		.byte	0x4
 333 0083 04       		.byte	0x4
 334 0084 4B000000 		.4byte	.LASF11
 335 0088 02       		.uleb128 0x2
 336 0089 08       		.byte	0x8
 337 008a 04       		.byte	0x4
 338 008b 91000000 		.4byte	.LASF12
 339 008f 02       		.uleb128 0x2
 340 0090 01       		.byte	0x1
 341 0091 08       		.byte	0x8
 342 0092 84010000 		.4byte	.LASF13
 343 0096 05       		.uleb128 0x5
 344 0097 68000000 		.4byte	.LASF14
 345 009b 02       		.byte	0x2
 346 009c 4B01     		.2byte	0x14b
 347 009e A2000000 		.4byte	0xa2
 348 00a2 06       		.uleb128 0x6
 349 00a3 6B000000 		.4byte	0x6b
 350 00a7 02       		.uleb128 0x2
 351 00a8 04       		.byte	0x4
 352 00a9 07       		.byte	0x7
 353 00aa 66010000 		.4byte	.LASF15
 354 00ae 07       		.uleb128 0x7
 355 00af 0C       		.byte	0xc
 356 00b0 03       		.byte	0x3
 357 00b1 7A       		.byte	0x7a
 358 00b2 23010000 		.4byte	0x123
 359 00b6 08       		.uleb128 0x8
 360 00b7 98000000 		.4byte	.LASF16
 361 00bb 03       		.byte	0x3
 362 00bc 7C       		.byte	0x7c
 363 00bd 6B000000 		.4byte	0x6b
 364 00c1 00       		.byte	0
 365 00c2 08       		.uleb128 0x8
 366 00c3 B1000000 		.4byte	.LASF17
 367 00c7 03       		.byte	0x3
 368 00c8 7D       		.byte	0x7d
 369 00c9 6B000000 		.4byte	0x6b
 370 00cd 01       		.byte	0x1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 18


 371 00ce 08       		.uleb128 0x8
 372 00cf E0000000 		.4byte	.LASF18
 373 00d3 03       		.byte	0x3
 374 00d4 7E       		.byte	0x7e
 375 00d5 6B000000 		.4byte	0x6b
 376 00d9 02       		.byte	0x2
 377 00da 08       		.uleb128 0x8
 378 00db 51000000 		.4byte	.LASF19
 379 00df 03       		.byte	0x3
 380 00e0 7F       		.byte	0x7f
 381 00e1 6B000000 		.4byte	0x6b
 382 00e5 03       		.byte	0x3
 383 00e6 08       		.uleb128 0x8
 384 00e7 7F000000 		.4byte	.LASF20
 385 00eb 03       		.byte	0x3
 386 00ec 80       		.byte	0x80
 387 00ed 6B000000 		.4byte	0x6b
 388 00f1 04       		.byte	0x4
 389 00f2 08       		.uleb128 0x8
 390 00f3 6F010000 		.4byte	.LASF21
 391 00f7 03       		.byte	0x3
 392 00f8 81       		.byte	0x81
 393 00f9 6B000000 		.4byte	0x6b
 394 00fd 05       		.byte	0x5
 395 00fe 08       		.uleb128 0x8
 396 00ff 9F000000 		.4byte	.LASF22
 397 0103 03       		.byte	0x3
 398 0104 82       		.byte	0x82
 399 0105 76000000 		.4byte	0x76
 400 0109 06       		.byte	0x6
 401 010a 08       		.uleb128 0x8
 402 010b 97010000 		.4byte	.LASF23
 403 010f 03       		.byte	0x3
 404 0110 83       		.byte	0x83
 405 0111 76000000 		.4byte	0x76
 406 0115 08       		.byte	0x8
 407 0116 08       		.uleb128 0x8
 408 0117 B2010000 		.4byte	.LASF24
 409 011b 03       		.byte	0x3
 410 011c 84       		.byte	0x84
 411 011d 6B000000 		.4byte	0x6b
 412 0121 0A       		.byte	0xa
 413 0122 00       		.byte	0
 414 0123 04       		.uleb128 0x4
 415 0124 29000000 		.4byte	.LASF25
 416 0128 03       		.byte	0x3
 417 0129 85       		.byte	0x85
 418 012a AE000000 		.4byte	0xae
 419 012e 09       		.uleb128 0x9
 420 012f 89010000 		.4byte	.LASF26
 421 0133 01       		.byte	0x1
 422 0134 35       		.byte	0x35
 423 0135 00000000 		.4byte	.LFB0
 424 0139 54000000 		.4byte	.LFE0-.LFB0
 425 013d 01       		.uleb128 0x1
 426 013e 9C       		.byte	0x9c
 427 013f 09       		.uleb128 0x9
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 19


 428 0140 00000000 		.4byte	.LASF27
 429 0144 01       		.byte	0x1
 430 0145 76       		.byte	0x76
 431 0146 00000000 		.4byte	.LFB1
 432 014a 54000000 		.4byte	.LFE1-.LFB1
 433 014e 01       		.uleb128 0x1
 434 014f 9C       		.byte	0x9c
 435 0150 09       		.uleb128 0x9
 436 0151 3D000000 		.4byte	.LASF28
 437 0155 01       		.byte	0x1
 438 0156 B7       		.byte	0xb7
 439 0157 00000000 		.4byte	.LFB2
 440 015b 5C000000 		.4byte	.LFE2-.LFB2
 441 015f 01       		.uleb128 0x1
 442 0160 9C       		.byte	0x9c
 443 0161 0A       		.uleb128 0xa
 444 0162 84000000 		.4byte	.LASF29
 445 0166 01       		.byte	0x1
 446 0167 3A02     		.2byte	0x23a
 447 0169 00000000 		.4byte	.LFB3
 448 016d 0C000000 		.4byte	.LFE3-.LFB3
 449 0171 01       		.uleb128 0x1
 450 0172 9C       		.byte	0x9c
 451 0173 0B       		.uleb128 0xb
 452 0174 30020000 		.4byte	.LASF30
 453 0178 01       		.byte	0x1
 454 0179 5002     		.2byte	0x250
 455 017b 00000000 		.4byte	.LFB4
 456 017f 0A000000 		.4byte	.LFE4-.LFB4
 457 0183 01       		.uleb128 0x1
 458 0184 9C       		.byte	0x9c
 459 0185 0C       		.uleb128 0xc
 460 0186 23010000 		.4byte	0x123
 461 018a 95010000 		.4byte	0x195
 462 018e 0D       		.uleb128 0xd
 463 018f A7000000 		.4byte	0xa7
 464 0193 08       		.byte	0x8
 465 0194 00       		.byte	0
 466 0195 0E       		.uleb128 0xe
 467 0196 0E000000 		.4byte	.LASF34
 468 019a 04       		.byte	0x4
 469 019b 34       		.byte	0x34
 470 019c A0010000 		.4byte	0x1a0
 471 01a0 06       		.uleb128 0x6
 472 01a1 85010000 		.4byte	0x185
 473 01a5 00       		.byte	0
 474              		.section	.debug_abbrev,"",%progbits
 475              	.Ldebug_abbrev0:
 476 0000 01       		.uleb128 0x1
 477 0001 11       		.uleb128 0x11
 478 0002 01       		.byte	0x1
 479 0003 25       		.uleb128 0x25
 480 0004 0E       		.uleb128 0xe
 481 0005 13       		.uleb128 0x13
 482 0006 0B       		.uleb128 0xb
 483 0007 03       		.uleb128 0x3
 484 0008 0E       		.uleb128 0xe
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 20


 485 0009 1B       		.uleb128 0x1b
 486 000a 0E       		.uleb128 0xe
 487 000b 55       		.uleb128 0x55
 488 000c 17       		.uleb128 0x17
 489 000d 11       		.uleb128 0x11
 490 000e 01       		.uleb128 0x1
 491 000f 10       		.uleb128 0x10
 492 0010 17       		.uleb128 0x17
 493 0011 00       		.byte	0
 494 0012 00       		.byte	0
 495 0013 02       		.uleb128 0x2
 496 0014 24       		.uleb128 0x24
 497 0015 00       		.byte	0
 498 0016 0B       		.uleb128 0xb
 499 0017 0B       		.uleb128 0xb
 500 0018 3E       		.uleb128 0x3e
 501 0019 0B       		.uleb128 0xb
 502 001a 03       		.uleb128 0x3
 503 001b 0E       		.uleb128 0xe
 504 001c 00       		.byte	0
 505 001d 00       		.byte	0
 506 001e 03       		.uleb128 0x3
 507 001f 24       		.uleb128 0x24
 508 0020 00       		.byte	0
 509 0021 0B       		.uleb128 0xb
 510 0022 0B       		.uleb128 0xb
 511 0023 3E       		.uleb128 0x3e
 512 0024 0B       		.uleb128 0xb
 513 0025 03       		.uleb128 0x3
 514 0026 08       		.uleb128 0x8
 515 0027 00       		.byte	0
 516 0028 00       		.byte	0
 517 0029 04       		.uleb128 0x4
 518 002a 16       		.uleb128 0x16
 519 002b 00       		.byte	0
 520 002c 03       		.uleb128 0x3
 521 002d 0E       		.uleb128 0xe
 522 002e 3A       		.uleb128 0x3a
 523 002f 0B       		.uleb128 0xb
 524 0030 3B       		.uleb128 0x3b
 525 0031 0B       		.uleb128 0xb
 526 0032 49       		.uleb128 0x49
 527 0033 13       		.uleb128 0x13
 528 0034 00       		.byte	0
 529 0035 00       		.byte	0
 530 0036 05       		.uleb128 0x5
 531 0037 16       		.uleb128 0x16
 532 0038 00       		.byte	0
 533 0039 03       		.uleb128 0x3
 534 003a 0E       		.uleb128 0xe
 535 003b 3A       		.uleb128 0x3a
 536 003c 0B       		.uleb128 0xb
 537 003d 3B       		.uleb128 0x3b
 538 003e 05       		.uleb128 0x5
 539 003f 49       		.uleb128 0x49
 540 0040 13       		.uleb128 0x13
 541 0041 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 21


 542 0042 00       		.byte	0
 543 0043 06       		.uleb128 0x6
 544 0044 35       		.uleb128 0x35
 545 0045 00       		.byte	0
 546 0046 49       		.uleb128 0x49
 547 0047 13       		.uleb128 0x13
 548 0048 00       		.byte	0
 549 0049 00       		.byte	0
 550 004a 07       		.uleb128 0x7
 551 004b 13       		.uleb128 0x13
 552 004c 01       		.byte	0x1
 553 004d 0B       		.uleb128 0xb
 554 004e 0B       		.uleb128 0xb
 555 004f 3A       		.uleb128 0x3a
 556 0050 0B       		.uleb128 0xb
 557 0051 3B       		.uleb128 0x3b
 558 0052 0B       		.uleb128 0xb
 559 0053 01       		.uleb128 0x1
 560 0054 13       		.uleb128 0x13
 561 0055 00       		.byte	0
 562 0056 00       		.byte	0
 563 0057 08       		.uleb128 0x8
 564 0058 0D       		.uleb128 0xd
 565 0059 00       		.byte	0
 566 005a 03       		.uleb128 0x3
 567 005b 0E       		.uleb128 0xe
 568 005c 3A       		.uleb128 0x3a
 569 005d 0B       		.uleb128 0xb
 570 005e 3B       		.uleb128 0x3b
 571 005f 0B       		.uleb128 0xb
 572 0060 49       		.uleb128 0x49
 573 0061 13       		.uleb128 0x13
 574 0062 38       		.uleb128 0x38
 575 0063 0B       		.uleb128 0xb
 576 0064 00       		.byte	0
 577 0065 00       		.byte	0
 578 0066 09       		.uleb128 0x9
 579 0067 2E       		.uleb128 0x2e
 580 0068 00       		.byte	0
 581 0069 3F       		.uleb128 0x3f
 582 006a 19       		.uleb128 0x19
 583 006b 03       		.uleb128 0x3
 584 006c 0E       		.uleb128 0xe
 585 006d 3A       		.uleb128 0x3a
 586 006e 0B       		.uleb128 0xb
 587 006f 3B       		.uleb128 0x3b
 588 0070 0B       		.uleb128 0xb
 589 0071 27       		.uleb128 0x27
 590 0072 19       		.uleb128 0x19
 591 0073 11       		.uleb128 0x11
 592 0074 01       		.uleb128 0x1
 593 0075 12       		.uleb128 0x12
 594 0076 06       		.uleb128 0x6
 595 0077 40       		.uleb128 0x40
 596 0078 18       		.uleb128 0x18
 597 0079 9742     		.uleb128 0x2117
 598 007b 19       		.uleb128 0x19
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 22


 599 007c 00       		.byte	0
 600 007d 00       		.byte	0
 601 007e 0A       		.uleb128 0xa
 602 007f 2E       		.uleb128 0x2e
 603 0080 00       		.byte	0
 604 0081 3F       		.uleb128 0x3f
 605 0082 19       		.uleb128 0x19
 606 0083 03       		.uleb128 0x3
 607 0084 0E       		.uleb128 0xe
 608 0085 3A       		.uleb128 0x3a
 609 0086 0B       		.uleb128 0xb
 610 0087 3B       		.uleb128 0x3b
 611 0088 05       		.uleb128 0x5
 612 0089 27       		.uleb128 0x27
 613 008a 19       		.uleb128 0x19
 614 008b 11       		.uleb128 0x11
 615 008c 01       		.uleb128 0x1
 616 008d 12       		.uleb128 0x12
 617 008e 06       		.uleb128 0x6
 618 008f 40       		.uleb128 0x40
 619 0090 18       		.uleb128 0x18
 620 0091 9742     		.uleb128 0x2117
 621 0093 19       		.uleb128 0x19
 622 0094 00       		.byte	0
 623 0095 00       		.byte	0
 624 0096 0B       		.uleb128 0xb
 625 0097 2E       		.uleb128 0x2e
 626 0098 00       		.byte	0
 627 0099 3F       		.uleb128 0x3f
 628 009a 19       		.uleb128 0x19
 629 009b 03       		.uleb128 0x3
 630 009c 0E       		.uleb128 0xe
 631 009d 3A       		.uleb128 0x3a
 632 009e 0B       		.uleb128 0xb
 633 009f 3B       		.uleb128 0x3b
 634 00a0 05       		.uleb128 0x5
 635 00a1 27       		.uleb128 0x27
 636 00a2 19       		.uleb128 0x19
 637 00a3 11       		.uleb128 0x11
 638 00a4 01       		.uleb128 0x1
 639 00a5 12       		.uleb128 0x12
 640 00a6 06       		.uleb128 0x6
 641 00a7 40       		.uleb128 0x40
 642 00a8 18       		.uleb128 0x18
 643 00a9 9642     		.uleb128 0x2116
 644 00ab 19       		.uleb128 0x19
 645 00ac 00       		.byte	0
 646 00ad 00       		.byte	0
 647 00ae 0C       		.uleb128 0xc
 648 00af 01       		.uleb128 0x1
 649 00b0 01       		.byte	0x1
 650 00b1 49       		.uleb128 0x49
 651 00b2 13       		.uleb128 0x13
 652 00b3 01       		.uleb128 0x1
 653 00b4 13       		.uleb128 0x13
 654 00b5 00       		.byte	0
 655 00b6 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 23


 656 00b7 0D       		.uleb128 0xd
 657 00b8 21       		.uleb128 0x21
 658 00b9 00       		.byte	0
 659 00ba 49       		.uleb128 0x49
 660 00bb 13       		.uleb128 0x13
 661 00bc 2F       		.uleb128 0x2f
 662 00bd 0B       		.uleb128 0xb
 663 00be 00       		.byte	0
 664 00bf 00       		.byte	0
 665 00c0 0E       		.uleb128 0xe
 666 00c1 34       		.uleb128 0x34
 667 00c2 00       		.byte	0
 668 00c3 03       		.uleb128 0x3
 669 00c4 0E       		.uleb128 0xe
 670 00c5 3A       		.uleb128 0x3a
 671 00c6 0B       		.uleb128 0xb
 672 00c7 3B       		.uleb128 0x3b
 673 00c8 0B       		.uleb128 0xb
 674 00c9 49       		.uleb128 0x49
 675 00ca 13       		.uleb128 0x13
 676 00cb 3F       		.uleb128 0x3f
 677 00cc 19       		.uleb128 0x19
 678 00cd 3C       		.uleb128 0x3c
 679 00ce 19       		.uleb128 0x19
 680 00cf 00       		.byte	0
 681 00d0 00       		.byte	0
 682 00d1 00       		.byte	0
 683              		.section	.debug_aranges,"",%progbits
 684 0000 3C000000 		.4byte	0x3c
 685 0004 0200     		.2byte	0x2
 686 0006 00000000 		.4byte	.Ldebug_info0
 687 000a 04       		.byte	0x4
 688 000b 00       		.byte	0
 689 000c 0000     		.2byte	0
 690 000e 0000     		.2byte	0
 691 0010 00000000 		.4byte	.LFB0
 692 0014 54000000 		.4byte	.LFE0-.LFB0
 693 0018 00000000 		.4byte	.LFB1
 694 001c 54000000 		.4byte	.LFE1-.LFB1
 695 0020 00000000 		.4byte	.LFB2
 696 0024 5C000000 		.4byte	.LFE2-.LFB2
 697 0028 00000000 		.4byte	.LFB3
 698 002c 0C000000 		.4byte	.LFE3-.LFB3
 699 0030 00000000 		.4byte	.LFB4
 700 0034 0A000000 		.4byte	.LFE4-.LFB4
 701 0038 00000000 		.4byte	0
 702 003c 00000000 		.4byte	0
 703              		.section	.debug_ranges,"",%progbits
 704              	.Ldebug_ranges0:
 705 0000 00000000 		.4byte	.LFB0
 706 0004 54000000 		.4byte	.LFE0
 707 0008 00000000 		.4byte	.LFB1
 708 000c 54000000 		.4byte	.LFE1
 709 0010 00000000 		.4byte	.LFB2
 710 0014 5C000000 		.4byte	.LFE2
 711 0018 00000000 		.4byte	.LFB3
 712 001c 0C000000 		.4byte	.LFE3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 24


 713 0020 00000000 		.4byte	.LFB4
 714 0024 0A000000 		.4byte	.LFE4
 715 0028 00000000 		.4byte	0
 716 002c 00000000 		.4byte	0
 717              		.section	.debug_line,"",%progbits
 718              	.Ldebug_line0:
 719 0000 D7000000 		.section	.debug_str,"MS",%progbits,1
 719      02006100 
 719      00000201 
 719      FB0E0D00 
 719      01010101 
 720              	.LASF27:
 721 0000 55415254 		.ascii	"UART_EP_2_ISR\000"
 721      5F45505F 
 721      325F4953 
 721      5200
 722              	.LASF34:
 723 000e 55415254 		.ascii	"UART_EP\000"
 723      5F455000 
 724              	.LASF3:
 725 0016 73686F72 		.ascii	"short unsigned int\000"
 725      7420756E 
 725      7369676E 
 725      65642069 
 725      6E7400
 726              	.LASF25:
 727 0029 545F5541 		.ascii	"T_UART_EP_CTL_BLOCK\000"
 727      52545F45 
 727      505F4354 
 727      4C5F424C 
 727      4F434B00 
 728              	.LASF28:
 729 003d 55415254 		.ascii	"UART_EP_3_ISR\000"
 729      5F45505F 
 729      335F4953 
 729      5200
 730              	.LASF11:
 731 004b 666C6F61 		.ascii	"float\000"
 731      7400
 732              	.LASF19:
 733 0051 6570546F 		.ascii	"epToggle\000"
 733      67676C65 
 733      00
 734              	.LASF1:
 735 005a 756E7369 		.ascii	"unsigned char\000"
 735      676E6564 
 735      20636861 
 735      7200
 736              	.LASF14:
 737 0068 72656738 		.ascii	"reg8\000"
 737      00
 738              	.LASF5:
 739 006d 6C6F6E67 		.ascii	"long unsigned int\000"
 739      20756E73 
 739      69676E65 
 739      6420696E 
 739      7400
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 25


 740              	.LASF20:
 741 007f 61646472 		.ascii	"addr\000"
 741      00
 742              	.LASF29:
 743 0084 55415254 		.ascii	"UART_SOF_ISR\000"
 743      5F534F46 
 743      5F495352 
 743      00
 744              	.LASF12:
 745 0091 646F7562 		.ascii	"double\000"
 745      6C6500
 746              	.LASF16:
 747 0098 61747472 		.ascii	"attrib\000"
 747      696200
 748              	.LASF22:
 749 009f 62756666 		.ascii	"buffOffset\000"
 749      4F666673 
 749      657400
 750              	.LASF10:
 751 00aa 75696E74 		.ascii	"uint16\000"
 751      313600
 752              	.LASF17:
 753 00b1 61706945 		.ascii	"apiEpState\000"
 753      70537461 
 753      746500
 754              	.LASF8:
 755 00bc 756E7369 		.ascii	"unsigned int\000"
 755      676E6564 
 755      20696E74 
 755      00
 756              	.LASF7:
 757 00c9 6C6F6E67 		.ascii	"long long unsigned int\000"
 757      206C6F6E 
 757      6720756E 
 757      7369676E 
 757      65642069 
 758              	.LASF18:
 759 00e0 68774570 		.ascii	"hwEpState\000"
 759      53746174 
 759      6500
 760              	.LASF31:
 761 00ea 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 761      4320342E 
 761      382E3420 
 761      32303134 
 761      30353236 
 762 011d 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 762      20726576 
 762      6973696F 
 762      6E203231 
 762      31333538 
 763 0150 30202D66 		.ascii	"0 -ffunction-sections\000"
 763      66756E63 
 763      74696F6E 
 763      2D736563 
 763      74696F6E 
 764              	.LASF15:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 26


 765 0166 73697A65 		.ascii	"sizetype\000"
 765      74797065 
 765      00
 766              	.LASF21:
 767 016f 65704D6F 		.ascii	"epMode\000"
 767      646500
 768              	.LASF6:
 769 0176 6C6F6E67 		.ascii	"long long int\000"
 769      206C6F6E 
 769      6720696E 
 769      7400
 770              	.LASF13:
 771 0184 63686172 		.ascii	"char\000"
 771      00
 772              	.LASF26:
 773 0189 55415254 		.ascii	"UART_EP_1_ISR\000"
 773      5F45505F 
 773      315F4953 
 773      5200
 774              	.LASF23:
 775 0197 62756666 		.ascii	"bufferSize\000"
 775      65725369 
 775      7A6500
 776              	.LASF2:
 777 01a2 73686F72 		.ascii	"short int\000"
 777      7420696E 
 777      7400
 778              	.LASF9:
 779 01ac 75696E74 		.ascii	"uint8\000"
 779      3800
 780              	.LASF24:
 781 01b2 696E7465 		.ascii	"interface\000"
 781      72666163 
 781      6500
 782              	.LASF4:
 783 01bc 6C6F6E67 		.ascii	"long int\000"
 783      20696E74 
 783      00
 784              	.LASF33:
 785 01c5 433A5C55 		.ascii	"C:\\Users\\plod1602\\Desktop\\TAC_2015-09-18\\TAC_P"
 785      73657273 
 785      5C706C6F 
 785      64313630 
 785      325C4465 
 786 01f3 534F4335 		.ascii	"SOC5.cydsn\000"
 786      2E637964 
 786      736E00
 787              	.LASF0:
 788 01fe 7369676E 		.ascii	"signed char\000"
 788      65642063 
 788      68617200 
 789              	.LASF32:
 790 020a 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART_episr.c\000"
 790      6E657261 
 790      7465645F 
 790      536F7572 
 790      63655C50 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccguQanU.s 			page 27


 791              	.LASF30:
 792 0230 55415254 		.ascii	"UART_BUS_RESET_ISR\000"
 792      5F425553 
 792      5F524553 
 792      45545F49 
 792      535200
 793              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
