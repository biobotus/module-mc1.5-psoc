ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"UART.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.global	UART_initVar
  19              		.bss
  20              		.type	UART_initVar, %object
  21              		.size	UART_initVar, 1
  22              	UART_initVar:
  23 0000 00       		.space	1
  24              		.section	.text.UART_Start,"ax",%progbits
  25              		.align	2
  26              		.global	UART_Start
  27              		.thumb
  28              		.thumb_func
  29              		.type	UART_Start, %function
  30              	UART_Start:
  31              	.LFB0:
  32              		.file 1 ".\\Generated_Source\\PSoC5\\UART.c"
   1:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
   2:.\Generated_Source\PSoC5/UART.c **** * File Name: UART.c
   3:.\Generated_Source\PSoC5/UART.c **** * Version 2.80
   4:.\Generated_Source\PSoC5/UART.c **** *
   5:.\Generated_Source\PSoC5/UART.c **** * Description:
   6:.\Generated_Source\PSoC5/UART.c **** *  API for USBFS Component.
   7:.\Generated_Source\PSoC5/UART.c **** *
   8:.\Generated_Source\PSoC5/UART.c **** * Note:
   9:.\Generated_Source\PSoC5/UART.c **** *  Many of the functions use endpoint number.  RAM arrays are sized with 9
  10:.\Generated_Source\PSoC5/UART.c **** *  elements so they are indexed directly by epNumber.  The SIE and ARB
  11:.\Generated_Source\PSoC5/UART.c **** *  registers are indexed by variations of epNumber - 1.
  12:.\Generated_Source\PSoC5/UART.c **** *
  13:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  14:.\Generated_Source\PSoC5/UART.c **** * Copyright 2008-2014, Cypress Semiconductor Corporation.  All rights reserved.
  15:.\Generated_Source\PSoC5/UART.c **** * You may use this file only in accordance with the license, terms, conditions,
  16:.\Generated_Source\PSoC5/UART.c **** * disclaimers, and limitations in the end user license agreement accompanying
  17:.\Generated_Source\PSoC5/UART.c **** * the software package with which this file was provided.
  18:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
  19:.\Generated_Source\PSoC5/UART.c **** 
  20:.\Generated_Source\PSoC5/UART.c **** #include <CyDmac.h>
  21:.\Generated_Source\PSoC5/UART.c **** #include "UART.h"
  22:.\Generated_Source\PSoC5/UART.c **** #include "UART_pvt.h"
  23:.\Generated_Source\PSoC5/UART.c **** #include "UART_hid.h"
  24:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA1_REMOVE == 0u)
  25:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep1_dma.h"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 2


  26:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA1_REMOVE */
  27:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA2_REMOVE == 0u)
  28:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep2_dma.h"
  29:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA2_REMOVE */
  30:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA3_REMOVE == 0u)
  31:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep3_dma.h"
  32:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA3_REMOVE */
  33:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA4_REMOVE == 0u)
  34:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep4_dma.h"
  35:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA4_REMOVE */
  36:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA5_REMOVE == 0u)
  37:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep5_dma.h"
  38:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA5_REMOVE */
  39:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA6_REMOVE == 0u)
  40:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep6_dma.h"
  41:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA6_REMOVE */
  42:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA7_REMOVE == 0u)
  43:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep7_dma.h"
  44:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA7_REMOVE */
  45:.\Generated_Source\PSoC5/UART.c **** #if(UART_DMA8_REMOVE == 0u)
  46:.\Generated_Source\PSoC5/UART.c ****     #include "UART_ep8_dma.h"
  47:.\Generated_Source\PSoC5/UART.c **** #endif   /*  UART_DMA8_REMOVE */
  48:.\Generated_Source\PSoC5/UART.c **** #if((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
  49:.\Generated_Source\PSoC5/UART.c ****     #include "UART_EP_DMA_Done_isr.h"
  50:.\Generated_Source\PSoC5/UART.c ****     #include "UART_EP8_DMA_Done_SR.h"
  51:.\Generated_Source\PSoC5/UART.c ****     #include "UART_EP17_DMA_Done_SR.h"
  52:.\Generated_Source\PSoC5/UART.c **** #endif /* ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
  53:.\Generated_Source\PSoC5/UART.c **** 
  54:.\Generated_Source\PSoC5/UART.c **** 
  55:.\Generated_Source\PSoC5/UART.c **** /***************************************
  56:.\Generated_Source\PSoC5/UART.c **** * Global data allocation
  57:.\Generated_Source\PSoC5/UART.c **** ***************************************/
  58:.\Generated_Source\PSoC5/UART.c **** 
  59:.\Generated_Source\PSoC5/UART.c **** uint8 UART_initVar = 0u;
  60:.\Generated_Source\PSoC5/UART.c **** #if(UART_EP_MM != UART__EP_MANUAL)
  61:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_DmaChan[UART_MAX_EP];
  62:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_DmaTd[UART_MAX_EP];
  63:.\Generated_Source\PSoC5/UART.c **** #endif /*  UART_EP_MM */
  64:.\Generated_Source\PSoC5/UART.c **** #if((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
  65:.\Generated_Source\PSoC5/UART.c ****     static uint8 clearInDataRdyStatus = UART_ARB_EPX_CFG_DEFAULT;
  66:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_DmaNextTd[UART_MAX_EP];
  67:.\Generated_Source\PSoC5/UART.c ****     const uint8 UART_epX_TD_TERMOUT_EN[UART_MAX_EP] =
  68:.\Generated_Source\PSoC5/UART.c ****     {   0u,
  69:.\Generated_Source\PSoC5/UART.c ****         UART_ep1_TD_TERMOUT_EN,
  70:.\Generated_Source\PSoC5/UART.c ****         UART_ep2_TD_TERMOUT_EN,
  71:.\Generated_Source\PSoC5/UART.c ****         UART_ep3_TD_TERMOUT_EN,
  72:.\Generated_Source\PSoC5/UART.c ****         UART_ep4_TD_TERMOUT_EN,
  73:.\Generated_Source\PSoC5/UART.c ****         UART_ep5_TD_TERMOUT_EN,
  74:.\Generated_Source\PSoC5/UART.c ****         UART_ep6_TD_TERMOUT_EN,
  75:.\Generated_Source\PSoC5/UART.c ****         UART_ep7_TD_TERMOUT_EN,
  76:.\Generated_Source\PSoC5/UART.c ****         UART_ep8_TD_TERMOUT_EN
  77:.\Generated_Source\PSoC5/UART.c ****     };
  78:.\Generated_Source\PSoC5/UART.c ****     volatile uint16 UART_inLength[UART_MAX_EP];
  79:.\Generated_Source\PSoC5/UART.c ****     const uint8 *UART_inDataPointer[UART_MAX_EP];
  80:.\Generated_Source\PSoC5/UART.c ****     volatile uint8 UART_inBufFull[UART_MAX_EP];
  81:.\Generated_Source\PSoC5/UART.c **** #endif /* ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
  82:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 3


  83:.\Generated_Source\PSoC5/UART.c **** 
  84:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
  85:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Start
  86:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
  87:.\Generated_Source\PSoC5/UART.c **** *
  88:.\Generated_Source\PSoC5/UART.c **** * Summary:
  89:.\Generated_Source\PSoC5/UART.c **** *  This function initialize the USB SIE, arbiter and the
  90:.\Generated_Source\PSoC5/UART.c **** *  endpoint APIs, including setting the D+ Pullup
  91:.\Generated_Source\PSoC5/UART.c **** *
  92:.\Generated_Source\PSoC5/UART.c **** * Parameters:
  93:.\Generated_Source\PSoC5/UART.c **** *  device: Contains the device number of the desired device descriptor.
  94:.\Generated_Source\PSoC5/UART.c **** *          The device number can be found in the Device Descriptor Tab of
  95:.\Generated_Source\PSoC5/UART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
  96:.\Generated_Source\PSoC5/UART.c **** *          in the "Device Number" field.
  97:.\Generated_Source\PSoC5/UART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
  98:.\Generated_Source\PSoC5/UART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
  99:.\Generated_Source\PSoC5/UART.c **** *        operation. Symbolic names and their associated values are given in the
 100:.\Generated_Source\PSoC5/UART.c **** *        following table.
 101:.\Generated_Source\PSoC5/UART.c **** *       UART_3V_OPERATION - Disable voltage regulator and pass-thru
 102:.\Generated_Source\PSoC5/UART.c **** *                                       Vcc for pull-up
 103:.\Generated_Source\PSoC5/UART.c **** *       UART_5V_OPERATION - Enable voltage regulator and use
 104:.\Generated_Source\PSoC5/UART.c **** *                                       regulator for pull-up
 105:.\Generated_Source\PSoC5/UART.c **** *       UART_DWR_VDDD_OPERATION - Enable or Disable voltage
 106:.\Generated_Source\PSoC5/UART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 107:.\Generated_Source\PSoC5/UART.c **** *
 108:.\Generated_Source\PSoC5/UART.c **** * Return:
 109:.\Generated_Source\PSoC5/UART.c **** *   None.
 110:.\Generated_Source\PSoC5/UART.c **** *
 111:.\Generated_Source\PSoC5/UART.c **** * Global variables:
 112:.\Generated_Source\PSoC5/UART.c **** *  The UART_intiVar variable is used to indicate initial
 113:.\Generated_Source\PSoC5/UART.c **** *  configuration of this component. The variable is initialized to zero (0u)
 114:.\Generated_Source\PSoC5/UART.c **** *  and set to one (1u) the first time UART_Start() is called.
 115:.\Generated_Source\PSoC5/UART.c **** *  This allows for component Re-Start without unnecessary re-initialization
 116:.\Generated_Source\PSoC5/UART.c **** *  in all subsequent calls to the UART_Start() routine.
 117:.\Generated_Source\PSoC5/UART.c **** *  If re-initialization of the component is required the variable should be set
 118:.\Generated_Source\PSoC5/UART.c **** *  to zero before call of UART_Start() routine, or the user may call
 119:.\Generated_Source\PSoC5/UART.c **** *  UART_Init() and UART_InitComponent() as done
 120:.\Generated_Source\PSoC5/UART.c **** *  in the UART_Start() routine.
 121:.\Generated_Source\PSoC5/UART.c **** *
 122:.\Generated_Source\PSoC5/UART.c **** * Side Effects:
 123:.\Generated_Source\PSoC5/UART.c **** *   This function will reset all communication states to default.
 124:.\Generated_Source\PSoC5/UART.c **** *
 125:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
 126:.\Generated_Source\PSoC5/UART.c **** *  No.
 127:.\Generated_Source\PSoC5/UART.c **** *
 128:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 129:.\Generated_Source\PSoC5/UART.c **** void UART_Start(uint8 device, uint8 mode) 
 130:.\Generated_Source\PSoC5/UART.c **** {
  33              		.loc 1 130 0
  34              		.cfi_startproc
  35              		@ args = 0, pretend = 0, frame = 8
  36              		@ frame_needed = 1, uses_anonymous_args = 0
  37 0000 80B5     		push	{r7, lr}
  38              		.cfi_def_cfa_offset 8
  39              		.cfi_offset 7, -8
  40              		.cfi_offset 14, -4
  41 0002 82B0     		sub	sp, sp, #8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 4


  42              		.cfi_def_cfa_offset 16
  43 0004 00AF     		add	r7, sp, #0
  44              		.cfi_def_cfa_register 7
  45 0006 0246     		mov	r2, r0
  46 0008 0B46     		mov	r3, r1
  47 000a FA71     		strb	r2, [r7, #7]
  48 000c BB71     		strb	r3, [r7, #6]
 131:.\Generated_Source\PSoC5/UART.c ****     /* If not Initialized then initialize all required hardware and software */
 132:.\Generated_Source\PSoC5/UART.c ****     if(UART_initVar == 0u)
  49              		.loc 1 132 0
  50 000e 094B     		ldr	r3, .L3
  51 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
  52 0012 002B     		cmp	r3, #0
  53 0014 04D1     		bne	.L2
 133:.\Generated_Source\PSoC5/UART.c ****     {
 134:.\Generated_Source\PSoC5/UART.c ****         UART_Init();
  54              		.loc 1 134 0
  55 0016 FFF7FEFF 		bl	UART_Init
 135:.\Generated_Source\PSoC5/UART.c ****         UART_initVar = 1u;
  56              		.loc 1 135 0
  57 001a 064B     		ldr	r3, .L3
  58 001c 0122     		movs	r2, #1
  59 001e 1A70     		strb	r2, [r3]
  60              	.L2:
 136:.\Generated_Source\PSoC5/UART.c ****     }
 137:.\Generated_Source\PSoC5/UART.c ****     UART_InitComponent(device, mode);
  61              		.loc 1 137 0
  62 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
  63 0022 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
  64 0024 1046     		mov	r0, r2
  65 0026 1946     		mov	r1, r3
  66 0028 FFF7FEFF 		bl	UART_InitComponent
 138:.\Generated_Source\PSoC5/UART.c **** }
  67              		.loc 1 138 0
  68 002c 0837     		adds	r7, r7, #8
  69 002e BD46     		mov	sp, r7
  70              		@ sp needed
  71 0030 80BD     		pop	{r7, pc}
  72              	.L4:
  73 0032 00BF     		.align	2
  74              	.L3:
  75 0034 00000000 		.word	UART_initVar
  76              		.cfi_endproc
  77              	.LFE0:
  78              		.size	UART_Start, .-UART_Start
  79              		.section	.text.UART_Init,"ax",%progbits
  80              		.align	2
  81              		.global	UART_Init
  82              		.thumb
  83              		.thumb_func
  84              		.type	UART_Init, %function
  85              	UART_Init:
  86              	.LFB1:
 139:.\Generated_Source\PSoC5/UART.c **** 
 140:.\Generated_Source\PSoC5/UART.c **** 
 141:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 142:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Init
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 5


 143:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 144:.\Generated_Source\PSoC5/UART.c **** *
 145:.\Generated_Source\PSoC5/UART.c **** * Summary:
 146:.\Generated_Source\PSoC5/UART.c **** *  Initialize component's hardware. Usually called in UART_Start().
 147:.\Generated_Source\PSoC5/UART.c **** *
 148:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 149:.\Generated_Source\PSoC5/UART.c **** *  None.
 150:.\Generated_Source\PSoC5/UART.c **** *
 151:.\Generated_Source\PSoC5/UART.c **** * Return:
 152:.\Generated_Source\PSoC5/UART.c **** *  None.
 153:.\Generated_Source\PSoC5/UART.c **** *
 154:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
 155:.\Generated_Source\PSoC5/UART.c **** *  No.
 156:.\Generated_Source\PSoC5/UART.c **** *
 157:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 158:.\Generated_Source\PSoC5/UART.c **** void UART_Init(void) 
 159:.\Generated_Source\PSoC5/UART.c **** {
  87              		.loc 1 159 0
  88              		.cfi_startproc
  89              		@ args = 0, pretend = 0, frame = 8
  90              		@ frame_needed = 1, uses_anonymous_args = 0
  91 0000 80B5     		push	{r7, lr}
  92              		.cfi_def_cfa_offset 8
  93              		.cfi_offset 7, -8
  94              		.cfi_offset 14, -4
  95 0002 82B0     		sub	sp, sp, #8
  96              		.cfi_def_cfa_offset 16
  97 0004 00AF     		add	r7, sp, #0
  98              		.cfi_def_cfa_register 7
 160:.\Generated_Source\PSoC5/UART.c ****     uint8 enableInterrupts;
 161:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM != UART__EP_MANUAL)
 162:.\Generated_Source\PSoC5/UART.c ****         uint16 i;
 163:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 164:.\Generated_Source\PSoC5/UART.c **** 
 165:.\Generated_Source\PSoC5/UART.c ****     enableInterrupts = CyEnterCriticalSection();
  99              		.loc 1 165 0
 100 0006 FFF7FEFF 		bl	CyEnterCriticalSection
 101 000a 0346     		mov	r3, r0
 102 000c FB71     		strb	r3, [r7, #7]
 166:.\Generated_Source\PSoC5/UART.c **** 
 167:.\Generated_Source\PSoC5/UART.c ****     /* Enable USB block  */
 168:.\Generated_Source\PSoC5/UART.c ****     UART_PM_ACT_CFG_REG |= UART_PM_ACT_EN_FSUSB;
 103              		.loc 1 168 0
 104 000e 4F4B     		ldr	r3, .L6
 105 0010 4E4A     		ldr	r2, .L6
 106 0012 1278     		ldrb	r2, [r2]
 107 0014 D2B2     		uxtb	r2, r2
 108 0016 42F00102 		orr	r2, r2, #1
 109 001a D2B2     		uxtb	r2, r2
 110 001c 1A70     		strb	r2, [r3]
 169:.\Generated_Source\PSoC5/UART.c ****     /* Enable USB block for Standby Power Mode */
 170:.\Generated_Source\PSoC5/UART.c ****     UART_PM_STBY_CFG_REG |= UART_PM_STBY_EN_FSUSB;
 111              		.loc 1 170 0
 112 001e 4C4B     		ldr	r3, .L6+4
 113 0020 4B4A     		ldr	r2, .L6+4
 114 0022 1278     		ldrb	r2, [r2]
 115 0024 D2B2     		uxtb	r2, r2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 6


 116 0026 42F00102 		orr	r2, r2, #1
 117 002a D2B2     		uxtb	r2, r2
 118 002c 1A70     		strb	r2, [r3]
 171:.\Generated_Source\PSoC5/UART.c **** 
 172:.\Generated_Source\PSoC5/UART.c ****     /* Enable core clock */
 173:.\Generated_Source\PSoC5/UART.c ****     UART_USB_CLK_EN_REG = UART_USB_CLK_ENABLE;
 119              		.loc 1 173 0
 120 002e 494B     		ldr	r3, .L6+8
 121 0030 0122     		movs	r2, #1
 122 0032 1A70     		strb	r2, [r3]
 174:.\Generated_Source\PSoC5/UART.c **** 
 175:.\Generated_Source\PSoC5/UART.c ****     UART_CR1_REG = UART_CR1_ENABLE_LOCK;
 123              		.loc 1 175 0
 124 0034 484B     		ldr	r3, .L6+12
 125 0036 0222     		movs	r2, #2
 126 0038 1A70     		strb	r2, [r3]
 176:.\Generated_Source\PSoC5/UART.c **** 
 177:.\Generated_Source\PSoC5/UART.c ****     /* ENABLING USBIO PADS IN USB MODE FROM I/O MODE */
 178:.\Generated_Source\PSoC5/UART.c ****     /* Ensure USB transmit enable is low (USB_USBIO_CR0.ten). - Manual Transmission - Disabled */
 179:.\Generated_Source\PSoC5/UART.c ****     UART_USBIO_CR0_REG &= ((uint8)(~UART_USBIO_CR0_TEN));
 127              		.loc 1 179 0
 128 003a 484B     		ldr	r3, .L6+16
 129 003c 474A     		ldr	r2, .L6+16
 130 003e 1278     		ldrb	r2, [r2]
 131 0040 D2B2     		uxtb	r2, r2
 132 0042 02F07F02 		and	r2, r2, #127
 133 0046 D2B2     		uxtb	r2, r2
 134 0048 1A70     		strb	r2, [r3]
 180:.\Generated_Source\PSoC5/UART.c ****     CyDelayUs(0u);  /*~50ns delay */
 135              		.loc 1 180 0
 136 004a 0020     		movs	r0, #0
 137 004c FFF7FEFF 		bl	CyDelayUs
 181:.\Generated_Source\PSoC5/UART.c ****     /* Disable the USBIO by asserting PM.USB_CR0.fsusbio_pd_n(Inverted)
 182:.\Generated_Source\PSoC5/UART.c ****     *  high. This will have been set low by the power manger out of reset.
 183:.\Generated_Source\PSoC5/UART.c ****     *  Also confirm USBIO pull-up disabled
 184:.\Generated_Source\PSoC5/UART.c ****     */
 185:.\Generated_Source\PSoC5/UART.c ****     UART_PM_USB_CR0_REG &= ((uint8)(~(UART_PM_USB_CR0_PD_N |
 138              		.loc 1 185 0
 139 0050 434B     		ldr	r3, .L6+20
 140 0052 434A     		ldr	r2, .L6+20
 141 0054 1278     		ldrb	r2, [r2]
 142 0056 D2B2     		uxtb	r2, r2
 143 0058 22F00602 		bic	r2, r2, #6
 144 005c D2B2     		uxtb	r2, r2
 145 005e 1A70     		strb	r2, [r3]
 186:.\Generated_Source\PSoC5/UART.c ****                                                   UART_PM_USB_CR0_PD_PULLUP_N)));
 187:.\Generated_Source\PSoC5/UART.c **** 
 188:.\Generated_Source\PSoC5/UART.c ****     /* Select iomode to USB mode*/
 189:.\Generated_Source\PSoC5/UART.c ****     UART_USBIO_CR1_REG &= ((uint8)(~UART_USBIO_CR1_IOMODE));
 146              		.loc 1 189 0
 147 0060 404B     		ldr	r3, .L6+24
 148 0062 404A     		ldr	r2, .L6+24
 149 0064 1278     		ldrb	r2, [r2]
 150 0066 D2B2     		uxtb	r2, r2
 151 0068 22F02002 		bic	r2, r2, #32
 152 006c D2B2     		uxtb	r2, r2
 153 006e 1A70     		strb	r2, [r3]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 7


 190:.\Generated_Source\PSoC5/UART.c **** 
 191:.\Generated_Source\PSoC5/UART.c ****     /* Enable the USBIO reference by setting PM.USB_CR0.fsusbio_ref_en.*/
 192:.\Generated_Source\PSoC5/UART.c ****     UART_PM_USB_CR0_REG |= UART_PM_USB_CR0_REF_EN;
 154              		.loc 1 192 0
 155 0070 3B4B     		ldr	r3, .L6+20
 156 0072 3B4A     		ldr	r2, .L6+20
 157 0074 1278     		ldrb	r2, [r2]
 158 0076 D2B2     		uxtb	r2, r2
 159 0078 42F00102 		orr	r2, r2, #1
 160 007c D2B2     		uxtb	r2, r2
 161 007e 1A70     		strb	r2, [r3]
 193:.\Generated_Source\PSoC5/UART.c ****     /* The reference will be available 1 us after the regulator is enabled */
 194:.\Generated_Source\PSoC5/UART.c ****     CyDelayUs(1u);
 162              		.loc 1 194 0
 163 0080 0120     		movs	r0, #1
 164 0082 FFF7FEFF 		bl	CyDelayUs
 195:.\Generated_Source\PSoC5/UART.c ****     /* OR 40us after power restored */
 196:.\Generated_Source\PSoC5/UART.c ****     CyDelayUs(40u);
 165              		.loc 1 196 0
 166 0086 2820     		movs	r0, #40
 167 0088 FFF7FEFF 		bl	CyDelayUs
 197:.\Generated_Source\PSoC5/UART.c ****     /* Ensure the single ended disable bits are low (PRT15.INP_DIS[7:6])(input receiver enabled). *
 198:.\Generated_Source\PSoC5/UART.c ****     UART_DM_INP_DIS_REG &= ((uint8)(~UART_DM_MASK));
 168              		.loc 1 198 0
 169 008c 364B     		ldr	r3, .L6+28
 170 008e 364A     		ldr	r2, .L6+28
 171 0090 1278     		ldrb	r2, [r2]
 172 0092 D2B2     		uxtb	r2, r2
 173 0094 02F07F02 		and	r2, r2, #127
 174 0098 D2B2     		uxtb	r2, r2
 175 009a 1A70     		strb	r2, [r3]
 199:.\Generated_Source\PSoC5/UART.c ****     UART_DP_INP_DIS_REG &= ((uint8)(~UART_DP_MASK));
 176              		.loc 1 199 0
 177 009c 324B     		ldr	r3, .L6+28
 178 009e 324A     		ldr	r2, .L6+28
 179 00a0 1278     		ldrb	r2, [r2]
 180 00a2 D2B2     		uxtb	r2, r2
 181 00a4 22F04002 		bic	r2, r2, #64
 182 00a8 D2B2     		uxtb	r2, r2
 183 00aa 1A70     		strb	r2, [r3]
 200:.\Generated_Source\PSoC5/UART.c **** 
 201:.\Generated_Source\PSoC5/UART.c ****     /* Enable USBIO */
 202:.\Generated_Source\PSoC5/UART.c ****     UART_PM_USB_CR0_REG |= UART_PM_USB_CR0_PD_N;
 184              		.loc 1 202 0
 185 00ac 2C4B     		ldr	r3, .L6+20
 186 00ae 2C4A     		ldr	r2, .L6+20
 187 00b0 1278     		ldrb	r2, [r2]
 188 00b2 D2B2     		uxtb	r2, r2
 189 00b4 42F00202 		orr	r2, r2, #2
 190 00b8 D2B2     		uxtb	r2, r2
 191 00ba 1A70     		strb	r2, [r3]
 203:.\Generated_Source\PSoC5/UART.c ****     CyDelayUs(2u);
 192              		.loc 1 203 0
 193 00bc 0220     		movs	r0, #2
 194 00be FFF7FEFF 		bl	CyDelayUs
 204:.\Generated_Source\PSoC5/UART.c ****     /* Set the USBIO pull-up enable */
 205:.\Generated_Source\PSoC5/UART.c ****     UART_PM_USB_CR0_REG |= UART_PM_USB_CR0_PD_PULLUP_N;
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 8


 195              		.loc 1 205 0
 196 00c2 274B     		ldr	r3, .L6+20
 197 00c4 264A     		ldr	r2, .L6+20
 198 00c6 1278     		ldrb	r2, [r2]
 199 00c8 D2B2     		uxtb	r2, r2
 200 00ca 42F00402 		orr	r2, r2, #4
 201 00ce D2B2     		uxtb	r2, r2
 202 00d0 1A70     		strb	r2, [r3]
 206:.\Generated_Source\PSoC5/UART.c **** 
 207:.\Generated_Source\PSoC5/UART.c ****     /* Write WAx */
 208:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_ARB_RW1_WA_PTR,     0u);
 203              		.loc 1 208 0
 204 00d2 264B     		ldr	r3, .L6+32
 205 00d4 0022     		movs	r2, #0
 206 00d6 1A70     		strb	r2, [r3]
 209:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_ARB_RW1_WA_MSB_PTR, 0u);
 207              		.loc 1 209 0
 208 00d8 254B     		ldr	r3, .L6+36
 209 00da 0022     		movs	r2, #0
 210 00dc 1A70     		strb	r2, [r3]
 210:.\Generated_Source\PSoC5/UART.c **** 
 211:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM != UART__EP_MANUAL)
 212:.\Generated_Source\PSoC5/UART.c ****         /* Init transfer descriptor. This will be used to detect the DMA state - initialized or not
 213:.\Generated_Source\PSoC5/UART.c ****         for (i = 0u; i < UART_MAX_EP; i++)
 214:.\Generated_Source\PSoC5/UART.c ****         {
 215:.\Generated_Source\PSoC5/UART.c ****             UART_DmaTd[i] = DMA_INVALID_TD;
 216:.\Generated_Source\PSoC5/UART.c ****             #if ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
 217:.\Generated_Source\PSoC5/UART.c ****                 UART_DmaNextTd[i] = DMA_INVALID_TD;
 218:.\Generated_Source\PSoC5/UART.c ****             #endif /* ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
 219:.\Generated_Source\PSoC5/UART.c ****         }
 220:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 221:.\Generated_Source\PSoC5/UART.c **** 
 222:.\Generated_Source\PSoC5/UART.c ****     CyExitCriticalSection(enableInterrupts);
 211              		.loc 1 222 0
 212 00de FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 213 00e0 1846     		mov	r0, r3
 214 00e2 FFF7FEFF 		bl	CyExitCriticalSection
 223:.\Generated_Source\PSoC5/UART.c **** 
 224:.\Generated_Source\PSoC5/UART.c **** 
 225:.\Generated_Source\PSoC5/UART.c ****     /* Set the bus reset Interrupt. */
 226:.\Generated_Source\PSoC5/UART.c ****     (void) CyIntSetVector(UART_BUS_RESET_VECT_NUM,   &UART_BUS_RESET_ISR);
 215              		.loc 1 226 0
 216 00e6 1720     		movs	r0, #23
 217 00e8 2249     		ldr	r1, .L6+40
 218 00ea FFF7FEFF 		bl	CyIntSetVector
 227:.\Generated_Source\PSoC5/UART.c ****     CyIntSetPriority(UART_BUS_RESET_VECT_NUM, UART_BUS_RESET_PRIOR);
 219              		.loc 1 227 0
 220 00ee 1720     		movs	r0, #23
 221 00f0 0721     		movs	r1, #7
 222 00f2 FFF7FEFF 		bl	CyIntSetPriority
 228:.\Generated_Source\PSoC5/UART.c **** 
 229:.\Generated_Source\PSoC5/UART.c ****     /* Set the SOF Interrupt. */
 230:.\Generated_Source\PSoC5/UART.c ****     #if(UART_SOF_ISR_REMOVE == 0u)
 231:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_SOF_VECT_NUM,   &UART_SOF_ISR);
 223              		.loc 1 231 0
 224 00f6 1520     		movs	r0, #21
 225 00f8 1F49     		ldr	r1, .L6+44
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 9


 226 00fa FFF7FEFF 		bl	CyIntSetVector
 232:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_SOF_VECT_NUM, UART_SOF_PRIOR);
 227              		.loc 1 232 0
 228 00fe 1520     		movs	r0, #21
 229 0100 0721     		movs	r1, #7
 230 0102 FFF7FEFF 		bl	CyIntSetPriority
 233:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_SOF_ISR_REMOVE */
 234:.\Generated_Source\PSoC5/UART.c **** 
 235:.\Generated_Source\PSoC5/UART.c ****     /* Set the Control Endpoint Interrupt. */
 236:.\Generated_Source\PSoC5/UART.c ****     (void) CyIntSetVector(UART_EP_0_VECT_NUM,   &UART_EP_0_ISR);
 231              		.loc 1 236 0
 232 0106 1820     		movs	r0, #24
 233 0108 1C49     		ldr	r1, .L6+48
 234 010a FFF7FEFF 		bl	CyIntSetVector
 237:.\Generated_Source\PSoC5/UART.c ****     CyIntSetPriority(UART_EP_0_VECT_NUM, UART_EP_0_PRIOR);
 235              		.loc 1 237 0
 236 010e 1820     		movs	r0, #24
 237 0110 0721     		movs	r1, #7
 238 0112 FFF7FEFF 		bl	CyIntSetPriority
 238:.\Generated_Source\PSoC5/UART.c **** 
 239:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 1 Interrupt. */
 240:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP1_ISR_REMOVE == 0u)
 241:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_1_VECT_NUM,   &UART_EP_1_ISR);
 239              		.loc 1 241 0
 240 0116 0320     		movs	r0, #3
 241 0118 1949     		ldr	r1, .L6+52
 242 011a FFF7FEFF 		bl	CyIntSetVector
 242:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_1_VECT_NUM, UART_EP_1_PRIOR);
 243              		.loc 1 242 0
 244 011e 0320     		movs	r0, #3
 245 0120 0721     		movs	r1, #7
 246 0122 FFF7FEFF 		bl	CyIntSetPriority
 243:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP1_ISR_REMOVE */
 244:.\Generated_Source\PSoC5/UART.c **** 
 245:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 2 Interrupt. */
 246:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP2_ISR_REMOVE == 0u)
 247:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_2_VECT_NUM,   &UART_EP_2_ISR);
 247              		.loc 1 247 0
 248 0126 0420     		movs	r0, #4
 249 0128 1649     		ldr	r1, .L6+56
 250 012a FFF7FEFF 		bl	CyIntSetVector
 248:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_2_VECT_NUM, UART_EP_2_PRIOR);
 251              		.loc 1 248 0
 252 012e 0420     		movs	r0, #4
 253 0130 0721     		movs	r1, #7
 254 0132 FFF7FEFF 		bl	CyIntSetPriority
 249:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP2_ISR_REMOVE */
 250:.\Generated_Source\PSoC5/UART.c **** 
 251:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 3 Interrupt. */
 252:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP3_ISR_REMOVE == 0u)
 253:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_3_VECT_NUM,   &UART_EP_3_ISR);
 255              		.loc 1 253 0
 256 0136 0520     		movs	r0, #5
 257 0138 1349     		ldr	r1, .L6+60
 258 013a FFF7FEFF 		bl	CyIntSetVector
 254:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_3_VECT_NUM, UART_EP_3_PRIOR);
 259              		.loc 1 254 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 10


 260 013e 0520     		movs	r0, #5
 261 0140 0721     		movs	r1, #7
 262 0142 FFF7FEFF 		bl	CyIntSetPriority
 255:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP3_ISR_REMOVE */
 256:.\Generated_Source\PSoC5/UART.c **** 
 257:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 4 Interrupt. */
 258:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP4_ISR_REMOVE == 0u)
 259:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_4_VECT_NUM,   &UART_EP_4_ISR);
 260:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_4_VECT_NUM, UART_EP_4_PRIOR);
 261:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP4_ISR_REMOVE */
 262:.\Generated_Source\PSoC5/UART.c **** 
 263:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 5 Interrupt. */
 264:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP5_ISR_REMOVE == 0u)
 265:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_5_VECT_NUM,   &UART_EP_5_ISR);
 266:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_5_VECT_NUM, UART_EP_5_PRIOR);
 267:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP5_ISR_REMOVE */
 268:.\Generated_Source\PSoC5/UART.c **** 
 269:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 6 Interrupt. */
 270:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP6_ISR_REMOVE == 0u)
 271:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_6_VECT_NUM,   &UART_EP_6_ISR);
 272:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_6_VECT_NUM, UART_EP_6_PRIOR);
 273:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP6_ISR_REMOVE */
 274:.\Generated_Source\PSoC5/UART.c **** 
 275:.\Generated_Source\PSoC5/UART.c ****      /* Set the Data Endpoint 7 Interrupt. */
 276:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP7_ISR_REMOVE == 0u)
 277:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_7_VECT_NUM,   &UART_EP_7_ISR);
 278:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_7_VECT_NUM, UART_EP_7_PRIOR);
 279:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP7_ISR_REMOVE */
 280:.\Generated_Source\PSoC5/UART.c **** 
 281:.\Generated_Source\PSoC5/UART.c ****     /* Set the Data Endpoint 8 Interrupt. */
 282:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP8_ISR_REMOVE == 0u)
 283:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_EP_8_VECT_NUM,   &UART_EP_8_ISR);
 284:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_EP_8_VECT_NUM, UART_EP_8_PRIOR);
 285:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP8_ISR_REMOVE */
 286:.\Generated_Source\PSoC5/UART.c **** 
 287:.\Generated_Source\PSoC5/UART.c ****     #if((UART_EP_MM != UART__EP_MANUAL) && (UART_ARB_ISR_REMOVE == 0u))
 288:.\Generated_Source\PSoC5/UART.c ****         /* Set the ARB Interrupt. */
 289:.\Generated_Source\PSoC5/UART.c ****         (void) CyIntSetVector(UART_ARB_VECT_NUM,   &UART_ARB_ISR);
 290:.\Generated_Source\PSoC5/UART.c ****         CyIntSetPriority(UART_ARB_VECT_NUM, UART_ARB_PRIOR);
 291:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 292:.\Generated_Source\PSoC5/UART.c **** 
 293:.\Generated_Source\PSoC5/UART.c **** }
 263              		.loc 1 293 0
 264 0146 0837     		adds	r7, r7, #8
 265 0148 BD46     		mov	sp, r7
 266              		@ sp needed
 267 014a 80BD     		pop	{r7, pc}
 268              	.L7:
 269              		.align	2
 270              	.L6:
 271 014c A5430040 		.word	1073759141
 272 0150 B5430040 		.word	1073759157
 273 0154 9D600040 		.word	1073766557
 274 0158 09600040 		.word	1073766409
 275 015c 10600040 		.word	1073766416
 276 0160 94430040 		.word	1073759124
 277 0164 12600040 		.word	1073766418
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 11


 278 0168 F8510040 		.word	1073762808
 279 016c 84600040 		.word	1073766532
 280 0170 85600040 		.word	1073766533
 281 0174 00000000 		.word	UART_BUS_RESET_ISR
 282 0178 00000000 		.word	UART_SOF_ISR
 283 017c 00000000 		.word	UART_EP_0_ISR
 284 0180 00000000 		.word	UART_EP_1_ISR
 285 0184 00000000 		.word	UART_EP_2_ISR
 286 0188 00000000 		.word	UART_EP_3_ISR
 287              		.cfi_endproc
 288              	.LFE1:
 289              		.size	UART_Init, .-UART_Init
 290              		.section	.text.UART_InitComponent,"ax",%progbits
 291              		.align	2
 292              		.global	UART_InitComponent
 293              		.thumb
 294              		.thumb_func
 295              		.type	UART_InitComponent, %function
 296              	UART_InitComponent:
 297              	.LFB2:
 294:.\Generated_Source\PSoC5/UART.c **** 
 295:.\Generated_Source\PSoC5/UART.c **** 
 296:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 297:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_InitComponent
 298:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 299:.\Generated_Source\PSoC5/UART.c **** *
 300:.\Generated_Source\PSoC5/UART.c **** * Summary:
 301:.\Generated_Source\PSoC5/UART.c **** *  Initialize the component, except for the HW which is done one time in
 302:.\Generated_Source\PSoC5/UART.c **** *  the Start function.  This function pulls up D+.
 303:.\Generated_Source\PSoC5/UART.c **** *
 304:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 305:.\Generated_Source\PSoC5/UART.c **** *  device: Contains the device number of the desired device descriptor.
 306:.\Generated_Source\PSoC5/UART.c **** *          The device number can be found in the Device Descriptor Tab of
 307:.\Generated_Source\PSoC5/UART.c **** *          "Configure" dialog, under the settings of desired Device Descriptor,
 308:.\Generated_Source\PSoC5/UART.c **** *          in the "Device Number" field.
 309:.\Generated_Source\PSoC5/UART.c **** *  mode: The operating voltage. This determines whether the voltage regulator
 310:.\Generated_Source\PSoC5/UART.c **** *        is enabled for 5V operation or if pass through mode is used for 3.3V
 311:.\Generated_Source\PSoC5/UART.c **** *        operation. Symbolic names and their associated values are given in the
 312:.\Generated_Source\PSoC5/UART.c **** *        following table.
 313:.\Generated_Source\PSoC5/UART.c **** *       UART_3V_OPERATION - Disable voltage regulator and pass-thru
 314:.\Generated_Source\PSoC5/UART.c **** *                                       Vcc for pull-up
 315:.\Generated_Source\PSoC5/UART.c **** *       UART_5V_OPERATION - Enable voltage regulator and use
 316:.\Generated_Source\PSoC5/UART.c **** *                                       regulator for pull-up
 317:.\Generated_Source\PSoC5/UART.c **** *       UART_DWR_VDDD_OPERATION - Enable or Disable voltage
 318:.\Generated_Source\PSoC5/UART.c **** *                         regulator depend on Vddd Voltage configuration in DWR.
 319:.\Generated_Source\PSoC5/UART.c **** *
 320:.\Generated_Source\PSoC5/UART.c **** * Return:
 321:.\Generated_Source\PSoC5/UART.c **** *   None.
 322:.\Generated_Source\PSoC5/UART.c **** *
 323:.\Generated_Source\PSoC5/UART.c **** * Global variables:
 324:.\Generated_Source\PSoC5/UART.c **** *   UART_device: Contains the device number of the desired device
 325:.\Generated_Source\PSoC5/UART.c **** *       descriptor. The device number can be found in the Device Descriptor Tab
 326:.\Generated_Source\PSoC5/UART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 327:.\Generated_Source\PSoC5/UART.c **** *       in the "Device Number" field.
 328:.\Generated_Source\PSoC5/UART.c **** *   UART_transferState: This variable used by the communication
 329:.\Generated_Source\PSoC5/UART.c **** *       functions to handle current transfer state. Initialized to
 330:.\Generated_Source\PSoC5/UART.c **** *       TRANS_STATE_IDLE in this API.
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 12


 331:.\Generated_Source\PSoC5/UART.c **** *   UART_configuration: Contains current configuration number
 332:.\Generated_Source\PSoC5/UART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 333:.\Generated_Source\PSoC5/UART.c **** *       Initialized to zero in this API.
 334:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceAddress: Contains current device address. This
 335:.\Generated_Source\PSoC5/UART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 336:.\Generated_Source\PSoC5/UART.c **** *      to device with address 0 and then set it to whatever value using
 337:.\Generated_Source\PSoC5/UART.c **** *      SET_ADDRESS request.
 338:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceStatus: initialized to 0.
 339:.\Generated_Source\PSoC5/UART.c **** *       This is two bit variable which contain power status in first bit
 340:.\Generated_Source\PSoC5/UART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 341:.\Generated_Source\PSoC5/UART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 342:.\Generated_Source\PSoC5/UART.c **** *   UART_lastPacketSize initialized to 0;
 343:.\Generated_Source\PSoC5/UART.c **** *
 344:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
 345:.\Generated_Source\PSoC5/UART.c **** *  No.
 346:.\Generated_Source\PSoC5/UART.c **** *
 347:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 348:.\Generated_Source\PSoC5/UART.c **** void UART_InitComponent(uint8 device, uint8 mode) 
 349:.\Generated_Source\PSoC5/UART.c **** {
 298              		.loc 1 349 0
 299              		.cfi_startproc
 300              		@ args = 0, pretend = 0, frame = 8
 301              		@ frame_needed = 1, uses_anonymous_args = 0
 302 0000 80B5     		push	{r7, lr}
 303              		.cfi_def_cfa_offset 8
 304              		.cfi_offset 7, -8
 305              		.cfi_offset 14, -4
 306 0002 82B0     		sub	sp, sp, #8
 307              		.cfi_def_cfa_offset 16
 308 0004 00AF     		add	r7, sp, #0
 309              		.cfi_def_cfa_register 7
 310 0006 0246     		mov	r2, r0
 311 0008 0B46     		mov	r3, r1
 312 000a FA71     		strb	r2, [r7, #7]
 313 000c BB71     		strb	r3, [r7, #6]
 350:.\Generated_Source\PSoC5/UART.c ****     /* Initialize _hidProtocol variable to comply with
 351:.\Generated_Source\PSoC5/UART.c ****     *  HID 7.2.6 Set_Protocol Request:
 352:.\Generated_Source\PSoC5/UART.c ****     *  "When initialized, all devices default to report protocol."
 353:.\Generated_Source\PSoC5/UART.c ****     */
 354:.\Generated_Source\PSoC5/UART.c ****     #if defined(UART_ENABLE_HID_CLASS)
 355:.\Generated_Source\PSoC5/UART.c ****         uint8 i;
 356:.\Generated_Source\PSoC5/UART.c **** 
 357:.\Generated_Source\PSoC5/UART.c ****         for (i = 0u; i < UART_MAX_INTERFACES_NUMBER; i++)
 358:.\Generated_Source\PSoC5/UART.c ****         {
 359:.\Generated_Source\PSoC5/UART.c ****             UART_hidProtocol[i] = UART_PROTOCOL_REPORT;
 360:.\Generated_Source\PSoC5/UART.c ****         }
 361:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_ENABLE_HID_CLASS */
 362:.\Generated_Source\PSoC5/UART.c **** 
 363:.\Generated_Source\PSoC5/UART.c ****     /* Enable Interrupts. */
 364:.\Generated_Source\PSoC5/UART.c ****     CyIntEnable(UART_BUS_RESET_VECT_NUM);
 314              		.loc 1 364 0
 315 000e 254B     		ldr	r3, .L14
 316 0010 4FF40002 		mov	r2, #8388608
 317 0014 1A60     		str	r2, [r3]
 365:.\Generated_Source\PSoC5/UART.c ****     CyIntEnable(UART_EP_0_VECT_NUM);
 318              		.loc 1 365 0
 319 0016 234B     		ldr	r3, .L14
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 13


 320 0018 4FF08072 		mov	r2, #16777216
 321 001c 1A60     		str	r2, [r3]
 366:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP1_ISR_REMOVE == 0u)
 367:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_1_VECT_NUM);
 322              		.loc 1 367 0
 323 001e 214B     		ldr	r3, .L14
 324 0020 0822     		movs	r2, #8
 325 0022 1A60     		str	r2, [r3]
 368:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP1_ISR_REMOVE */
 369:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP2_ISR_REMOVE == 0u)
 370:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_2_VECT_NUM);
 326              		.loc 1 370 0
 327 0024 1F4B     		ldr	r3, .L14
 328 0026 1022     		movs	r2, #16
 329 0028 1A60     		str	r2, [r3]
 371:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP2_ISR_REMOVE */
 372:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP3_ISR_REMOVE == 0u)
 373:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_3_VECT_NUM);
 330              		.loc 1 373 0
 331 002a 1E4B     		ldr	r3, .L14
 332 002c 2022     		movs	r2, #32
 333 002e 1A60     		str	r2, [r3]
 374:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP3_ISR_REMOVE */
 375:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP4_ISR_REMOVE == 0u)
 376:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_4_VECT_NUM);
 377:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP4_ISR_REMOVE */
 378:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP5_ISR_REMOVE == 0u)
 379:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_5_VECT_NUM);
 380:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP5_ISR_REMOVE */
 381:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP6_ISR_REMOVE == 0u)
 382:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_6_VECT_NUM);
 383:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP6_ISR_REMOVE */
 384:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP7_ISR_REMOVE == 0u)
 385:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_7_VECT_NUM);
 386:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP7_ISR_REMOVE */
 387:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP8_ISR_REMOVE == 0u)
 388:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_EP_8_VECT_NUM);
 389:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP8_ISR_REMOVE */
 390:.\Generated_Source\PSoC5/UART.c ****     #if((UART_EP_MM != UART__EP_MANUAL) && (UART_ARB_ISR_REMOVE == 0u))
 391:.\Generated_Source\PSoC5/UART.c ****         /* usb arb interrupt enable */
 392:.\Generated_Source\PSoC5/UART.c ****         UART_ARB_INT_EN_REG = UART_ARB_INT_MASK;
 393:.\Generated_Source\PSoC5/UART.c ****         CyIntEnable(UART_ARB_VECT_NUM);
 394:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 395:.\Generated_Source\PSoC5/UART.c **** 
 396:.\Generated_Source\PSoC5/UART.c ****     /* Arbiter configuration for DMA transfers */
 397:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM != UART__EP_MANUAL)
 398:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAMANUAL)
 399:.\Generated_Source\PSoC5/UART.c ****             UART_ARB_CFG_REG = UART_ARB_CFG_MANUAL_DMA;
 400:.\Generated_Source\PSoC5/UART.c ****         #endif   /*  UART_EP_MM == UART__EP_DMAMANUAL */
 401:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAAUTO)
 402:.\Generated_Source\PSoC5/UART.c ****             /*Set cfg cmplt this rises DMA request when the full configuration is done */
 403:.\Generated_Source\PSoC5/UART.c ****             UART_ARB_CFG_REG = UART_ARB_CFG_AUTO_DMA | UART_ARB_CFG_AUTO_MEM;
 404:.\Generated_Source\PSoC5/UART.c ****             #if(UART_EP_DMA_AUTO_OPT == 0u)
 405:.\Generated_Source\PSoC5/UART.c ****                 /* Init interrupt which handles verification of the successful DMA transaction */
 406:.\Generated_Source\PSoC5/UART.c ****                 UART_EP_DMA_Done_isr_StartEx(&UART_EP_DMA_DONE_ISR);
 407:.\Generated_Source\PSoC5/UART.c ****                 UART_EP17_DMA_Done_SR_InterruptEnable();
 408:.\Generated_Source\PSoC5/UART.c ****                 UART_EP8_DMA_Done_SR_InterruptEnable();
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 14


 409:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_EP_DMA_AUTO_OPT == 0u */
 410:.\Generated_Source\PSoC5/UART.c ****         #endif   /*  UART_EP_MM == UART__EP_DMAAUTO */
 411:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 412:.\Generated_Source\PSoC5/UART.c **** 
 413:.\Generated_Source\PSoC5/UART.c ****     UART_transferState = UART_TRANS_STATE_IDLE;
 334              		.loc 1 413 0
 335 0030 1D4B     		ldr	r3, .L14+4
 336 0032 0022     		movs	r2, #0
 337 0034 1A70     		strb	r2, [r3]
 414:.\Generated_Source\PSoC5/UART.c **** 
 415:.\Generated_Source\PSoC5/UART.c ****     /* USB Locking: Enabled, VRegulator: depend on mode or DWR Voltage configuration*/
 416:.\Generated_Source\PSoC5/UART.c ****     switch(mode)
 338              		.loc 1 416 0
 339 0036 BB79     		ldrb	r3, [r7, #6]	@ zero_extendqisi2
 340 0038 002B     		cmp	r3, #0
 341 003a 02D0     		beq	.L10
 342 003c 012B     		cmp	r3, #1
 343 003e 04D0     		beq	.L11
 344 0040 07E0     		b	.L13
 345              	.L10:
 417:.\Generated_Source\PSoC5/UART.c ****     {
 418:.\Generated_Source\PSoC5/UART.c ****         case UART_3V_OPERATION:
 419:.\Generated_Source\PSoC5/UART.c ****             UART_CR1_REG = UART_CR1_ENABLE_LOCK;
 346              		.loc 1 419 0
 347 0042 1A4B     		ldr	r3, .L14+8
 348 0044 0222     		movs	r2, #2
 349 0046 1A70     		strb	r2, [r3]
 420:.\Generated_Source\PSoC5/UART.c ****             break;
 350              		.loc 1 420 0
 351 0048 07E0     		b	.L12
 352              	.L11:
 421:.\Generated_Source\PSoC5/UART.c ****         case UART_5V_OPERATION:
 422:.\Generated_Source\PSoC5/UART.c ****             UART_CR1_REG = UART_CR1_ENABLE_LOCK | UART_CR1_REG_ENABLE;
 353              		.loc 1 422 0
 354 004a 184B     		ldr	r3, .L14+8
 355 004c 0322     		movs	r2, #3
 356 004e 1A70     		strb	r2, [r3]
 423:.\Generated_Source\PSoC5/UART.c ****             break;
 357              		.loc 1 423 0
 358 0050 03E0     		b	.L12
 359              	.L13:
 424:.\Generated_Source\PSoC5/UART.c ****         default:   /*UART_DWR_VDDD_OPERATION */
 425:.\Generated_Source\PSoC5/UART.c ****             #if(UART_VDDD_MV < UART_3500MV)
 426:.\Generated_Source\PSoC5/UART.c ****                 UART_CR1_REG = UART_CR1_ENABLE_LOCK;
 427:.\Generated_Source\PSoC5/UART.c ****             #else
 428:.\Generated_Source\PSoC5/UART.c ****                 UART_CR1_REG = UART_CR1_ENABLE_LOCK | UART_CR1_REG_ENABLE;
 360              		.loc 1 428 0
 361 0052 164B     		ldr	r3, .L14+8
 362 0054 0322     		movs	r2, #3
 363 0056 1A70     		strb	r2, [r3]
 429:.\Generated_Source\PSoC5/UART.c ****             #endif /*  UART_VDDD_MV < UART_3500MV */
 430:.\Generated_Source\PSoC5/UART.c ****             break;
 364              		.loc 1 430 0
 365 0058 00BF     		nop
 366              	.L12:
 431:.\Generated_Source\PSoC5/UART.c ****     }
 432:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 15


 433:.\Generated_Source\PSoC5/UART.c ****     /* Record the descriptor selection */
 434:.\Generated_Source\PSoC5/UART.c ****     UART_device = device;
 367              		.loc 1 434 0
 368 005a 154B     		ldr	r3, .L14+12
 369 005c FA79     		ldrb	r2, [r7, #7]
 370 005e 1A70     		strb	r2, [r3]
 435:.\Generated_Source\PSoC5/UART.c **** 
 436:.\Generated_Source\PSoC5/UART.c ****     /* Clear all of the component data */
 437:.\Generated_Source\PSoC5/UART.c ****     UART_configuration = 0u;
 371              		.loc 1 437 0
 372 0060 144B     		ldr	r3, .L14+16
 373 0062 0022     		movs	r2, #0
 374 0064 1A70     		strb	r2, [r3]
 438:.\Generated_Source\PSoC5/UART.c ****     UART_interfaceNumber = 0u;
 375              		.loc 1 438 0
 376 0066 144B     		ldr	r3, .L14+20
 377 0068 0022     		movs	r2, #0
 378 006a 1A70     		strb	r2, [r3]
 439:.\Generated_Source\PSoC5/UART.c ****     UART_configurationChanged = 0u;
 379              		.loc 1 439 0
 380 006c 134B     		ldr	r3, .L14+24
 381 006e 0022     		movs	r2, #0
 382 0070 1A70     		strb	r2, [r3]
 440:.\Generated_Source\PSoC5/UART.c ****     UART_deviceAddress  = 0u;
 383              		.loc 1 440 0
 384 0072 134B     		ldr	r3, .L14+28
 385 0074 0022     		movs	r2, #0
 386 0076 1A70     		strb	r2, [r3]
 441:.\Generated_Source\PSoC5/UART.c ****     UART_deviceStatus = 0u;
 387              		.loc 1 441 0
 388 0078 124B     		ldr	r3, .L14+32
 389 007a 0022     		movs	r2, #0
 390 007c 1A70     		strb	r2, [r3]
 442:.\Generated_Source\PSoC5/UART.c **** 
 443:.\Generated_Source\PSoC5/UART.c ****     UART_lastPacketSize = 0u;
 391              		.loc 1 443 0
 392 007e 124B     		ldr	r3, .L14+36
 393 0080 0022     		movs	r2, #0
 394 0082 1A70     		strb	r2, [r3]
 444:.\Generated_Source\PSoC5/UART.c **** 
 445:.\Generated_Source\PSoC5/UART.c ****     /*  ACK Setup, Stall IN/OUT */
 446:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_EP0_CR_PTR, UART_MODE_STALL_IN_OUT);
 395              		.loc 1 446 0
 396 0084 114B     		ldr	r3, .L14+40
 397 0086 0322     		movs	r2, #3
 398 0088 1A70     		strb	r2, [r3]
 447:.\Generated_Source\PSoC5/UART.c **** 
 448:.\Generated_Source\PSoC5/UART.c ****     /* Enable the SIE with an address 0 */
 449:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_CR0_PTR, UART_CR0_ENABLE);
 399              		.loc 1 449 0
 400 008a 114B     		ldr	r3, .L14+44
 401 008c 8022     		movs	r2, #128
 402 008e 1A70     		strb	r2, [r3]
 450:.\Generated_Source\PSoC5/UART.c **** 
 451:.\Generated_Source\PSoC5/UART.c ****     /* Workaround for PSOC5LP */
 452:.\Generated_Source\PSoC5/UART.c ****     CyDelayCycles(1u);
 403              		.loc 1 452 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 16


 404 0090 0120     		movs	r0, #1
 405 0092 FFF7FEFF 		bl	CyDelayCycles
 453:.\Generated_Source\PSoC5/UART.c **** 
 454:.\Generated_Source\PSoC5/UART.c ****     /* Finally, Enable d+ pullup and select iomode to USB mode*/
 455:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_USBIO_CR1_PTR, UART_USBIO_CR1_USBPUEN);
 406              		.loc 1 455 0
 407 0096 0F4B     		ldr	r3, .L14+48
 408 0098 0422     		movs	r2, #4
 409 009a 1A70     		strb	r2, [r3]
 456:.\Generated_Source\PSoC5/UART.c **** }
 410              		.loc 1 456 0
 411 009c 0837     		adds	r7, r7, #8
 412 009e BD46     		mov	sp, r7
 413              		@ sp needed
 414 00a0 80BD     		pop	{r7, pc}
 415              	.L15:
 416 00a2 00BF     		.align	2
 417              	.L14:
 418 00a4 00E100E0 		.word	-536813312
 419 00a8 00000000 		.word	UART_transferState
 420 00ac 09600040 		.word	1073766409
 421 00b0 00000000 		.word	UART_device
 422 00b4 00000000 		.word	UART_configuration
 423 00b8 00000000 		.word	UART_interfaceNumber
 424 00bc 00000000 		.word	UART_configurationChanged
 425 00c0 00000000 		.word	UART_deviceAddress
 426 00c4 00000000 		.word	UART_deviceStatus
 427 00c8 00000000 		.word	UART_lastPacketSize
 428 00cc 28600040 		.word	1073766440
 429 00d0 08600040 		.word	1073766408
 430 00d4 12600040 		.word	1073766418
 431              		.cfi_endproc
 432              	.LFE2:
 433              		.size	UART_InitComponent, .-UART_InitComponent
 434              		.section	.text.UART_ReInitComponent,"ax",%progbits
 435              		.align	2
 436              		.global	UART_ReInitComponent
 437              		.thumb
 438              		.thumb_func
 439              		.type	UART_ReInitComponent, %function
 440              	UART_ReInitComponent:
 441              	.LFB3:
 457:.\Generated_Source\PSoC5/UART.c **** 
 458:.\Generated_Source\PSoC5/UART.c **** 
 459:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 460:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReInitComponent
 461:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 462:.\Generated_Source\PSoC5/UART.c **** *
 463:.\Generated_Source\PSoC5/UART.c **** * Summary:
 464:.\Generated_Source\PSoC5/UART.c **** *  This function reinitialize the component configuration and is
 465:.\Generated_Source\PSoC5/UART.c **** *  intend to be called from the Reset interrupt.
 466:.\Generated_Source\PSoC5/UART.c **** *
 467:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 468:.\Generated_Source\PSoC5/UART.c **** *  None.
 469:.\Generated_Source\PSoC5/UART.c **** *
 470:.\Generated_Source\PSoC5/UART.c **** * Return:
 471:.\Generated_Source\PSoC5/UART.c **** *   None.
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 17


 472:.\Generated_Source\PSoC5/UART.c **** *
 473:.\Generated_Source\PSoC5/UART.c **** * Global variables:
 474:.\Generated_Source\PSoC5/UART.c **** *   UART_device: Contains the device number of the desired device
 475:.\Generated_Source\PSoC5/UART.c **** *        descriptor. The device number can be found in the Device Descriptor Tab
 476:.\Generated_Source\PSoC5/UART.c **** *       of "Configure" dialog, under the settings of desired Device Descriptor,
 477:.\Generated_Source\PSoC5/UART.c **** *       in the "Device Number" field.
 478:.\Generated_Source\PSoC5/UART.c **** *   UART_transferState: This variable used by the communication
 479:.\Generated_Source\PSoC5/UART.c **** *       functions to handle current transfer state. Initialized to
 480:.\Generated_Source\PSoC5/UART.c **** *       TRANS_STATE_IDLE in this API.
 481:.\Generated_Source\PSoC5/UART.c **** *   UART_configuration: Contains current configuration number
 482:.\Generated_Source\PSoC5/UART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 483:.\Generated_Source\PSoC5/UART.c **** *       Initialized to zero in this API.
 484:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceAddress: Contains current device address. This
 485:.\Generated_Source\PSoC5/UART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 486:.\Generated_Source\PSoC5/UART.c **** *      to device with address 0 and then set it to whatever value using
 487:.\Generated_Source\PSoC5/UART.c **** *      SET_ADDRESS request.
 488:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceStatus: initialized to 0.
 489:.\Generated_Source\PSoC5/UART.c **** *       This is two bit variable which contain power status in first bit
 490:.\Generated_Source\PSoC5/UART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 491:.\Generated_Source\PSoC5/UART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 492:.\Generated_Source\PSoC5/UART.c **** *   UART_lastPacketSize initialized to 0;
 493:.\Generated_Source\PSoC5/UART.c **** *
 494:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
 495:.\Generated_Source\PSoC5/UART.c **** *  No.
 496:.\Generated_Source\PSoC5/UART.c **** *
 497:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 498:.\Generated_Source\PSoC5/UART.c **** void UART_ReInitComponent(void) 
 499:.\Generated_Source\PSoC5/UART.c **** {
 442              		.loc 1 499 0
 443              		.cfi_startproc
 444              		@ args = 0, pretend = 0, frame = 0
 445              		@ frame_needed = 1, uses_anonymous_args = 0
 446              		@ link register save eliminated.
 447 0000 80B4     		push	{r7}
 448              		.cfi_def_cfa_offset 4
 449              		.cfi_offset 7, -4
 450 0002 00AF     		add	r7, sp, #0
 451              		.cfi_def_cfa_register 7
 500:.\Generated_Source\PSoC5/UART.c ****     /* Initialize _hidProtocol variable to comply with HID 7.2.6 Set_Protocol
 501:.\Generated_Source\PSoC5/UART.c ****     *  Request: "When initialized, all devices default to report protocol."
 502:.\Generated_Source\PSoC5/UART.c ****     */
 503:.\Generated_Source\PSoC5/UART.c ****     #if defined(UART_ENABLE_HID_CLASS)
 504:.\Generated_Source\PSoC5/UART.c ****         uint8 i;
 505:.\Generated_Source\PSoC5/UART.c **** 
 506:.\Generated_Source\PSoC5/UART.c ****         for (i = 0u; i < UART_MAX_INTERFACES_NUMBER; i++)
 507:.\Generated_Source\PSoC5/UART.c ****         {
 508:.\Generated_Source\PSoC5/UART.c ****             UART_hidProtocol[i] = UART_PROTOCOL_REPORT;
 509:.\Generated_Source\PSoC5/UART.c ****         }
 510:.\Generated_Source\PSoC5/UART.c ****     #endif /* UART_ENABLE_HID_CLASS */
 511:.\Generated_Source\PSoC5/UART.c **** 
 512:.\Generated_Source\PSoC5/UART.c ****     UART_transferState = UART_TRANS_STATE_IDLE;
 452              		.loc 1 512 0
 453 0004 0F4B     		ldr	r3, .L17
 454 0006 0022     		movs	r2, #0
 455 0008 1A70     		strb	r2, [r3]
 513:.\Generated_Source\PSoC5/UART.c **** 
 514:.\Generated_Source\PSoC5/UART.c ****     /* Clear all of the component data */
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 18


 515:.\Generated_Source\PSoC5/UART.c ****     UART_configuration = 0u;
 456              		.loc 1 515 0
 457 000a 0F4B     		ldr	r3, .L17+4
 458 000c 0022     		movs	r2, #0
 459 000e 1A70     		strb	r2, [r3]
 516:.\Generated_Source\PSoC5/UART.c ****     UART_interfaceNumber = 0u;
 460              		.loc 1 516 0
 461 0010 0E4B     		ldr	r3, .L17+8
 462 0012 0022     		movs	r2, #0
 463 0014 1A70     		strb	r2, [r3]
 517:.\Generated_Source\PSoC5/UART.c ****     UART_configurationChanged = 0u;
 464              		.loc 1 517 0
 465 0016 0E4B     		ldr	r3, .L17+12
 466 0018 0022     		movs	r2, #0
 467 001a 1A70     		strb	r2, [r3]
 518:.\Generated_Source\PSoC5/UART.c ****     UART_deviceAddress  = 0u;
 468              		.loc 1 518 0
 469 001c 0D4B     		ldr	r3, .L17+16
 470 001e 0022     		movs	r2, #0
 471 0020 1A70     		strb	r2, [r3]
 519:.\Generated_Source\PSoC5/UART.c ****     UART_deviceStatus = 0u;
 472              		.loc 1 519 0
 473 0022 0D4B     		ldr	r3, .L17+20
 474 0024 0022     		movs	r2, #0
 475 0026 1A70     		strb	r2, [r3]
 520:.\Generated_Source\PSoC5/UART.c **** 
 521:.\Generated_Source\PSoC5/UART.c ****     UART_lastPacketSize = 0u;
 476              		.loc 1 521 0
 477 0028 0C4B     		ldr	r3, .L17+24
 478 002a 0022     		movs	r2, #0
 479 002c 1A70     		strb	r2, [r3]
 522:.\Generated_Source\PSoC5/UART.c **** 
 523:.\Generated_Source\PSoC5/UART.c **** 
 524:.\Generated_Source\PSoC5/UART.c ****     /*  ACK Setup, Stall IN/OUT */
 525:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_EP0_CR_PTR, UART_MODE_STALL_IN_OUT);
 480              		.loc 1 525 0
 481 002e 0C4B     		ldr	r3, .L17+28
 482 0030 0322     		movs	r2, #3
 483 0032 1A70     		strb	r2, [r3]
 526:.\Generated_Source\PSoC5/UART.c **** 
 527:.\Generated_Source\PSoC5/UART.c ****     /* Enable the SIE with an address 0 */
 528:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_CR0_PTR, UART_CR0_ENABLE);
 484              		.loc 1 528 0
 485 0034 0B4B     		ldr	r3, .L17+32
 486 0036 8022     		movs	r2, #128
 487 0038 1A70     		strb	r2, [r3]
 529:.\Generated_Source\PSoC5/UART.c **** 
 530:.\Generated_Source\PSoC5/UART.c **** }
 488              		.loc 1 530 0
 489 003a BD46     		mov	sp, r7
 490              		@ sp needed
 491 003c 5DF8047B 		ldr	r7, [sp], #4
 492 0040 7047     		bx	lr
 493              	.L18:
 494 0042 00BF     		.align	2
 495              	.L17:
 496 0044 00000000 		.word	UART_transferState
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 19


 497 0048 00000000 		.word	UART_configuration
 498 004c 00000000 		.word	UART_interfaceNumber
 499 0050 00000000 		.word	UART_configurationChanged
 500 0054 00000000 		.word	UART_deviceAddress
 501 0058 00000000 		.word	UART_deviceStatus
 502 005c 00000000 		.word	UART_lastPacketSize
 503 0060 28600040 		.word	1073766440
 504 0064 08600040 		.word	1073766408
 505              		.cfi_endproc
 506              	.LFE3:
 507              		.size	UART_ReInitComponent, .-UART_ReInitComponent
 508              		.section	.text.UART_Stop,"ax",%progbits
 509              		.align	2
 510              		.global	UART_Stop
 511              		.thumb
 512              		.thumb_func
 513              		.type	UART_Stop, %function
 514              	UART_Stop:
 515              	.LFB4:
 531:.\Generated_Source\PSoC5/UART.c **** 
 532:.\Generated_Source\PSoC5/UART.c **** 
 533:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 534:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Stop
 535:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 536:.\Generated_Source\PSoC5/UART.c **** *
 537:.\Generated_Source\PSoC5/UART.c **** * Summary:
 538:.\Generated_Source\PSoC5/UART.c **** *  This function shuts down the USB function including to release
 539:.\Generated_Source\PSoC5/UART.c **** *  the D+ Pullup and disabling the SIE.
 540:.\Generated_Source\PSoC5/UART.c **** *
 541:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 542:.\Generated_Source\PSoC5/UART.c **** *  None.
 543:.\Generated_Source\PSoC5/UART.c **** *
 544:.\Generated_Source\PSoC5/UART.c **** * Return:
 545:.\Generated_Source\PSoC5/UART.c **** *  None.
 546:.\Generated_Source\PSoC5/UART.c **** *
 547:.\Generated_Source\PSoC5/UART.c **** * Global variables:
 548:.\Generated_Source\PSoC5/UART.c **** *   UART_configuration: Contains current configuration number
 549:.\Generated_Source\PSoC5/UART.c **** *       which is set by the Host using SET_CONFIGURATION request.
 550:.\Generated_Source\PSoC5/UART.c **** *       Initialized to zero in this API.
 551:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceAddress: Contains current device address. This
 552:.\Generated_Source\PSoC5/UART.c **** *       variable is initialized to zero in this API. Host starts to communicate
 553:.\Generated_Source\PSoC5/UART.c **** *      to device with address 0 and then set it to whatever value using
 554:.\Generated_Source\PSoC5/UART.c **** *      SET_ADDRESS request.
 555:.\Generated_Source\PSoC5/UART.c **** *   UART_deviceStatus: initialized to 0.
 556:.\Generated_Source\PSoC5/UART.c **** *       This is two bit variable which contain power status in first bit
 557:.\Generated_Source\PSoC5/UART.c **** *       (DEVICE_STATUS_BUS_POWERED or DEVICE_STATUS_SELF_POWERED) and remote
 558:.\Generated_Source\PSoC5/UART.c **** *       wakeup status (DEVICE_STATUS_REMOTE_WAKEUP) in second bit.
 559:.\Generated_Source\PSoC5/UART.c **** *   UART_configurationChanged: This variable is set to one after
 560:.\Generated_Source\PSoC5/UART.c **** *       SET_CONFIGURATION request and cleared in this function.
 561:.\Generated_Source\PSoC5/UART.c **** *   UART_intiVar variable is set to zero
 562:.\Generated_Source\PSoC5/UART.c **** *
 563:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 564:.\Generated_Source\PSoC5/UART.c **** void UART_Stop(void) 
 565:.\Generated_Source\PSoC5/UART.c **** {
 516              		.loc 1 565 0
 517              		.cfi_startproc
 518              		@ args = 0, pretend = 0, frame = 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 20


 519              		@ frame_needed = 1, uses_anonymous_args = 0
 520              		@ link register save eliminated.
 521 0000 80B4     		push	{r7}
 522              		.cfi_def_cfa_offset 4
 523              		.cfi_offset 7, -4
 524 0002 00AF     		add	r7, sp, #0
 525              		.cfi_def_cfa_register 7
 566:.\Generated_Source\PSoC5/UART.c **** 
 567:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM != UART__EP_MANUAL)
 568:.\Generated_Source\PSoC5/UART.c ****         UART_Stop_DMA(UART_MAX_EP);     /* Stop all DMAs */
 569:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP_MM != UART__EP_MANUAL */
 570:.\Generated_Source\PSoC5/UART.c **** 
 571:.\Generated_Source\PSoC5/UART.c ****     /* Disable the SIE */
 572:.\Generated_Source\PSoC5/UART.c ****     UART_CR0_REG &= (uint8)(~UART_CR0_ENABLE);
 526              		.loc 1 572 0
 527 0004 234B     		ldr	r3, .L20
 528 0006 234A     		ldr	r2, .L20
 529 0008 1278     		ldrb	r2, [r2]
 530 000a D2B2     		uxtb	r2, r2
 531 000c 02F07F02 		and	r2, r2, #127
 532 0010 D2B2     		uxtb	r2, r2
 533 0012 1A70     		strb	r2, [r3]
 573:.\Generated_Source\PSoC5/UART.c ****     /* Disable the d+ pullup */
 574:.\Generated_Source\PSoC5/UART.c ****     UART_USBIO_CR1_REG &= (uint8)(~UART_USBIO_CR1_USBPUEN);
 534              		.loc 1 574 0
 535 0014 204B     		ldr	r3, .L20+4
 536 0016 204A     		ldr	r2, .L20+4
 537 0018 1278     		ldrb	r2, [r2]
 538 001a D2B2     		uxtb	r2, r2
 539 001c 22F00402 		bic	r2, r2, #4
 540 0020 D2B2     		uxtb	r2, r2
 541 0022 1A70     		strb	r2, [r3]
 575:.\Generated_Source\PSoC5/UART.c ****     /* Disable USB in ACT PM */
 576:.\Generated_Source\PSoC5/UART.c ****     UART_PM_ACT_CFG_REG &= (uint8)(~UART_PM_ACT_EN_FSUSB);
 542              		.loc 1 576 0
 543 0024 1D4B     		ldr	r3, .L20+8
 544 0026 1D4A     		ldr	r2, .L20+8
 545 0028 1278     		ldrb	r2, [r2]
 546 002a D2B2     		uxtb	r2, r2
 547 002c 22F00102 		bic	r2, r2, #1
 548 0030 D2B2     		uxtb	r2, r2
 549 0032 1A70     		strb	r2, [r3]
 577:.\Generated_Source\PSoC5/UART.c ****     /* Disable USB block for Standby Power Mode */
 578:.\Generated_Source\PSoC5/UART.c ****     UART_PM_STBY_CFG_REG &= (uint8)(~UART_PM_STBY_EN_FSUSB);
 550              		.loc 1 578 0
 551 0034 1A4B     		ldr	r3, .L20+12
 552 0036 1A4A     		ldr	r2, .L20+12
 553 0038 1278     		ldrb	r2, [r2]
 554 003a D2B2     		uxtb	r2, r2
 555 003c 22F00102 		bic	r2, r2, #1
 556 0040 D2B2     		uxtb	r2, r2
 557 0042 1A70     		strb	r2, [r3]
 579:.\Generated_Source\PSoC5/UART.c **** 
 580:.\Generated_Source\PSoC5/UART.c ****     /* Disable the reset and EP interrupts */
 581:.\Generated_Source\PSoC5/UART.c ****     CyIntDisable(UART_BUS_RESET_VECT_NUM);
 558              		.loc 1 581 0
 559 0044 174B     		ldr	r3, .L20+16
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 21


 560 0046 4FF40002 		mov	r2, #8388608
 561 004a 1A60     		str	r2, [r3]
 582:.\Generated_Source\PSoC5/UART.c ****     CyIntDisable(UART_EP_0_VECT_NUM);
 562              		.loc 1 582 0
 563 004c 154B     		ldr	r3, .L20+16
 564 004e 4FF08072 		mov	r2, #16777216
 565 0052 1A60     		str	r2, [r3]
 583:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP1_ISR_REMOVE == 0u)
 584:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_1_VECT_NUM);
 566              		.loc 1 584 0
 567 0054 134B     		ldr	r3, .L20+16
 568 0056 0822     		movs	r2, #8
 569 0058 1A60     		str	r2, [r3]
 585:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP1_ISR_REMOVE */
 586:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP2_ISR_REMOVE == 0u)
 587:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_2_VECT_NUM);
 570              		.loc 1 587 0
 571 005a 124B     		ldr	r3, .L20+16
 572 005c 1022     		movs	r2, #16
 573 005e 1A60     		str	r2, [r3]
 588:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP2_ISR_REMOVE */
 589:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP3_ISR_REMOVE == 0u)
 590:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_3_VECT_NUM);
 574              		.loc 1 590 0
 575 0060 104B     		ldr	r3, .L20+16
 576 0062 2022     		movs	r2, #32
 577 0064 1A60     		str	r2, [r3]
 591:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP3_ISR_REMOVE */
 592:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP4_ISR_REMOVE == 0u)
 593:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_4_VECT_NUM);
 594:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP4_ISR_REMOVE */
 595:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP5_ISR_REMOVE == 0u)
 596:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_5_VECT_NUM);
 597:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP5_ISR_REMOVE */
 598:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP6_ISR_REMOVE == 0u)
 599:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_6_VECT_NUM);
 600:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP6_ISR_REMOVE */
 601:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP7_ISR_REMOVE == 0u)
 602:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_7_VECT_NUM);
 603:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP7_ISR_REMOVE */
 604:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP8_ISR_REMOVE == 0u)
 605:.\Generated_Source\PSoC5/UART.c ****         CyIntDisable(UART_EP_8_VECT_NUM);
 606:.\Generated_Source\PSoC5/UART.c ****     #endif   /*  UART_EP8_ISR_REMOVE */
 607:.\Generated_Source\PSoC5/UART.c **** 
 608:.\Generated_Source\PSoC5/UART.c ****     /* Clear all of the component data */
 609:.\Generated_Source\PSoC5/UART.c ****     UART_configuration = 0u;
 578              		.loc 1 609 0
 579 0066 104B     		ldr	r3, .L20+20
 580 0068 0022     		movs	r2, #0
 581 006a 1A70     		strb	r2, [r3]
 610:.\Generated_Source\PSoC5/UART.c ****     UART_interfaceNumber = 0u;
 582              		.loc 1 610 0
 583 006c 0F4B     		ldr	r3, .L20+24
 584 006e 0022     		movs	r2, #0
 585 0070 1A70     		strb	r2, [r3]
 611:.\Generated_Source\PSoC5/UART.c ****     UART_configurationChanged = 0u;
 586              		.loc 1 611 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 22


 587 0072 0F4B     		ldr	r3, .L20+28
 588 0074 0022     		movs	r2, #0
 589 0076 1A70     		strb	r2, [r3]
 612:.\Generated_Source\PSoC5/UART.c ****     UART_deviceAddress  = 0u;
 590              		.loc 1 612 0
 591 0078 0E4B     		ldr	r3, .L20+32
 592 007a 0022     		movs	r2, #0
 593 007c 1A70     		strb	r2, [r3]
 613:.\Generated_Source\PSoC5/UART.c ****     UART_deviceStatus = 0u;
 594              		.loc 1 613 0
 595 007e 0E4B     		ldr	r3, .L20+36
 596 0080 0022     		movs	r2, #0
 597 0082 1A70     		strb	r2, [r3]
 614:.\Generated_Source\PSoC5/UART.c ****     UART_initVar = 0u;
 598              		.loc 1 614 0
 599 0084 0D4B     		ldr	r3, .L20+40
 600 0086 0022     		movs	r2, #0
 601 0088 1A70     		strb	r2, [r3]
 615:.\Generated_Source\PSoC5/UART.c **** 
 616:.\Generated_Source\PSoC5/UART.c **** }
 602              		.loc 1 616 0
 603 008a BD46     		mov	sp, r7
 604              		@ sp needed
 605 008c 5DF8047B 		ldr	r7, [sp], #4
 606 0090 7047     		bx	lr
 607              	.L21:
 608 0092 00BF     		.align	2
 609              	.L20:
 610 0094 08600040 		.word	1073766408
 611 0098 12600040 		.word	1073766418
 612 009c A5430040 		.word	1073759141
 613 00a0 B5430040 		.word	1073759157
 614 00a4 80E100E0 		.word	-536813184
 615 00a8 00000000 		.word	UART_configuration
 616 00ac 00000000 		.word	UART_interfaceNumber
 617 00b0 00000000 		.word	UART_configurationChanged
 618 00b4 00000000 		.word	UART_deviceAddress
 619 00b8 00000000 		.word	UART_deviceStatus
 620 00bc 00000000 		.word	UART_initVar
 621              		.cfi_endproc
 622              	.LFE4:
 623              		.size	UART_Stop, .-UART_Stop
 624              		.section	.text.UART_CheckActivity,"ax",%progbits
 625              		.align	2
 626              		.global	UART_CheckActivity
 627              		.thumb
 628              		.thumb_func
 629              		.type	UART_CheckActivity, %function
 630              	UART_CheckActivity:
 631              	.LFB5:
 617:.\Generated_Source\PSoC5/UART.c **** 
 618:.\Generated_Source\PSoC5/UART.c **** 
 619:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 620:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_CheckActivity
 621:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 622:.\Generated_Source\PSoC5/UART.c **** *
 623:.\Generated_Source\PSoC5/UART.c **** * Summary:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 23


 624:.\Generated_Source\PSoC5/UART.c **** *  Returns the activity status of the bus.  Clears the status hardware to
 625:.\Generated_Source\PSoC5/UART.c **** *  provide fresh activity status on the next call of this routine.
 626:.\Generated_Source\PSoC5/UART.c **** *
 627:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 628:.\Generated_Source\PSoC5/UART.c **** *  None.
 629:.\Generated_Source\PSoC5/UART.c **** *
 630:.\Generated_Source\PSoC5/UART.c **** * Return:
 631:.\Generated_Source\PSoC5/UART.c **** *  1 - If bus activity was detected since the last call to this function
 632:.\Generated_Source\PSoC5/UART.c **** *  0 - If bus activity not was detected since the last call to this function
 633:.\Generated_Source\PSoC5/UART.c **** *
 634:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 635:.\Generated_Source\PSoC5/UART.c **** uint8 UART_CheckActivity(void) 
 636:.\Generated_Source\PSoC5/UART.c **** {
 632              		.loc 1 636 0
 633              		.cfi_startproc
 634              		@ args = 0, pretend = 0, frame = 8
 635              		@ frame_needed = 1, uses_anonymous_args = 0
 636              		@ link register save eliminated.
 637 0000 80B4     		push	{r7}
 638              		.cfi_def_cfa_offset 4
 639              		.cfi_offset 7, -4
 640 0002 83B0     		sub	sp, sp, #12
 641              		.cfi_def_cfa_offset 16
 642 0004 00AF     		add	r7, sp, #0
 643              		.cfi_def_cfa_register 7
 637:.\Generated_Source\PSoC5/UART.c ****     uint8 r;
 638:.\Generated_Source\PSoC5/UART.c **** 
 639:.\Generated_Source\PSoC5/UART.c ****     r = CY_GET_REG8(UART_CR1_PTR);
 644              		.loc 1 639 0
 645 0006 0A4B     		ldr	r3, .L24
 646 0008 1B78     		ldrb	r3, [r3]
 647 000a FB71     		strb	r3, [r7, #7]
 640:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_CR1_PTR, (r & ((uint8)(~UART_CR1_BUS_ACTIVITY))));
 648              		.loc 1 640 0
 649 000c 084B     		ldr	r3, .L24
 650 000e FA79     		ldrb	r2, [r7, #7]
 651 0010 22F00402 		bic	r2, r2, #4
 652 0014 D2B2     		uxtb	r2, r2
 653 0016 1A70     		strb	r2, [r3]
 641:.\Generated_Source\PSoC5/UART.c **** 
 642:.\Generated_Source\PSoC5/UART.c ****     return((r & UART_CR1_BUS_ACTIVITY) >> UART_CR1_BUS_ACTIVITY_SHIFT);
 654              		.loc 1 642 0
 655 0018 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 656 001a 03F00403 		and	r3, r3, #4
 657 001e 9B10     		asrs	r3, r3, #2
 658 0020 DBB2     		uxtb	r3, r3
 643:.\Generated_Source\PSoC5/UART.c **** }
 659              		.loc 1 643 0
 660 0022 1846     		mov	r0, r3
 661 0024 0C37     		adds	r7, r7, #12
 662 0026 BD46     		mov	sp, r7
 663              		@ sp needed
 664 0028 5DF8047B 		ldr	r7, [sp], #4
 665 002c 7047     		bx	lr
 666              	.L25:
 667 002e 00BF     		.align	2
 668              	.L24:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 24


 669 0030 09600040 		.word	1073766409
 670              		.cfi_endproc
 671              	.LFE5:
 672              		.size	UART_CheckActivity, .-UART_CheckActivity
 673              		.section	.text.UART_GetConfiguration,"ax",%progbits
 674              		.align	2
 675              		.global	UART_GetConfiguration
 676              		.thumb
 677              		.thumb_func
 678              		.type	UART_GetConfiguration, %function
 679              	UART_GetConfiguration:
 680              	.LFB6:
 644:.\Generated_Source\PSoC5/UART.c **** 
 645:.\Generated_Source\PSoC5/UART.c **** 
 646:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 647:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_GetConfiguration
 648:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 649:.\Generated_Source\PSoC5/UART.c **** *
 650:.\Generated_Source\PSoC5/UART.c **** * Summary:
 651:.\Generated_Source\PSoC5/UART.c **** *  Returns the current configuration setting
 652:.\Generated_Source\PSoC5/UART.c **** *
 653:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 654:.\Generated_Source\PSoC5/UART.c **** *  None.
 655:.\Generated_Source\PSoC5/UART.c **** *
 656:.\Generated_Source\PSoC5/UART.c **** * Return:
 657:.\Generated_Source\PSoC5/UART.c **** *  configuration.
 658:.\Generated_Source\PSoC5/UART.c **** *
 659:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 660:.\Generated_Source\PSoC5/UART.c **** uint8 UART_GetConfiguration(void) 
 661:.\Generated_Source\PSoC5/UART.c **** {
 681              		.loc 1 661 0
 682              		.cfi_startproc
 683              		@ args = 0, pretend = 0, frame = 0
 684              		@ frame_needed = 1, uses_anonymous_args = 0
 685              		@ link register save eliminated.
 686 0000 80B4     		push	{r7}
 687              		.cfi_def_cfa_offset 4
 688              		.cfi_offset 7, -4
 689 0002 00AF     		add	r7, sp, #0
 690              		.cfi_def_cfa_register 7
 662:.\Generated_Source\PSoC5/UART.c ****     return(UART_configuration);
 691              		.loc 1 662 0
 692 0004 034B     		ldr	r3, .L28
 693 0006 1B78     		ldrb	r3, [r3]
 694 0008 DBB2     		uxtb	r3, r3
 663:.\Generated_Source\PSoC5/UART.c **** }
 695              		.loc 1 663 0
 696 000a 1846     		mov	r0, r3
 697 000c BD46     		mov	sp, r7
 698              		@ sp needed
 699 000e 5DF8047B 		ldr	r7, [sp], #4
 700 0012 7047     		bx	lr
 701              	.L29:
 702              		.align	2
 703              	.L28:
 704 0014 00000000 		.word	UART_configuration
 705              		.cfi_endproc
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 25


 706              	.LFE6:
 707              		.size	UART_GetConfiguration, .-UART_GetConfiguration
 708              		.section	.text.UART_IsConfigurationChanged,"ax",%progbits
 709              		.align	2
 710              		.global	UART_IsConfigurationChanged
 711              		.thumb
 712              		.thumb_func
 713              		.type	UART_IsConfigurationChanged, %function
 714              	UART_IsConfigurationChanged:
 715              	.LFB7:
 664:.\Generated_Source\PSoC5/UART.c **** 
 665:.\Generated_Source\PSoC5/UART.c **** 
 666:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 667:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_IsConfigurationChanged
 668:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 669:.\Generated_Source\PSoC5/UART.c **** *
 670:.\Generated_Source\PSoC5/UART.c **** * Summary:
 671:.\Generated_Source\PSoC5/UART.c **** *  Returns the clear on read configuration state. It is usefull when PC send
 672:.\Generated_Source\PSoC5/UART.c **** *  double SET_CONFIGURATION request with same configuration number.
 673:.\Generated_Source\PSoC5/UART.c **** *
 674:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 675:.\Generated_Source\PSoC5/UART.c **** *  None.
 676:.\Generated_Source\PSoC5/UART.c **** *
 677:.\Generated_Source\PSoC5/UART.c **** * Return:
 678:.\Generated_Source\PSoC5/UART.c **** *  Not zero value when new configuration has been changed, otherwise zero is
 679:.\Generated_Source\PSoC5/UART.c **** *  returned.
 680:.\Generated_Source\PSoC5/UART.c **** *
 681:.\Generated_Source\PSoC5/UART.c **** * Global variables:
 682:.\Generated_Source\PSoC5/UART.c **** *   UART_configurationChanged: This variable is set to one after
 683:.\Generated_Source\PSoC5/UART.c **** *       SET_CONFIGURATION request and cleared in this function.
 684:.\Generated_Source\PSoC5/UART.c **** *
 685:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 686:.\Generated_Source\PSoC5/UART.c **** uint8 UART_IsConfigurationChanged(void) 
 687:.\Generated_Source\PSoC5/UART.c **** {
 716              		.loc 1 687 0
 717              		.cfi_startproc
 718              		@ args = 0, pretend = 0, frame = 8
 719              		@ frame_needed = 1, uses_anonymous_args = 0
 720              		@ link register save eliminated.
 721 0000 80B4     		push	{r7}
 722              		.cfi_def_cfa_offset 4
 723              		.cfi_offset 7, -4
 724 0002 83B0     		sub	sp, sp, #12
 725              		.cfi_def_cfa_offset 16
 726 0004 00AF     		add	r7, sp, #0
 727              		.cfi_def_cfa_register 7
 688:.\Generated_Source\PSoC5/UART.c ****     uint8 res = 0u;
 728              		.loc 1 688 0
 729 0006 0023     		movs	r3, #0
 730 0008 FB71     		strb	r3, [r7, #7]
 689:.\Generated_Source\PSoC5/UART.c **** 
 690:.\Generated_Source\PSoC5/UART.c ****     if(UART_configurationChanged != 0u)
 731              		.loc 1 690 0
 732 000a 094B     		ldr	r3, .L33
 733 000c 1B78     		ldrb	r3, [r3]
 734 000e DBB2     		uxtb	r3, r3
 735 0010 002B     		cmp	r3, #0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 26


 736 0012 05D0     		beq	.L31
 691:.\Generated_Source\PSoC5/UART.c ****     {
 692:.\Generated_Source\PSoC5/UART.c ****         res = UART_configurationChanged;
 737              		.loc 1 692 0
 738 0014 064B     		ldr	r3, .L33
 739 0016 1B78     		ldrb	r3, [r3]
 740 0018 FB71     		strb	r3, [r7, #7]
 693:.\Generated_Source\PSoC5/UART.c ****         UART_configurationChanged = 0u;
 741              		.loc 1 693 0
 742 001a 054B     		ldr	r3, .L33
 743 001c 0022     		movs	r2, #0
 744 001e 1A70     		strb	r2, [r3]
 745              	.L31:
 694:.\Generated_Source\PSoC5/UART.c ****     }
 695:.\Generated_Source\PSoC5/UART.c **** 
 696:.\Generated_Source\PSoC5/UART.c ****     return(res);
 746              		.loc 1 696 0
 747 0020 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 697:.\Generated_Source\PSoC5/UART.c **** }
 748              		.loc 1 697 0
 749 0022 1846     		mov	r0, r3
 750 0024 0C37     		adds	r7, r7, #12
 751 0026 BD46     		mov	sp, r7
 752              		@ sp needed
 753 0028 5DF8047B 		ldr	r7, [sp], #4
 754 002c 7047     		bx	lr
 755              	.L34:
 756 002e 00BF     		.align	2
 757              	.L33:
 758 0030 00000000 		.word	UART_configurationChanged
 759              		.cfi_endproc
 760              	.LFE7:
 761              		.size	UART_IsConfigurationChanged, .-UART_IsConfigurationChanged
 762              		.section	.text.UART_GetInterfaceSetting,"ax",%progbits
 763              		.align	2
 764              		.global	UART_GetInterfaceSetting
 765              		.thumb
 766              		.thumb_func
 767              		.type	UART_GetInterfaceSetting, %function
 768              	UART_GetInterfaceSetting:
 769              	.LFB8:
 698:.\Generated_Source\PSoC5/UART.c **** 
 699:.\Generated_Source\PSoC5/UART.c **** 
 700:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 701:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_GetInterfaceSetting
 702:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 703:.\Generated_Source\PSoC5/UART.c **** *
 704:.\Generated_Source\PSoC5/UART.c **** * Summary:
 705:.\Generated_Source\PSoC5/UART.c **** *  Returns the alternate setting from current interface
 706:.\Generated_Source\PSoC5/UART.c **** *
 707:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 708:.\Generated_Source\PSoC5/UART.c **** *  uint8 interfaceNumber, interface number
 709:.\Generated_Source\PSoC5/UART.c **** *
 710:.\Generated_Source\PSoC5/UART.c **** * Return:
 711:.\Generated_Source\PSoC5/UART.c **** *  Alternate setting.
 712:.\Generated_Source\PSoC5/UART.c **** *
 713:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 27


 714:.\Generated_Source\PSoC5/UART.c **** uint8  UART_GetInterfaceSetting(uint8 interfaceNumber)
 715:.\Generated_Source\PSoC5/UART.c ****                                                     
 716:.\Generated_Source\PSoC5/UART.c **** {
 770              		.loc 1 716 0
 771              		.cfi_startproc
 772              		@ args = 0, pretend = 0, frame = 8
 773              		@ frame_needed = 1, uses_anonymous_args = 0
 774              		@ link register save eliminated.
 775 0000 80B4     		push	{r7}
 776              		.cfi_def_cfa_offset 4
 777              		.cfi_offset 7, -4
 778 0002 83B0     		sub	sp, sp, #12
 779              		.cfi_def_cfa_offset 16
 780 0004 00AF     		add	r7, sp, #0
 781              		.cfi_def_cfa_register 7
 782 0006 0346     		mov	r3, r0
 783 0008 FB71     		strb	r3, [r7, #7]
 717:.\Generated_Source\PSoC5/UART.c ****     return(UART_interfaceSetting[interfaceNumber]);
 784              		.loc 1 717 0
 785 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 786 000c 044A     		ldr	r2, .L37
 787 000e D35C     		ldrb	r3, [r2, r3]
 788 0010 DBB2     		uxtb	r3, r3
 718:.\Generated_Source\PSoC5/UART.c **** }
 789              		.loc 1 718 0
 790 0012 1846     		mov	r0, r3
 791 0014 0C37     		adds	r7, r7, #12
 792 0016 BD46     		mov	sp, r7
 793              		@ sp needed
 794 0018 5DF8047B 		ldr	r7, [sp], #4
 795 001c 7047     		bx	lr
 796              	.L38:
 797 001e 00BF     		.align	2
 798              	.L37:
 799 0020 00000000 		.word	UART_interfaceSetting
 800              		.cfi_endproc
 801              	.LFE8:
 802              		.size	UART_GetInterfaceSetting, .-UART_GetInterfaceSetting
 803              		.section	.text.UART_GetEPState,"ax",%progbits
 804              		.align	2
 805              		.global	UART_GetEPState
 806              		.thumb
 807              		.thumb_func
 808              		.type	UART_GetEPState, %function
 809              	UART_GetEPState:
 810              	.LFB9:
 719:.\Generated_Source\PSoC5/UART.c **** 
 720:.\Generated_Source\PSoC5/UART.c **** 
 721:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 722:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_GetEPState
 723:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 724:.\Generated_Source\PSoC5/UART.c **** *
 725:.\Generated_Source\PSoC5/UART.c **** * Summary:
 726:.\Generated_Source\PSoC5/UART.c **** *  Returned the state of the requested endpoint.
 727:.\Generated_Source\PSoC5/UART.c **** *
 728:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 729:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Endpoint Number
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 28


 730:.\Generated_Source\PSoC5/UART.c **** *
 731:.\Generated_Source\PSoC5/UART.c **** * Return:
 732:.\Generated_Source\PSoC5/UART.c **** *  State of the requested endpoint.
 733:.\Generated_Source\PSoC5/UART.c **** *
 734:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 735:.\Generated_Source\PSoC5/UART.c **** uint8 UART_GetEPState(uint8 epNumber) 
 736:.\Generated_Source\PSoC5/UART.c **** {
 811              		.loc 1 736 0
 812              		.cfi_startproc
 813              		@ args = 0, pretend = 0, frame = 8
 814              		@ frame_needed = 1, uses_anonymous_args = 0
 815              		@ link register save eliminated.
 816 0000 80B4     		push	{r7}
 817              		.cfi_def_cfa_offset 4
 818              		.cfi_offset 7, -4
 819 0002 83B0     		sub	sp, sp, #12
 820              		.cfi_def_cfa_offset 16
 821 0004 00AF     		add	r7, sp, #0
 822              		.cfi_def_cfa_register 7
 823 0006 0346     		mov	r3, r0
 824 0008 FB71     		strb	r3, [r7, #7]
 737:.\Generated_Source\PSoC5/UART.c ****     return(UART_EP[epNumber].apiEpState);
 825              		.loc 1 737 0
 826 000a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 827 000c 0649     		ldr	r1, .L41
 828 000e 1346     		mov	r3, r2
 829 0010 5B00     		lsls	r3, r3, #1
 830 0012 1344     		add	r3, r3, r2
 831 0014 9B00     		lsls	r3, r3, #2
 832 0016 0B44     		add	r3, r3, r1
 833 0018 5B78     		ldrb	r3, [r3, #1]
 834 001a DBB2     		uxtb	r3, r3
 738:.\Generated_Source\PSoC5/UART.c **** }
 835              		.loc 1 738 0
 836 001c 1846     		mov	r0, r3
 837 001e 0C37     		adds	r7, r7, #12
 838 0020 BD46     		mov	sp, r7
 839              		@ sp needed
 840 0022 5DF8047B 		ldr	r7, [sp], #4
 841 0026 7047     		bx	lr
 842              	.L42:
 843              		.align	2
 844              	.L41:
 845 0028 00000000 		.word	UART_EP
 846              		.cfi_endproc
 847              	.LFE9:
 848              		.size	UART_GetEPState, .-UART_GetEPState
 849              		.section	.text.UART_GetEPCount,"ax",%progbits
 850              		.align	2
 851              		.global	UART_GetEPCount
 852              		.thumb
 853              		.thumb_func
 854              		.type	UART_GetEPCount, %function
 855              	UART_GetEPCount:
 856              	.LFB10:
 739:.\Generated_Source\PSoC5/UART.c **** 
 740:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 29


 741:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 742:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_GetEPCount
 743:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 744:.\Generated_Source\PSoC5/UART.c **** *
 745:.\Generated_Source\PSoC5/UART.c **** * Summary:
 746:.\Generated_Source\PSoC5/UART.c **** *  This function supports Data Endpoints only(EP1-EP8).
 747:.\Generated_Source\PSoC5/UART.c **** *  Returns the transfer count for the requested endpoint.  The value from
 748:.\Generated_Source\PSoC5/UART.c **** *  the count registers includes 2 counts for the two byte checksum of the
 749:.\Generated_Source\PSoC5/UART.c **** *  packet.  This function subtracts the two counts.
 750:.\Generated_Source\PSoC5/UART.c **** *
 751:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 752:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Data Endpoint Number.
 753:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
 754:.\Generated_Source\PSoC5/UART.c **** *
 755:.\Generated_Source\PSoC5/UART.c **** * Return:
 756:.\Generated_Source\PSoC5/UART.c **** *  Returns the current byte count from the specified endpoint or 0 for an
 757:.\Generated_Source\PSoC5/UART.c **** *  invalid endpoint.
 758:.\Generated_Source\PSoC5/UART.c **** *
 759:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
 760:.\Generated_Source\PSoC5/UART.c **** uint16 UART_GetEPCount(uint8 epNumber) 
 761:.\Generated_Source\PSoC5/UART.c **** {
 857              		.loc 1 761 0
 858              		.cfi_startproc
 859              		@ args = 0, pretend = 0, frame = 16
 860              		@ frame_needed = 1, uses_anonymous_args = 0
 861              		@ link register save eliminated.
 862 0000 80B4     		push	{r7}
 863              		.cfi_def_cfa_offset 4
 864              		.cfi_offset 7, -4
 865 0002 85B0     		sub	sp, sp, #20
 866              		.cfi_def_cfa_offset 24
 867 0004 00AF     		add	r7, sp, #0
 868              		.cfi_def_cfa_register 7
 869 0006 0346     		mov	r3, r0
 870 0008 FB71     		strb	r3, [r7, #7]
 762:.\Generated_Source\PSoC5/UART.c ****     uint8 ri;
 763:.\Generated_Source\PSoC5/UART.c ****     uint16 result = 0u;
 871              		.loc 1 763 0
 872 000a 0023     		movs	r3, #0
 873 000c FB81     		strh	r3, [r7, #14]	@ movhi
 764:.\Generated_Source\PSoC5/UART.c **** 
 765:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 874              		.loc 1 765 0
 875 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 876 0010 002B     		cmp	r3, #0
 877 0012 1DD0     		beq	.L44
 878              		.loc 1 765 0 is_stmt 0 discriminator 1
 879 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 880 0016 082B     		cmp	r3, #8
 881 0018 1AD8     		bhi	.L44
 766:.\Generated_Source\PSoC5/UART.c ****     {
 767:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
 882              		.loc 1 767 0 is_stmt 1
 883 001a FB79     		ldrb	r3, [r7, #7]
 884 001c 013B     		subs	r3, r3, #1
 885 001e DBB2     		uxtb	r3, r3
 886 0020 1B01     		lsls	r3, r3, #4
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 30


 887 0022 7B73     		strb	r3, [r7, #13]
 768:.\Generated_Source\PSoC5/UART.c **** 
 769:.\Generated_Source\PSoC5/UART.c ****         result = (uint8)(CY_GET_REG8((reg8 *)(UART_SIE_EP1_CNT0_IND + ri)) &
 888              		.loc 1 769 0
 889 0024 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 890 0026 0E4B     		ldr	r3, .L46
 891 0028 1344     		add	r3, r3, r2
 892 002a 1B78     		ldrb	r3, [r3]
 893 002c DBB2     		uxtb	r3, r3
 894 002e 03F00F03 		and	r3, r3, #15
 895 0032 FB81     		strh	r3, [r7, #14]	@ movhi
 770:.\Generated_Source\PSoC5/UART.c ****                           UART_EPX_CNT0_MASK);
 771:.\Generated_Source\PSoC5/UART.c ****         result = (result << 8u) | CY_GET_REG8((reg8 *)(UART_SIE_EP1_CNT1_IND + ri));
 896              		.loc 1 771 0
 897 0034 FB89     		ldrh	r3, [r7, #14]
 898 0036 1B02     		lsls	r3, r3, #8
 899 0038 9AB2     		uxth	r2, r3
 900 003a 797B     		ldrb	r1, [r7, #13]	@ zero_extendqisi2
 901 003c 094B     		ldr	r3, .L46+4
 902 003e 0B44     		add	r3, r3, r1
 903 0040 1B78     		ldrb	r3, [r3]
 904 0042 DBB2     		uxtb	r3, r3
 905 0044 1343     		orrs	r3, r3, r2
 906 0046 9BB2     		uxth	r3, r3
 907 0048 FB81     		strh	r3, [r7, #14]	@ movhi
 772:.\Generated_Source\PSoC5/UART.c ****         result -= UART_EPX_CNTX_CRC_COUNT;
 908              		.loc 1 772 0
 909 004a FB89     		ldrh	r3, [r7, #14]	@ movhi
 910 004c 023B     		subs	r3, r3, #2
 911 004e FB81     		strh	r3, [r7, #14]	@ movhi
 912              	.L44:
 773:.\Generated_Source\PSoC5/UART.c ****     }
 774:.\Generated_Source\PSoC5/UART.c ****     return(result);
 913              		.loc 1 774 0
 914 0050 FB89     		ldrh	r3, [r7, #14]
 775:.\Generated_Source\PSoC5/UART.c **** }
 915              		.loc 1 775 0
 916 0052 1846     		mov	r0, r3
 917 0054 1437     		adds	r7, r7, #20
 918 0056 BD46     		mov	sp, r7
 919              		@ sp needed
 920 0058 5DF8047B 		ldr	r7, [sp], #4
 921 005c 7047     		bx	lr
 922              	.L47:
 923 005e 00BF     		.align	2
 924              	.L46:
 925 0060 0C600040 		.word	1073766412
 926 0064 0D600040 		.word	1073766413
 927              		.cfi_endproc
 928              	.LFE10:
 929              		.size	UART_GetEPCount, .-UART_GetEPCount
 930              		.section	.text.UART_LoadInEP,"ax",%progbits
 931              		.align	2
 932              		.global	UART_LoadInEP
 933              		.thumb
 934              		.thumb_func
 935              		.type	UART_LoadInEP, %function
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 31


 936              	UART_LoadInEP:
 937              	.LFB11:
 776:.\Generated_Source\PSoC5/UART.c **** 
 777:.\Generated_Source\PSoC5/UART.c **** 
 778:.\Generated_Source\PSoC5/UART.c **** #if(UART_EP_MM != UART__EP_MANUAL)
 779:.\Generated_Source\PSoC5/UART.c **** 
 780:.\Generated_Source\PSoC5/UART.c **** 
 781:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 782:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_InitEP_DMA
 783:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 784:.\Generated_Source\PSoC5/UART.c ****     *
 785:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 786:.\Generated_Source\PSoC5/UART.c ****     *  This function allocates and initializes a DMA channel to be used by the
 787:.\Generated_Source\PSoC5/UART.c ****     *  UART_LoadInEP() or UART_ReadOutEP() APIs for data
 788:.\Generated_Source\PSoC5/UART.c ****     *  transfer.
 789:.\Generated_Source\PSoC5/UART.c ****     *
 790:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 791:.\Generated_Source\PSoC5/UART.c ****     *  epNumber: Contains the data endpoint number.
 792:.\Generated_Source\PSoC5/UART.c ****     *            Valid values are between 1 and 8.
 793:.\Generated_Source\PSoC5/UART.c ****     *  *pData: Pointer to a data array that is related to the EP transfers.
 794:.\Generated_Source\PSoC5/UART.c ****     *
 795:.\Generated_Source\PSoC5/UART.c ****     * Return:
 796:.\Generated_Source\PSoC5/UART.c ****     *  None.
 797:.\Generated_Source\PSoC5/UART.c ****     *
 798:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 799:.\Generated_Source\PSoC5/UART.c ****     *  No.
 800:.\Generated_Source\PSoC5/UART.c ****     *
 801:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 802:.\Generated_Source\PSoC5/UART.c ****     void UART_InitEP_DMA(uint8 epNumber, const uint8* pData)
 803:.\Generated_Source\PSoC5/UART.c ****                                                                     
 804:.\Generated_Source\PSoC5/UART.c ****     {
 805:.\Generated_Source\PSoC5/UART.c ****         uint16 src;
 806:.\Generated_Source\PSoC5/UART.c ****         uint16 dst;
 807:.\Generated_Source\PSoC5/UART.c ****         #if (CY_PSOC3)                  /* PSoC 3 */
 808:.\Generated_Source\PSoC5/UART.c ****             src = HI16(CYDEV_SRAM_BASE);
 809:.\Generated_Source\PSoC5/UART.c ****             dst = HI16(CYDEV_PERIPH_BASE);
 810:.\Generated_Source\PSoC5/UART.c ****             pData = pData;
 811:.\Generated_Source\PSoC5/UART.c ****         #else                           /* PSoC 5 */
 812:.\Generated_Source\PSoC5/UART.c ****             if((UART_EP[epNumber].addr & UART_DIR_IN) != 0u )
 813:.\Generated_Source\PSoC5/UART.c ****             {   /* for the IN EP source is the SRAM memory buffer */
 814:.\Generated_Source\PSoC5/UART.c ****                 src = HI16(pData);
 815:.\Generated_Source\PSoC5/UART.c ****                 dst = HI16(CYDEV_PERIPH_BASE);
 816:.\Generated_Source\PSoC5/UART.c ****             }
 817:.\Generated_Source\PSoC5/UART.c ****             else
 818:.\Generated_Source\PSoC5/UART.c ****             {   /* for the OUT EP source is the SIE register */
 819:.\Generated_Source\PSoC5/UART.c ****                 src = HI16(CYDEV_PERIPH_BASE);
 820:.\Generated_Source\PSoC5/UART.c ****                 dst = HI16(pData);
 821:.\Generated_Source\PSoC5/UART.c ****             }
 822:.\Generated_Source\PSoC5/UART.c ****         #endif  /*  C51 */
 823:.\Generated_Source\PSoC5/UART.c ****         switch(epNumber)
 824:.\Generated_Source\PSoC5/UART.c ****         {
 825:.\Generated_Source\PSoC5/UART.c ****             case UART_EP1:
 826:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA1_REMOVE == 0u)
 827:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep1_DmaInitialize(
 828:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 829:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA1_REMOVE */
 830:.\Generated_Source\PSoC5/UART.c ****                 break;
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 32


 831:.\Generated_Source\PSoC5/UART.c ****             case UART_EP2:
 832:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA2_REMOVE == 0u)
 833:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep2_DmaInitialize(
 834:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 835:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA2_REMOVE */
 836:.\Generated_Source\PSoC5/UART.c ****                 break;
 837:.\Generated_Source\PSoC5/UART.c ****             case UART_EP3:
 838:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA3_REMOVE == 0u)
 839:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep3_DmaInitialize(
 840:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 841:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA3_REMOVE */
 842:.\Generated_Source\PSoC5/UART.c ****                 break;
 843:.\Generated_Source\PSoC5/UART.c ****             case UART_EP4:
 844:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA4_REMOVE == 0u)
 845:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep4_DmaInitialize(
 846:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 847:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA4_REMOVE */
 848:.\Generated_Source\PSoC5/UART.c ****                 break;
 849:.\Generated_Source\PSoC5/UART.c ****             case UART_EP5:
 850:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA5_REMOVE == 0u)
 851:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep5_DmaInitialize(
 852:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 853:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA5_REMOVE */
 854:.\Generated_Source\PSoC5/UART.c ****                 break;
 855:.\Generated_Source\PSoC5/UART.c ****             case UART_EP6:
 856:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA6_REMOVE == 0u)
 857:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep6_DmaInitialize(
 858:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 859:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA6_REMOVE */
 860:.\Generated_Source\PSoC5/UART.c ****                 break;
 861:.\Generated_Source\PSoC5/UART.c ****             case UART_EP7:
 862:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA7_REMOVE == 0u)
 863:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep7_DmaInitialize(
 864:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 865:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA7_REMOVE */
 866:.\Generated_Source\PSoC5/UART.c ****                 break;
 867:.\Generated_Source\PSoC5/UART.c ****             case UART_EP8:
 868:.\Generated_Source\PSoC5/UART.c ****                 #if(UART_DMA8_REMOVE == 0u)
 869:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaChan[epNumber] = UART_ep8_DmaInitialize(
 870:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST, UART_DMA_REQUEST_PER_BURST, src, dst);
 871:.\Generated_Source\PSoC5/UART.c ****                 #endif   /*  UART_DMA8_REMOVE */
 872:.\Generated_Source\PSoC5/UART.c ****                 break;
 873:.\Generated_Source\PSoC5/UART.c ****             default:
 874:.\Generated_Source\PSoC5/UART.c ****                 /* Do not support EP0 DMA transfers */
 875:.\Generated_Source\PSoC5/UART.c ****                 break;
 876:.\Generated_Source\PSoC5/UART.c ****         }
 877:.\Generated_Source\PSoC5/UART.c ****         if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 878:.\Generated_Source\PSoC5/UART.c ****         {
 879:.\Generated_Source\PSoC5/UART.c ****             UART_DmaTd[epNumber] = CyDmaTdAllocate();
 880:.\Generated_Source\PSoC5/UART.c ****             #if ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
 881:.\Generated_Source\PSoC5/UART.c ****                 UART_DmaNextTd[epNumber] = CyDmaTdAllocate();
 882:.\Generated_Source\PSoC5/UART.c ****             #endif /*  ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
 883:.\Generated_Source\PSoC5/UART.c **** 
 884:.\Generated_Source\PSoC5/UART.c ****         }
 885:.\Generated_Source\PSoC5/UART.c ****     }
 886:.\Generated_Source\PSoC5/UART.c **** 
 887:.\Generated_Source\PSoC5/UART.c **** 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 33


 888:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 889:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_Stop_DMA
 890:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 891:.\Generated_Source\PSoC5/UART.c ****     *
 892:.\Generated_Source\PSoC5/UART.c ****     * Summary: Stops and free DMA
 893:.\Generated_Source\PSoC5/UART.c ****     *
 894:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 895:.\Generated_Source\PSoC5/UART.c ****     *  epNumber: Contains the data endpoint number or
 896:.\Generated_Source\PSoC5/UART.c ****     *           UART_MAX_EP to stop all DMAs
 897:.\Generated_Source\PSoC5/UART.c ****     *
 898:.\Generated_Source\PSoC5/UART.c ****     * Return:
 899:.\Generated_Source\PSoC5/UART.c ****     *  None.
 900:.\Generated_Source\PSoC5/UART.c ****     *
 901:.\Generated_Source\PSoC5/UART.c ****     * Reentrant:
 902:.\Generated_Source\PSoC5/UART.c ****     *  No.
 903:.\Generated_Source\PSoC5/UART.c ****     *
 904:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 905:.\Generated_Source\PSoC5/UART.c ****     void UART_Stop_DMA(uint8 epNumber) 
 906:.\Generated_Source\PSoC5/UART.c ****     {
 907:.\Generated_Source\PSoC5/UART.c ****         uint8 i;
 908:.\Generated_Source\PSoC5/UART.c ****         i = (epNumber < UART_MAX_EP) ? epNumber : UART_EP1;
 909:.\Generated_Source\PSoC5/UART.c ****         do
 910:.\Generated_Source\PSoC5/UART.c ****         {
 911:.\Generated_Source\PSoC5/UART.c ****             if(UART_DmaTd[i] != DMA_INVALID_TD)
 912:.\Generated_Source\PSoC5/UART.c ****             {
 913:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChDisable(UART_DmaChan[i]);
 914:.\Generated_Source\PSoC5/UART.c ****                 CyDmaTdFree(UART_DmaTd[i]);
 915:.\Generated_Source\PSoC5/UART.c ****                 UART_DmaTd[i] = DMA_INVALID_TD;
 916:.\Generated_Source\PSoC5/UART.c ****             }
 917:.\Generated_Source\PSoC5/UART.c ****             #if ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
 918:.\Generated_Source\PSoC5/UART.c ****                 if(UART_DmaNextTd[i] != DMA_INVALID_TD)
 919:.\Generated_Source\PSoC5/UART.c ****                 {
 920:.\Generated_Source\PSoC5/UART.c ****                     CyDmaTdFree(UART_DmaNextTd[i]);
 921:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaNextTd[i] = DMA_INVALID_TD;
 922:.\Generated_Source\PSoC5/UART.c ****                 }
 923:.\Generated_Source\PSoC5/UART.c ****             #endif /* ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
 924:.\Generated_Source\PSoC5/UART.c ****             i++;
 925:.\Generated_Source\PSoC5/UART.c ****         }while((i < UART_MAX_EP) && (epNumber == UART_MAX_EP));
 926:.\Generated_Source\PSoC5/UART.c ****     }
 927:.\Generated_Source\PSoC5/UART.c **** 
 928:.\Generated_Source\PSoC5/UART.c **** #endif /*  UART_EP_MM != UART__EP_MANUAL */
 929:.\Generated_Source\PSoC5/UART.c **** 
 930:.\Generated_Source\PSoC5/UART.c **** 
 931:.\Generated_Source\PSoC5/UART.c **** #if ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u))
 932:.\Generated_Source\PSoC5/UART.c **** 
 933:.\Generated_Source\PSoC5/UART.c **** 
 934:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
 935:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_LoadNextInEP
 936:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
 937:.\Generated_Source\PSoC5/UART.c ****     *
 938:.\Generated_Source\PSoC5/UART.c ****     * Summary:
 939:.\Generated_Source\PSoC5/UART.c ****     *  This internal function is used for IN endpoint DMA reconfiguration in
 940:.\Generated_Source\PSoC5/UART.c ****     *  Auto DMA mode.
 941:.\Generated_Source\PSoC5/UART.c ****     *
 942:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
 943:.\Generated_Source\PSoC5/UART.c ****     *  epNumber: Contains the data endpoint number.
 944:.\Generated_Source\PSoC5/UART.c ****     *  mode:   0 - Configure DMA to send the the rest of data.
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 34


 945:.\Generated_Source\PSoC5/UART.c ****     *          1 - Configure DMA to repeat 2 last bytes of the first burst.
 946:.\Generated_Source\PSoC5/UART.c ****     *
 947:.\Generated_Source\PSoC5/UART.c ****     * Return:
 948:.\Generated_Source\PSoC5/UART.c ****     *  None.
 949:.\Generated_Source\PSoC5/UART.c ****     *
 950:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
 951:.\Generated_Source\PSoC5/UART.c ****     void UART_LoadNextInEP(uint8 epNumber, uint8 mode) 
 952:.\Generated_Source\PSoC5/UART.c ****     {
 953:.\Generated_Source\PSoC5/UART.c ****         reg16 *convert;
 954:.\Generated_Source\PSoC5/UART.c **** 
 955:.\Generated_Source\PSoC5/UART.c ****         if(mode == 0u)
 956:.\Generated_Source\PSoC5/UART.c ****         {
 957:.\Generated_Source\PSoC5/UART.c ****             /* Configure DMA to send the the rest of data */
 958:.\Generated_Source\PSoC5/UART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 959:.\Generated_Source\PSoC5/UART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[UART_DmaTd[epNumber]].TD0[0u];
 960:.\Generated_Source\PSoC5/UART.c ****             /* Set transfer length */
 961:.\Generated_Source\PSoC5/UART.c ****             CY_SET_REG16(convert, UART_inLength[epNumber] - UART_DMA_BYTES_PER_BURST);
 962:.\Generated_Source\PSoC5/UART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 963:.\Generated_Source\PSoC5/UART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[UART_DmaTd[epNumber]].TD1[0u];
 964:.\Generated_Source\PSoC5/UART.c ****             CY_SET_REG16(convert, LO16((uint32)UART_inDataPointer[epNumber] +
 965:.\Generated_Source\PSoC5/UART.c ****                                             UART_DMA_BYTES_PER_BURST));
 966:.\Generated_Source\PSoC5/UART.c ****             UART_inBufFull[epNumber] = 1u;
 967:.\Generated_Source\PSoC5/UART.c ****         }
 968:.\Generated_Source\PSoC5/UART.c ****         else
 969:.\Generated_Source\PSoC5/UART.c ****         {
 970:.\Generated_Source\PSoC5/UART.c ****             /* Configure DMA to repeat 2 last bytes of the first burst. */
 971:.\Generated_Source\PSoC5/UART.c ****             /* CyDmaTdSetConfiguration API is optimised to change only transfer length and configur
 972:.\Generated_Source\PSoC5/UART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[UART_DmaTd[epNumber]].TD0[0u];
 973:.\Generated_Source\PSoC5/UART.c ****             /* Set transfer length */
 974:.\Generated_Source\PSoC5/UART.c ****             CY_SET_REG16(convert, UART_DMA_BYTES_REPEAT);
 975:.\Generated_Source\PSoC5/UART.c ****             /* CyDmaTdSetAddress API is optimized to change only source address */
 976:.\Generated_Source\PSoC5/UART.c ****             convert = (reg16 *) &CY_DMA_TDMEM_STRUCT_PTR[UART_DmaTd[epNumber]].TD1[0u];
 977:.\Generated_Source\PSoC5/UART.c ****             CY_SET_REG16(convert,  LO16((uint32)UART_inDataPointer[epNumber] +
 978:.\Generated_Source\PSoC5/UART.c ****                                    UART_DMA_BYTES_PER_BURST - UART_DMA_BYTES_REPEAT));
 979:.\Generated_Source\PSoC5/UART.c ****         }
 980:.\Generated_Source\PSoC5/UART.c **** 
 981:.\Generated_Source\PSoC5/UART.c ****         /* CyDmaChSetInitialTd API is optimised to init TD */
 982:.\Generated_Source\PSoC5/UART.c ****         CY_DMA_CH_STRUCT_PTR[UART_DmaChan[epNumber]].basic_status[1u] = UART_DmaTd[epNumber];
 983:.\Generated_Source\PSoC5/UART.c ****     }
 984:.\Generated_Source\PSoC5/UART.c **** #endif /* ((UART_EP_MM == UART__EP_DMAAUTO) && (UART_EP_DMA_AUTO_OPT == 0u)) */
 985:.\Generated_Source\PSoC5/UART.c **** 
 986:.\Generated_Source\PSoC5/UART.c **** 
 987:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
 988:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_LoadInEP
 989:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
 990:.\Generated_Source\PSoC5/UART.c **** *
 991:.\Generated_Source\PSoC5/UART.c **** * Summary:
 992:.\Generated_Source\PSoC5/UART.c **** *  Loads and enables the specified USB data endpoint for an IN transfer.
 993:.\Generated_Source\PSoC5/UART.c **** *
 994:.\Generated_Source\PSoC5/UART.c **** * Parameters:
 995:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Contains the data endpoint number.
 996:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
 997:.\Generated_Source\PSoC5/UART.c **** *  *pData: A pointer to a data array from which the data for the endpoint space
 998:.\Generated_Source\PSoC5/UART.c **** *          is loaded.
 999:.\Generated_Source\PSoC5/UART.c **** *  length: The number of bytes to transfer from the array and then send as a
1000:.\Generated_Source\PSoC5/UART.c **** *          result of an IN request. Valid values are between 0 and 512.
1001:.\Generated_Source\PSoC5/UART.c **** *
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 35


1002:.\Generated_Source\PSoC5/UART.c **** * Return:
1003:.\Generated_Source\PSoC5/UART.c **** *  None.
1004:.\Generated_Source\PSoC5/UART.c **** *
1005:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
1006:.\Generated_Source\PSoC5/UART.c **** *  No.
1007:.\Generated_Source\PSoC5/UART.c **** *
1008:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1009:.\Generated_Source\PSoC5/UART.c **** void UART_LoadInEP(uint8 epNumber, const uint8 pData[], uint16 length)
1010:.\Generated_Source\PSoC5/UART.c ****                                                                         
1011:.\Generated_Source\PSoC5/UART.c **** {
 938              		.loc 1 1011 0
 939              		.cfi_startproc
 940              		@ args = 0, pretend = 0, frame = 16
 941              		@ frame_needed = 1, uses_anonymous_args = 0
 942              		@ link register save eliminated.
 943 0000 90B4     		push	{r4, r7}
 944              		.cfi_def_cfa_offset 8
 945              		.cfi_offset 4, -8
 946              		.cfi_offset 7, -4
 947 0002 84B0     		sub	sp, sp, #16
 948              		.cfi_def_cfa_offset 24
 949 0004 00AF     		add	r7, sp, #0
 950              		.cfi_def_cfa_register 7
 951 0006 3960     		str	r1, [r7]
 952 0008 1346     		mov	r3, r2
 953 000a 0246     		mov	r2, r0
 954 000c FA71     		strb	r2, [r7, #7]
 955 000e BB80     		strh	r3, [r7, #4]	@ movhi
1012:.\Generated_Source\PSoC5/UART.c ****     uint8 ri;
1013:.\Generated_Source\PSoC5/UART.c ****     reg8 *p;
1014:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM == UART__EP_MANUAL)
1015:.\Generated_Source\PSoC5/UART.c ****         uint16 i;
1016:.\Generated_Source\PSoC5/UART.c ****     #endif /*  UART_EP_MM == UART__EP_MANUAL */
1017:.\Generated_Source\PSoC5/UART.c **** 
1018:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 956              		.loc 1 1018 0
 957 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 958 0012 002B     		cmp	r3, #0
 959 0014 69D0     		beq	.L48
 960              		.loc 1 1018 0 is_stmt 0 discriminator 1
 961 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 962 0018 082B     		cmp	r3, #8
 963 001a 66D8     		bhi	.L48
1019:.\Generated_Source\PSoC5/UART.c ****     {
1020:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
 964              		.loc 1 1020 0 is_stmt 1
 965 001c FB79     		ldrb	r3, [r7, #7]
 966 001e 013B     		subs	r3, r3, #1
 967 0020 DBB2     		uxtb	r3, r3
 968 0022 1B01     		lsls	r3, r3, #4
 969 0024 7B73     		strb	r3, [r7, #13]
1021:.\Generated_Source\PSoC5/UART.c ****         p = (reg8 *)(UART_ARB_RW1_DR_IND + ri);
 970              		.loc 1 1021 0
 971 0026 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 972 0028 324B     		ldr	r3, .L54
 973 002a 1344     		add	r3, r3, r2
 974 002c BB60     		str	r3, [r7, #8]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 36


1022:.\Generated_Source\PSoC5/UART.c **** 
1023:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM != UART__EP_DMAAUTO)
1024:.\Generated_Source\PSoC5/UART.c ****             /* Limits length to available buffer space, auto MM could send packets up to 1024 bytes
1025:.\Generated_Source\PSoC5/UART.c ****             if(length > (UART_EPX_DATA_BUF_MAX - UART_EP[epNumber].buffOffset))
 975              		.loc 1 1025 0
 976 002e B988     		ldrh	r1, [r7, #4]
 977 0030 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 978 0032 3148     		ldr	r0, .L54+4
 979 0034 1346     		mov	r3, r2
 980 0036 5B00     		lsls	r3, r3, #1
 981 0038 1344     		add	r3, r3, r2
 982 003a 9B00     		lsls	r3, r3, #2
 983 003c 0344     		add	r3, r3, r0
 984 003e DB88     		ldrh	r3, [r3, #6]	@ movhi
 985 0040 9BB2     		uxth	r3, r3
 986 0042 C3F50073 		rsb	r3, r3, #512
 987 0046 9942     		cmp	r1, r3
 988 0048 0BD9     		bls	.L50
1026:.\Generated_Source\PSoC5/UART.c ****             {
1027:.\Generated_Source\PSoC5/UART.c ****                 length = UART_EPX_DATA_BUF_MAX - UART_EP[epNumber].buffOffset;
 989              		.loc 1 1027 0
 990 004a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 991 004c 2A49     		ldr	r1, .L54+4
 992 004e 1346     		mov	r3, r2
 993 0050 5B00     		lsls	r3, r3, #1
 994 0052 1344     		add	r3, r3, r2
 995 0054 9B00     		lsls	r3, r3, #2
 996 0056 0B44     		add	r3, r3, r1
 997 0058 DB88     		ldrh	r3, [r3, #6]	@ movhi
 998 005a 9BB2     		uxth	r3, r3
 999 005c C3F50073 		rsb	r3, r3, #512
 1000 0060 BB80     		strh	r3, [r7, #4]	@ movhi
 1001              	.L50:
1028:.\Generated_Source\PSoC5/UART.c ****             }
1029:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM != UART__EP_DMAAUTO */
1030:.\Generated_Source\PSoC5/UART.c **** 
1031:.\Generated_Source\PSoC5/UART.c ****         /* Set the count and data toggle */
1032:.\Generated_Source\PSoC5/UART.c ****         CY_SET_REG8((reg8 *)(UART_SIE_EP1_CNT0_IND + ri),
 1002              		.loc 1 1032 0
 1003 0062 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1004 0064 254B     		ldr	r3, .L54+8
 1005 0066 1344     		add	r3, r3, r2
 1006 0068 1946     		mov	r1, r3
 1007 006a BB88     		ldrh	r3, [r7, #4]
 1008 006c 1B0A     		lsrs	r3, r3, #8
 1009 006e 9BB2     		uxth	r3, r3
 1010 0070 D8B2     		uxtb	r0, r3
 1011 0072 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1012 0074 204C     		ldr	r4, .L54+4
 1013 0076 1346     		mov	r3, r2
 1014 0078 5B00     		lsls	r3, r3, #1
 1015 007a 1344     		add	r3, r3, r2
 1016 007c 9B00     		lsls	r3, r3, #2
 1017 007e 2344     		add	r3, r3, r4
 1018 0080 DB78     		ldrb	r3, [r3, #3]
 1019 0082 DBB2     		uxtb	r3, r3
 1020 0084 0343     		orrs	r3, r3, r0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 37


 1021 0086 DBB2     		uxtb	r3, r3
 1022 0088 0B70     		strb	r3, [r1]
1033:.\Generated_Source\PSoC5/UART.c ****                             (length >> 8u) | (UART_EP[epNumber].epToggle));
1034:.\Generated_Source\PSoC5/UART.c ****         CY_SET_REG8((reg8 *)(UART_SIE_EP1_CNT1_IND + ri),  length & 0xFFu);
 1023              		.loc 1 1034 0
 1024 008a 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1025 008c 1C4B     		ldr	r3, .L54+12
 1026 008e 1344     		add	r3, r3, r2
 1027 0090 BA88     		ldrh	r2, [r7, #4]	@ movhi
 1028 0092 D2B2     		uxtb	r2, r2
 1029 0094 1A70     		strb	r2, [r3]
1035:.\Generated_Source\PSoC5/UART.c **** 
1036:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_MANUAL)
1037:.\Generated_Source\PSoC5/UART.c ****             if(pData != NULL)
 1030              		.loc 1 1037 0
 1031 0096 3B68     		ldr	r3, [r7]
 1032 0098 002B     		cmp	r3, #0
 1033 009a 0FD0     		beq	.L51
1038:.\Generated_Source\PSoC5/UART.c ****             {
1039:.\Generated_Source\PSoC5/UART.c ****                 /* Copy the data using the arbiter data register */
1040:.\Generated_Source\PSoC5/UART.c ****                 for (i = 0u; i < length; i++)
 1034              		.loc 1 1040 0
 1035 009c 0023     		movs	r3, #0
 1036 009e FB81     		strh	r3, [r7, #14]	@ movhi
 1037 00a0 08E0     		b	.L52
 1038              	.L53:
1041:.\Generated_Source\PSoC5/UART.c ****                 {
1042:.\Generated_Source\PSoC5/UART.c ****                     CY_SET_REG8(p, pData[i]);
 1039              		.loc 1 1042 0 discriminator 2
 1040 00a2 FB89     		ldrh	r3, [r7, #14]
 1041 00a4 3A68     		ldr	r2, [r7]
 1042 00a6 1344     		add	r3, r3, r2
 1043 00a8 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 1044 00aa BB68     		ldr	r3, [r7, #8]
 1045 00ac 1A70     		strb	r2, [r3]
1040:.\Generated_Source\PSoC5/UART.c ****                 for (i = 0u; i < length; i++)
 1046              		.loc 1 1040 0 discriminator 2
 1047 00ae FB89     		ldrh	r3, [r7, #14]
 1048 00b0 0133     		adds	r3, r3, #1
 1049 00b2 FB81     		strh	r3, [r7, #14]	@ movhi
 1050              	.L52:
1040:.\Generated_Source\PSoC5/UART.c ****                 for (i = 0u; i < length; i++)
 1051              		.loc 1 1040 0 is_stmt 0 discriminator 1
 1052 00b4 FA89     		ldrh	r2, [r7, #14]
 1053 00b6 BB88     		ldrh	r3, [r7, #4]
 1054 00b8 9A42     		cmp	r2, r3
 1055 00ba F2D3     		bcc	.L53
 1056              	.L51:
1043:.\Generated_Source\PSoC5/UART.c ****                 }
1044:.\Generated_Source\PSoC5/UART.c ****             }
1045:.\Generated_Source\PSoC5/UART.c ****             UART_EP[epNumber].apiEpState = UART_NO_EVENT_PENDING;
 1057              		.loc 1 1045 0 is_stmt 1
 1058 00bc FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1059 00be 0E49     		ldr	r1, .L54+4
 1060 00c0 1346     		mov	r3, r2
 1061 00c2 5B00     		lsls	r3, r3, #1
 1062 00c4 1344     		add	r3, r3, r2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 38


 1063 00c6 9B00     		lsls	r3, r3, #2
 1064 00c8 0B44     		add	r3, r3, r1
 1065 00ca 0022     		movs	r2, #0
 1066 00cc 5A70     		strb	r2, [r3, #1]
1046:.\Generated_Source\PSoC5/UART.c ****             /* Write the Mode register */
1047:.\Generated_Source\PSoC5/UART.c ****             CY_SET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri), UART_EP[epNumber].epMode);
 1067              		.loc 1 1047 0
 1068 00ce 7A7B     		ldrb	r2, [r7, #13]	@ zero_extendqisi2
 1069 00d0 0C4B     		ldr	r3, .L54+16
 1070 00d2 1344     		add	r3, r3, r2
 1071 00d4 1946     		mov	r1, r3
 1072 00d6 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1073 00d8 0748     		ldr	r0, .L54+4
 1074 00da 1346     		mov	r3, r2
 1075 00dc 5B00     		lsls	r3, r3, #1
 1076 00de 1344     		add	r3, r3, r2
 1077 00e0 9B00     		lsls	r3, r3, #2
 1078 00e2 0344     		add	r3, r3, r0
 1079 00e4 5B79     		ldrb	r3, [r3, #5]
 1080 00e6 DBB2     		uxtb	r3, r3
 1081 00e8 0B70     		strb	r3, [r1]
 1082              	.L48:
1048:.\Generated_Source\PSoC5/UART.c ****         #else
1049:.\Generated_Source\PSoC5/UART.c ****             /* Init DMA if it was not initialized */
1050:.\Generated_Source\PSoC5/UART.c ****             if (UART_DmaTd[epNumber] == DMA_INVALID_TD)
1051:.\Generated_Source\PSoC5/UART.c ****             {
1052:.\Generated_Source\PSoC5/UART.c ****                 UART_InitEP_DMA(epNumber, pData);
1053:.\Generated_Source\PSoC5/UART.c ****             }
1054:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_MANUAL */
1055:.\Generated_Source\PSoC5/UART.c **** 
1056:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAMANUAL)
1057:.\Generated_Source\PSoC5/UART.c ****             UART_EP[epNumber].apiEpState = UART_NO_EVENT_PENDING;
1058:.\Generated_Source\PSoC5/UART.c ****             if ((pData != NULL) && (length > 0u))
1059:.\Generated_Source\PSoC5/UART.c ****             {
1060:.\Generated_Source\PSoC5/UART.c ****                 /* Enable DMA in mode2 for transferring data */
1061:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChDisable(UART_DmaChan[epNumber]);
1062:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetConfiguration(UART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1063:.\Generated_Source\PSoC5/UART.c ****                                                                                  TD_TERMIN_EN | TD_
1064:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)p
1065:.\Generated_Source\PSoC5/UART.c ****                 /* Enable the DMA */
1066:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChSetInitialTd(UART_DmaChan[epNumber], UART_DmaTd[epNumber]);
1067:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChEnable(UART_DmaChan[epNumber], 1u);
1068:.\Generated_Source\PSoC5/UART.c ****                 /* Generate DMA request */
1069:.\Generated_Source\PSoC5/UART.c ****                 * (reg8 *)(UART_ARB_EP1_CFG_IND + ri) |= UART_ARB_EPX_CFG_DMA_REQ;
1070:.\Generated_Source\PSoC5/UART.c ****                 * (reg8 *)(UART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~UART_ARB_EPX_CFG_DMA_REQ));
1071:.\Generated_Source\PSoC5/UART.c ****                 /* Mode register will be written in arb ISR after DMA transfer complete */
1072:.\Generated_Source\PSoC5/UART.c ****             }
1073:.\Generated_Source\PSoC5/UART.c ****             else
1074:.\Generated_Source\PSoC5/UART.c ****             {
1075:.\Generated_Source\PSoC5/UART.c ****                 /* When zero-length packet - write the Mode register directly */
1076:.\Generated_Source\PSoC5/UART.c ****                 CY_SET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri), UART_EP[epNumber].epMode);
1077:.\Generated_Source\PSoC5/UART.c ****             }
1078:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_DMAMANUAL */
1079:.\Generated_Source\PSoC5/UART.c **** 
1080:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAAUTO)
1081:.\Generated_Source\PSoC5/UART.c ****             if (pData != NULL)
1082:.\Generated_Source\PSoC5/UART.c ****             {
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 39


1083:.\Generated_Source\PSoC5/UART.c ****                 /* Enable DMA in mode3 for transferring data */
1084:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChDisable(UART_DmaChan[epNumber]);
1085:.\Generated_Source\PSoC5/UART.c ****             #if (UART_EP_DMA_AUTO_OPT == 0u)
1086:.\Generated_Source\PSoC5/UART.c ****                 UART_inLength[epNumber] = length;
1087:.\Generated_Source\PSoC5/UART.c ****                 UART_inDataPointer[epNumber] = pData;
1088:.\Generated_Source\PSoC5/UART.c ****                 /* Configure DMA to send the data only for the first burst */
1089:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetConfiguration(UART_DmaTd[epNumber],
1090:.\Generated_Source\PSoC5/UART.c ****                     (length > UART_DMA_BYTES_PER_BURST) ? UART_DMA_BYTES_PER_BURST : length,
1091:.\Generated_Source\PSoC5/UART.c ****                     UART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR);
1092:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)p
1093:.\Generated_Source\PSoC5/UART.c ****                 /* The second TD will be executed only when the first one fails.
1094:.\Generated_Source\PSoC5/UART.c ****                 *  The intention of this TD is to generate NRQ interrupt
1095:.\Generated_Source\PSoC5/UART.c ****                 *  and repeat 2 last bytes of the first burst.
1096:.\Generated_Source\PSoC5/UART.c ****                 */
1097:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetConfiguration(UART_DmaNextTd[epNumber], 1u,
1098:.\Generated_Source\PSoC5/UART.c ****                                                UART_DmaNextTd[epNumber],
1099:.\Generated_Source\PSoC5/UART.c ****                                                UART_epX_TD_TERMOUT_EN[epNumber]);
1100:.\Generated_Source\PSoC5/UART.c ****                 /* Configure DmaNextTd to clear Data ready status */
1101:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetAddress(UART_DmaNextTd[epNumber],  LO16((uint32)&clearInDataRdySta
1102:.\Generated_Source\PSoC5/UART.c ****                                                                 LO16((uint32)(UART_ARB_EP1_CFG_IND 
1103:.\Generated_Source\PSoC5/UART.c ****             #else /* Configure DMA to send all data*/
1104:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetConfiguration(UART_DmaTd[epNumber], length,
1105:.\Generated_Source\PSoC5/UART.c ****                                                UART_DmaTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR)
1106:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],  LO16((uint32)pData), LO16((uint32)p
1107:.\Generated_Source\PSoC5/UART.c ****             #endif /* UART_EP_DMA_AUTO_OPT == 0u */
1108:.\Generated_Source\PSoC5/UART.c **** 
1109:.\Generated_Source\PSoC5/UART.c ****                 /* Clear Any potential pending DMA requests before starting the DMA channel to tran
1110:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaClearPendingDrq(UART_DmaChan[epNumber]);
1111:.\Generated_Source\PSoC5/UART.c ****                 /* Enable the DMA */
1112:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChSetInitialTd(UART_DmaChan[epNumber], UART_DmaTd[epNumber]);
1113:.\Generated_Source\PSoC5/UART.c ****                 (void) CyDmaChEnable(UART_DmaChan[epNumber], 1u);
1114:.\Generated_Source\PSoC5/UART.c ****             }
1115:.\Generated_Source\PSoC5/UART.c ****             else
1116:.\Generated_Source\PSoC5/UART.c ****             {
1117:.\Generated_Source\PSoC5/UART.c ****                 UART_EP[epNumber].apiEpState = UART_NO_EVENT_PENDING;
1118:.\Generated_Source\PSoC5/UART.c ****                 if(length > 0u)
1119:.\Generated_Source\PSoC5/UART.c ****                 {
1120:.\Generated_Source\PSoC5/UART.c ****                 #if (UART_EP_DMA_AUTO_OPT == 0u)
1121:.\Generated_Source\PSoC5/UART.c ****                     UART_inLength[epNumber] = length;
1122:.\Generated_Source\PSoC5/UART.c ****                     UART_inBufFull[epNumber] = 0u;
1123:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaChDisable(UART_DmaChan[epNumber]);
1124:.\Generated_Source\PSoC5/UART.c ****                     /* Configure DMA to send the data only for the first burst */
1125:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaTdSetConfiguration(
1126:.\Generated_Source\PSoC5/UART.c ****                         UART_DmaTd[epNumber], (length > UART_DMA_BYTES_PER_BURST) ?
1127:.\Generated_Source\PSoC5/UART.c ****                         UART_DMA_BYTES_PER_BURST : length,
1128:.\Generated_Source\PSoC5/UART.c ****                         UART_DmaNextTd[epNumber], TD_TERMIN_EN | TD_INC_SRC_ADR );
1129:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],
1130:.\Generated_Source\PSoC5/UART.c ****                                              LO16((uint32)UART_inDataPointer[epNumber]), LO16((uint
1131:.\Generated_Source\PSoC5/UART.c ****                     /* Clear Any potential pending DMA requests before starting the DMA channel to 
1132:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaClearPendingDrq(UART_DmaChan[epNumber]);
1133:.\Generated_Source\PSoC5/UART.c ****                     /* Enable the DMA */
1134:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaChSetInitialTd(UART_DmaChan[epNumber], UART_DmaTd[epNumber]);
1135:.\Generated_Source\PSoC5/UART.c ****                     (void) CyDmaChEnable(UART_DmaChan[epNumber], 1u);
1136:.\Generated_Source\PSoC5/UART.c ****                 #endif /* (UART_EP_DMA_AUTO_OPT == 0u) */
1137:.\Generated_Source\PSoC5/UART.c **** 
1138:.\Generated_Source\PSoC5/UART.c ****                     /* Set Data ready status, This will generate DMA request */
1139:.\Generated_Source\PSoC5/UART.c ****                     #ifndef UART_MANUAL_IN_EP_ARM
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 40


1140:.\Generated_Source\PSoC5/UART.c ****                         * (reg8 *)(UART_ARB_EP1_CFG_IND + ri) |= UART_ARB_EPX_CFG_IN_DATA_RDY;
1141:.\Generated_Source\PSoC5/UART.c ****                     #endif  /* UART_MANUAL_IN_EP_ARM */
1142:.\Generated_Source\PSoC5/UART.c ****                     /* Mode register will be written in arb ISR(In Buffer Full) after first DMA tra
1143:.\Generated_Source\PSoC5/UART.c ****                 }
1144:.\Generated_Source\PSoC5/UART.c ****                 else
1145:.\Generated_Source\PSoC5/UART.c ****                 {
1146:.\Generated_Source\PSoC5/UART.c ****                     /* When zero-length packet - write the Mode register directly */
1147:.\Generated_Source\PSoC5/UART.c ****                     CY_SET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri), UART_EP[epNumber].epMode);
1148:.\Generated_Source\PSoC5/UART.c ****                 }
1149:.\Generated_Source\PSoC5/UART.c ****             }
1150:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_DMAAUTO */
1151:.\Generated_Source\PSoC5/UART.c ****     }
1152:.\Generated_Source\PSoC5/UART.c **** }
 1083              		.loc 1 1152 0
 1084 00ea 1037     		adds	r7, r7, #16
 1085 00ec BD46     		mov	sp, r7
 1086              		@ sp needed
 1087 00ee 90BC     		pop	{r4, r7}
 1088 00f0 7047     		bx	lr
 1089              	.L55:
 1090 00f2 00BF     		.align	2
 1091              	.L54:
 1092 00f4 88600040 		.word	1073766536
 1093 00f8 00000000 		.word	UART_EP
 1094 00fc 0C600040 		.word	1073766412
 1095 0100 0D600040 		.word	1073766413
 1096 0104 0E600040 		.word	1073766414
 1097              		.cfi_endproc
 1098              	.LFE11:
 1099              		.size	UART_LoadInEP, .-UART_LoadInEP
 1100              		.section	.text.UART_ReadOutEP,"ax",%progbits
 1101              		.align	2
 1102              		.global	UART_ReadOutEP
 1103              		.thumb
 1104              		.thumb_func
 1105              		.type	UART_ReadOutEP, %function
 1106              	UART_ReadOutEP:
 1107              	.LFB12:
1153:.\Generated_Source\PSoC5/UART.c **** 
1154:.\Generated_Source\PSoC5/UART.c **** 
1155:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1156:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_ReadOutEP
1157:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1158:.\Generated_Source\PSoC5/UART.c **** *
1159:.\Generated_Source\PSoC5/UART.c **** * Summary:
1160:.\Generated_Source\PSoC5/UART.c **** *  Read data from an endpoint.  The application must call
1161:.\Generated_Source\PSoC5/UART.c **** *  UART_GetEPState to see if an event is pending.
1162:.\Generated_Source\PSoC5/UART.c **** *
1163:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1164:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Contains the data endpoint number.
1165:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
1166:.\Generated_Source\PSoC5/UART.c **** *  pData: A pointer to a data array from which the data for the endpoint space
1167:.\Generated_Source\PSoC5/UART.c **** *         is loaded.
1168:.\Generated_Source\PSoC5/UART.c **** *  length: The number of bytes to transfer from the USB Out endpoint and loads
1169:.\Generated_Source\PSoC5/UART.c **** *          it into data array. Valid values are between 0 and 1023. The function
1170:.\Generated_Source\PSoC5/UART.c **** *          moves fewer than the requested number of bytes if the host sends
1171:.\Generated_Source\PSoC5/UART.c **** *          fewer bytes than requested.
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 41


1172:.\Generated_Source\PSoC5/UART.c **** *
1173:.\Generated_Source\PSoC5/UART.c **** * Returns:
1174:.\Generated_Source\PSoC5/UART.c **** *  Number of bytes received, 0 for an invalid endpoint.
1175:.\Generated_Source\PSoC5/UART.c **** *
1176:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
1177:.\Generated_Source\PSoC5/UART.c **** *  No.
1178:.\Generated_Source\PSoC5/UART.c **** *
1179:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1180:.\Generated_Source\PSoC5/UART.c **** uint16 UART_ReadOutEP(uint8 epNumber, uint8 pData[], uint16 length)
1181:.\Generated_Source\PSoC5/UART.c ****                                                                         
1182:.\Generated_Source\PSoC5/UART.c **** {
 1108              		.loc 1 1182 0
 1109              		.cfi_startproc
 1110              		@ args = 0, pretend = 0, frame = 24
 1111              		@ frame_needed = 1, uses_anonymous_args = 0
 1112 0000 80B5     		push	{r7, lr}
 1113              		.cfi_def_cfa_offset 8
 1114              		.cfi_offset 7, -8
 1115              		.cfi_offset 14, -4
 1116 0002 86B0     		sub	sp, sp, #24
 1117              		.cfi_def_cfa_offset 32
 1118 0004 00AF     		add	r7, sp, #0
 1119              		.cfi_def_cfa_register 7
 1120 0006 3960     		str	r1, [r7]
 1121 0008 1346     		mov	r3, r2
 1122 000a 0246     		mov	r2, r0
 1123 000c FA71     		strb	r2, [r7, #7]
 1124 000e BB80     		strh	r3, [r7, #4]	@ movhi
1183:.\Generated_Source\PSoC5/UART.c ****     uint8 ri;
1184:.\Generated_Source\PSoC5/UART.c ****     reg8 *p;
1185:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM == UART__EP_MANUAL)
1186:.\Generated_Source\PSoC5/UART.c ****         uint16 i;
1187:.\Generated_Source\PSoC5/UART.c ****     #endif /*  UART_EP_MM == UART__EP_MANUAL */
1188:.\Generated_Source\PSoC5/UART.c ****     #if(UART_EP_MM != UART__EP_DMAAUTO)
1189:.\Generated_Source\PSoC5/UART.c ****         uint16 xferCount;
1190:.\Generated_Source\PSoC5/UART.c ****     #endif /*  UART_EP_MM != UART__EP_DMAAUTO */
1191:.\Generated_Source\PSoC5/UART.c **** 
1192:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP) && (pData != NULL))
 1125              		.loc 1 1192 0
 1126 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1127 0012 002B     		cmp	r3, #0
 1128 0014 30D0     		beq	.L57
 1129              		.loc 1 1192 0 is_stmt 0 discriminator 1
 1130 0016 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1131 0018 082B     		cmp	r3, #8
 1132 001a 2DD8     		bhi	.L57
 1133 001c 3B68     		ldr	r3, [r7]
 1134 001e 002B     		cmp	r3, #0
 1135 0020 2AD0     		beq	.L57
1193:.\Generated_Source\PSoC5/UART.c ****     {
1194:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
 1136              		.loc 1 1194 0 is_stmt 1
 1137 0022 FB79     		ldrb	r3, [r7, #7]
 1138 0024 013B     		subs	r3, r3, #1
 1139 0026 DBB2     		uxtb	r3, r3
 1140 0028 1B01     		lsls	r3, r3, #4
 1141 002a 7B75     		strb	r3, [r7, #21]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 42


1195:.\Generated_Source\PSoC5/UART.c ****         p = (reg8 *)(UART_ARB_RW1_DR_IND + ri);
 1142              		.loc 1 1195 0
 1143 002c 7A7D     		ldrb	r2, [r7, #21]	@ zero_extendqisi2
 1144 002e 164B     		ldr	r3, .L63
 1145 0030 1344     		add	r3, r3, r2
 1146 0032 3B61     		str	r3, [r7, #16]
1196:.\Generated_Source\PSoC5/UART.c **** 
1197:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM != UART__EP_DMAAUTO)
1198:.\Generated_Source\PSoC5/UART.c ****             /* Determine which is smaller the requested data or the available data */
1199:.\Generated_Source\PSoC5/UART.c ****             xferCount = UART_GetEPCount(epNumber);
 1147              		.loc 1 1199 0
 1148 0034 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1149 0036 1846     		mov	r0, r3
 1150 0038 FFF7FEFF 		bl	UART_GetEPCount
 1151 003c 0346     		mov	r3, r0
 1152 003e FB81     		strh	r3, [r7, #14]	@ movhi
1200:.\Generated_Source\PSoC5/UART.c ****             if (length > xferCount)
 1153              		.loc 1 1200 0
 1154 0040 BA88     		ldrh	r2, [r7, #4]
 1155 0042 FB89     		ldrh	r3, [r7, #14]
 1156 0044 9A42     		cmp	r2, r3
 1157 0046 01D9     		bls	.L58
1201:.\Generated_Source\PSoC5/UART.c ****             {
1202:.\Generated_Source\PSoC5/UART.c ****                 length = xferCount;
 1158              		.loc 1 1202 0
 1159 0048 FB89     		ldrh	r3, [r7, #14]	@ movhi
 1160 004a BB80     		strh	r3, [r7, #4]	@ movhi
 1161              	.L58:
1203:.\Generated_Source\PSoC5/UART.c ****             }
1204:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM != UART__EP_DMAAUTO */
1205:.\Generated_Source\PSoC5/UART.c **** 
1206:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_MANUAL)
1207:.\Generated_Source\PSoC5/UART.c ****             /* Copy the data using the arbiter data register */
1208:.\Generated_Source\PSoC5/UART.c ****             for (i = 0u; i < length; i++)
 1162              		.loc 1 1208 0
 1163 004c 0023     		movs	r3, #0
 1164 004e FB82     		strh	r3, [r7, #22]	@ movhi
 1165 0050 09E0     		b	.L59
 1166              	.L60:
1209:.\Generated_Source\PSoC5/UART.c ****             {
1210:.\Generated_Source\PSoC5/UART.c ****                 pData[i] = CY_GET_REG8(p);
 1167              		.loc 1 1210 0 discriminator 2
 1168 0052 FB8A     		ldrh	r3, [r7, #22]
 1169 0054 3A68     		ldr	r2, [r7]
 1170 0056 1344     		add	r3, r3, r2
 1171 0058 3A69     		ldr	r2, [r7, #16]
 1172 005a 1278     		ldrb	r2, [r2]
 1173 005c D2B2     		uxtb	r2, r2
 1174 005e 1A70     		strb	r2, [r3]
1208:.\Generated_Source\PSoC5/UART.c ****             for (i = 0u; i < length; i++)
 1175              		.loc 1 1208 0 discriminator 2
 1176 0060 FB8A     		ldrh	r3, [r7, #22]
 1177 0062 0133     		adds	r3, r3, #1
 1178 0064 FB82     		strh	r3, [r7, #22]	@ movhi
 1179              	.L59:
1208:.\Generated_Source\PSoC5/UART.c ****             for (i = 0u; i < length; i++)
 1180              		.loc 1 1208 0 is_stmt 0 discriminator 1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 43


 1181 0066 FA8A     		ldrh	r2, [r7, #22]
 1182 0068 BB88     		ldrh	r3, [r7, #4]
 1183 006a 9A42     		cmp	r2, r3
 1184 006c F1D3     		bcc	.L60
1211:.\Generated_Source\PSoC5/UART.c ****             }
1212:.\Generated_Source\PSoC5/UART.c **** 
1213:.\Generated_Source\PSoC5/UART.c ****             /* (re)arming of OUT endpoint */
1214:.\Generated_Source\PSoC5/UART.c ****             UART_EnableOutEP(epNumber);
 1185              		.loc 1 1214 0 is_stmt 1
 1186 006e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1187 0070 1846     		mov	r0, r3
 1188 0072 FFF7FEFF 		bl	UART_EnableOutEP
 1189 0076 01E0     		b	.L61
 1190              	.L57:
1215:.\Generated_Source\PSoC5/UART.c ****         #else
1216:.\Generated_Source\PSoC5/UART.c ****             /*Init DMA if it was not initialized */
1217:.\Generated_Source\PSoC5/UART.c ****             if(UART_DmaTd[epNumber] == DMA_INVALID_TD)
1218:.\Generated_Source\PSoC5/UART.c ****             {
1219:.\Generated_Source\PSoC5/UART.c ****                 UART_InitEP_DMA(epNumber, pData);
1220:.\Generated_Source\PSoC5/UART.c ****             }
1221:.\Generated_Source\PSoC5/UART.c **** 
1222:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_MANUAL */
1223:.\Generated_Source\PSoC5/UART.c **** 
1224:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAMANUAL)
1225:.\Generated_Source\PSoC5/UART.c ****             /* Enable DMA in mode2 for transferring data */
1226:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChDisable(UART_DmaChan[epNumber]);
1227:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaTdSetConfiguration(UART_DmaTd[epNumber], length, CY_DMA_DISABLE_TD,
1228:.\Generated_Source\PSoC5/UART.c ****                                                                                 TD_TERMIN_EN | TD_I
1229:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
1230:.\Generated_Source\PSoC5/UART.c ****             /* Enable the DMA */
1231:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChSetInitialTd(UART_DmaChan[epNumber], UART_DmaTd[epNumber]);
1232:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChEnable(UART_DmaChan[epNumber], 1u);
1233:.\Generated_Source\PSoC5/UART.c **** 
1234:.\Generated_Source\PSoC5/UART.c ****             /* Generate DMA request */
1235:.\Generated_Source\PSoC5/UART.c ****             * (reg8 *)(UART_ARB_EP1_CFG_IND + ri) |= UART_ARB_EPX_CFG_DMA_REQ;
1236:.\Generated_Source\PSoC5/UART.c ****             * (reg8 *)(UART_ARB_EP1_CFG_IND + ri) &= ((uint8)(~UART_ARB_EPX_CFG_DMA_REQ));
1237:.\Generated_Source\PSoC5/UART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1238:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_DMAMANUAL */
1239:.\Generated_Source\PSoC5/UART.c **** 
1240:.\Generated_Source\PSoC5/UART.c ****         #if(UART_EP_MM == UART__EP_DMAAUTO)
1241:.\Generated_Source\PSoC5/UART.c ****             /* Enable DMA in mode3 for transferring data */
1242:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChDisable(UART_DmaChan[epNumber]);
1243:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaTdSetConfiguration(UART_DmaTd[epNumber], length, UART_DmaTd[epNumber],
1244:.\Generated_Source\PSoC5/UART.c ****                                                                                 TD_TERMIN_EN | TD_I
1245:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaTdSetAddress(UART_DmaTd[epNumber],  LO16((uint32)p), LO16((uint32)pData));
1246:.\Generated_Source\PSoC5/UART.c **** 
1247:.\Generated_Source\PSoC5/UART.c ****             /* Clear Any potential pending DMA requests before starting the DMA channel to transfer
1248:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaClearPendingDrq(UART_DmaChan[epNumber]);
1249:.\Generated_Source\PSoC5/UART.c ****             /* Enable the DMA */
1250:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChSetInitialTd(UART_DmaChan[epNumber], UART_DmaTd[epNumber]);
1251:.\Generated_Source\PSoC5/UART.c ****             (void) CyDmaChEnable(UART_DmaChan[epNumber], 1u);
1252:.\Generated_Source\PSoC5/UART.c ****             /* Out EP will be (re)armed in arb ISR after transfer complete */
1253:.\Generated_Source\PSoC5/UART.c ****         #endif /*  UART_EP_MM == UART__EP_DMAAUTO */
1254:.\Generated_Source\PSoC5/UART.c **** 
1255:.\Generated_Source\PSoC5/UART.c ****     }
1256:.\Generated_Source\PSoC5/UART.c ****     else
1257:.\Generated_Source\PSoC5/UART.c ****     {
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 44


1258:.\Generated_Source\PSoC5/UART.c ****         length = 0u;
 1191              		.loc 1 1258 0
 1192 0078 0023     		movs	r3, #0
 1193 007a BB80     		strh	r3, [r7, #4]	@ movhi
 1194              	.L61:
1259:.\Generated_Source\PSoC5/UART.c ****     }
1260:.\Generated_Source\PSoC5/UART.c **** 
1261:.\Generated_Source\PSoC5/UART.c ****     return(length);
 1195              		.loc 1 1261 0
 1196 007c BB88     		ldrh	r3, [r7, #4]
1262:.\Generated_Source\PSoC5/UART.c **** }
 1197              		.loc 1 1262 0
 1198 007e 1846     		mov	r0, r3
 1199 0080 1837     		adds	r7, r7, #24
 1200 0082 BD46     		mov	sp, r7
 1201              		@ sp needed
 1202 0084 80BD     		pop	{r7, pc}
 1203              	.L64:
 1204 0086 00BF     		.align	2
 1205              	.L63:
 1206 0088 88600040 		.word	1073766536
 1207              		.cfi_endproc
 1208              	.LFE12:
 1209              		.size	UART_ReadOutEP, .-UART_ReadOutEP
 1210              		.section	.text.UART_EnableOutEP,"ax",%progbits
 1211              		.align	2
 1212              		.global	UART_EnableOutEP
 1213              		.thumb
 1214              		.thumb_func
 1215              		.type	UART_EnableOutEP, %function
 1216              	UART_EnableOutEP:
 1217              	.LFB13:
1263:.\Generated_Source\PSoC5/UART.c **** 
1264:.\Generated_Source\PSoC5/UART.c **** 
1265:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1266:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_EnableOutEP
1267:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1268:.\Generated_Source\PSoC5/UART.c **** *
1269:.\Generated_Source\PSoC5/UART.c **** * Summary:
1270:.\Generated_Source\PSoC5/UART.c **** *  This function enables an OUT endpoint.  It should not be
1271:.\Generated_Source\PSoC5/UART.c **** *  called for an IN endpoint.
1272:.\Generated_Source\PSoC5/UART.c **** *
1273:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1274:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Endpoint Number
1275:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
1276:.\Generated_Source\PSoC5/UART.c **** *
1277:.\Generated_Source\PSoC5/UART.c **** * Return:
1278:.\Generated_Source\PSoC5/UART.c **** *   None.
1279:.\Generated_Source\PSoC5/UART.c **** *
1280:.\Generated_Source\PSoC5/UART.c **** * Global variables:
1281:.\Generated_Source\PSoC5/UART.c **** *  UART_EP[epNumber].apiEpState - set to NO_EVENT_PENDING
1282:.\Generated_Source\PSoC5/UART.c **** *
1283:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
1284:.\Generated_Source\PSoC5/UART.c **** *  No.
1285:.\Generated_Source\PSoC5/UART.c **** *
1286:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1287:.\Generated_Source\PSoC5/UART.c **** void UART_EnableOutEP(uint8 epNumber) 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 45


1288:.\Generated_Source\PSoC5/UART.c **** {
 1218              		.loc 1 1288 0
 1219              		.cfi_startproc
 1220              		@ args = 0, pretend = 0, frame = 16
 1221              		@ frame_needed = 1, uses_anonymous_args = 0
 1222              		@ link register save eliminated.
 1223 0000 80B4     		push	{r7}
 1224              		.cfi_def_cfa_offset 4
 1225              		.cfi_offset 7, -4
 1226 0002 85B0     		sub	sp, sp, #20
 1227              		.cfi_def_cfa_offset 24
 1228 0004 00AF     		add	r7, sp, #0
 1229              		.cfi_def_cfa_register 7
 1230 0006 0346     		mov	r3, r0
 1231 0008 FB71     		strb	r3, [r7, #7]
1289:.\Generated_Source\PSoC5/UART.c ****     uint8 ri;
1290:.\Generated_Source\PSoC5/UART.c **** 
1291:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 1232              		.loc 1 1291 0
 1233 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1234 000c 002B     		cmp	r3, #0
 1235 000e 1ED0     		beq	.L65
 1236              		.loc 1 1291 0 is_stmt 0 discriminator 1
 1237 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1238 0012 082B     		cmp	r3, #8
 1239 0014 1BD8     		bhi	.L65
1292:.\Generated_Source\PSoC5/UART.c ****     {
1293:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
 1240              		.loc 1 1293 0 is_stmt 1
 1241 0016 FB79     		ldrb	r3, [r7, #7]
 1242 0018 013B     		subs	r3, r3, #1
 1243 001a DBB2     		uxtb	r3, r3
 1244 001c 1B01     		lsls	r3, r3, #4
 1245 001e FB73     		strb	r3, [r7, #15]
1294:.\Generated_Source\PSoC5/UART.c ****         UART_EP[epNumber].apiEpState = UART_NO_EVENT_PENDING;
 1246              		.loc 1 1294 0
 1247 0020 FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1248 0022 0D49     		ldr	r1, .L67
 1249 0024 1346     		mov	r3, r2
 1250 0026 5B00     		lsls	r3, r3, #1
 1251 0028 1344     		add	r3, r3, r2
 1252 002a 9B00     		lsls	r3, r3, #2
 1253 002c 0B44     		add	r3, r3, r1
 1254 002e 0022     		movs	r2, #0
 1255 0030 5A70     		strb	r2, [r3, #1]
1295:.\Generated_Source\PSoC5/UART.c ****         /* Write the Mode register */
1296:.\Generated_Source\PSoC5/UART.c ****         CY_SET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri), UART_EP[epNumber].epMode);
 1256              		.loc 1 1296 0
 1257 0032 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1258 0034 094B     		ldr	r3, .L67+4
 1259 0036 1344     		add	r3, r3, r2
 1260 0038 1946     		mov	r1, r3
 1261 003a FA79     		ldrb	r2, [r7, #7]	@ zero_extendqisi2
 1262 003c 0648     		ldr	r0, .L67
 1263 003e 1346     		mov	r3, r2
 1264 0040 5B00     		lsls	r3, r3, #1
 1265 0042 1344     		add	r3, r3, r2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 46


 1266 0044 9B00     		lsls	r3, r3, #2
 1267 0046 0344     		add	r3, r3, r0
 1268 0048 5B79     		ldrb	r3, [r3, #5]
 1269 004a DBB2     		uxtb	r3, r3
 1270 004c 0B70     		strb	r3, [r1]
 1271              	.L65:
1297:.\Generated_Source\PSoC5/UART.c ****     }
1298:.\Generated_Source\PSoC5/UART.c **** }
 1272              		.loc 1 1298 0
 1273 004e 1437     		adds	r7, r7, #20
 1274 0050 BD46     		mov	sp, r7
 1275              		@ sp needed
 1276 0052 5DF8047B 		ldr	r7, [sp], #4
 1277 0056 7047     		bx	lr
 1278              	.L68:
 1279              		.align	2
 1280              	.L67:
 1281 0058 00000000 		.word	UART_EP
 1282 005c 0E600040 		.word	1073766414
 1283              		.cfi_endproc
 1284              	.LFE13:
 1285              		.size	UART_EnableOutEP, .-UART_EnableOutEP
 1286              		.section	.text.UART_DisableOutEP,"ax",%progbits
 1287              		.align	2
 1288              		.global	UART_DisableOutEP
 1289              		.thumb
 1290              		.thumb_func
 1291              		.type	UART_DisableOutEP, %function
 1292              	UART_DisableOutEP:
 1293              	.LFB14:
1299:.\Generated_Source\PSoC5/UART.c **** 
1300:.\Generated_Source\PSoC5/UART.c **** 
1301:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1302:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_DisableOutEP
1303:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1304:.\Generated_Source\PSoC5/UART.c **** *
1305:.\Generated_Source\PSoC5/UART.c **** * Summary:
1306:.\Generated_Source\PSoC5/UART.c **** *  This function disables an OUT endpoint.  It should not be
1307:.\Generated_Source\PSoC5/UART.c **** *  called for an IN endpoint.
1308:.\Generated_Source\PSoC5/UART.c **** *
1309:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1310:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Endpoint Number
1311:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
1312:.\Generated_Source\PSoC5/UART.c **** *
1313:.\Generated_Source\PSoC5/UART.c **** * Return:
1314:.\Generated_Source\PSoC5/UART.c **** *  None.
1315:.\Generated_Source\PSoC5/UART.c **** *
1316:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1317:.\Generated_Source\PSoC5/UART.c **** void UART_DisableOutEP(uint8 epNumber) 
1318:.\Generated_Source\PSoC5/UART.c **** {
 1294              		.loc 1 1318 0
 1295              		.cfi_startproc
 1296              		@ args = 0, pretend = 0, frame = 16
 1297              		@ frame_needed = 1, uses_anonymous_args = 0
 1298              		@ link register save eliminated.
 1299 0000 80B4     		push	{r7}
 1300              		.cfi_def_cfa_offset 4
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 47


 1301              		.cfi_offset 7, -4
 1302 0002 85B0     		sub	sp, sp, #20
 1303              		.cfi_def_cfa_offset 24
 1304 0004 00AF     		add	r7, sp, #0
 1305              		.cfi_def_cfa_register 7
 1306 0006 0346     		mov	r3, r0
 1307 0008 FB71     		strb	r3, [r7, #7]
1319:.\Generated_Source\PSoC5/UART.c ****     uint8 ri ;
1320:.\Generated_Source\PSoC5/UART.c **** 
1321:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 1308              		.loc 1 1321 0
 1309 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1310 000c 002B     		cmp	r3, #0
 1311 000e 0CD0     		beq	.L69
 1312              		.loc 1 1321 0 is_stmt 0 discriminator 1
 1313 0010 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1314 0012 082B     		cmp	r3, #8
 1315 0014 09D8     		bhi	.L69
1322:.\Generated_Source\PSoC5/UART.c ****     {
1323:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
 1316              		.loc 1 1323 0 is_stmt 1
 1317 0016 FB79     		ldrb	r3, [r7, #7]
 1318 0018 013B     		subs	r3, r3, #1
 1319 001a DBB2     		uxtb	r3, r3
 1320 001c 1B01     		lsls	r3, r3, #4
 1321 001e FB73     		strb	r3, [r7, #15]
1324:.\Generated_Source\PSoC5/UART.c ****         /* Write the Mode register */
1325:.\Generated_Source\PSoC5/UART.c ****         CY_SET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri), UART_MODE_NAK_OUT);
 1322              		.loc 1 1325 0
 1323 0020 FA7B     		ldrb	r2, [r7, #15]	@ zero_extendqisi2
 1324 0022 044B     		ldr	r3, .L71
 1325 0024 1344     		add	r3, r3, r2
 1326 0026 0822     		movs	r2, #8
 1327 0028 1A70     		strb	r2, [r3]
 1328              	.L69:
1326:.\Generated_Source\PSoC5/UART.c ****     }
1327:.\Generated_Source\PSoC5/UART.c **** }
 1329              		.loc 1 1327 0
 1330 002a 1437     		adds	r7, r7, #20
 1331 002c BD46     		mov	sp, r7
 1332              		@ sp needed
 1333 002e 5DF8047B 		ldr	r7, [sp], #4
 1334 0032 7047     		bx	lr
 1335              	.L72:
 1336              		.align	2
 1337              	.L71:
 1338 0034 0E600040 		.word	1073766414
 1339              		.cfi_endproc
 1340              	.LFE14:
 1341              		.size	UART_DisableOutEP, .-UART_DisableOutEP
 1342              		.section	.text.UART_Force,"ax",%progbits
 1343              		.align	2
 1344              		.global	UART_Force
 1345              		.thumb
 1346              		.thumb_func
 1347              		.type	UART_Force, %function
 1348              	UART_Force:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 48


 1349              	.LFB15:
1328:.\Generated_Source\PSoC5/UART.c **** 
1329:.\Generated_Source\PSoC5/UART.c **** 
1330:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1331:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_Force
1332:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1333:.\Generated_Source\PSoC5/UART.c **** *
1334:.\Generated_Source\PSoC5/UART.c **** * Summary:
1335:.\Generated_Source\PSoC5/UART.c **** *  Forces the bus state
1336:.\Generated_Source\PSoC5/UART.c **** *
1337:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1338:.\Generated_Source\PSoC5/UART.c **** *  bState
1339:.\Generated_Source\PSoC5/UART.c **** *    UART_FORCE_J
1340:.\Generated_Source\PSoC5/UART.c **** *    UART_FORCE_K
1341:.\Generated_Source\PSoC5/UART.c **** *    UART_FORCE_SE0
1342:.\Generated_Source\PSoC5/UART.c **** *    UART_FORCE_NONE
1343:.\Generated_Source\PSoC5/UART.c **** *
1344:.\Generated_Source\PSoC5/UART.c **** * Return:
1345:.\Generated_Source\PSoC5/UART.c **** *  None.
1346:.\Generated_Source\PSoC5/UART.c **** *
1347:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1348:.\Generated_Source\PSoC5/UART.c **** void UART_Force(uint8 bState) 
1349:.\Generated_Source\PSoC5/UART.c **** {
 1350              		.loc 1 1349 0
 1351              		.cfi_startproc
 1352              		@ args = 0, pretend = 0, frame = 8
 1353              		@ frame_needed = 1, uses_anonymous_args = 0
 1354              		@ link register save eliminated.
 1355 0000 80B4     		push	{r7}
 1356              		.cfi_def_cfa_offset 4
 1357              		.cfi_offset 7, -4
 1358 0002 83B0     		sub	sp, sp, #12
 1359              		.cfi_def_cfa_offset 16
 1360 0004 00AF     		add	r7, sp, #0
 1361              		.cfi_def_cfa_register 7
 1362 0006 0346     		mov	r3, r0
 1363 0008 FB71     		strb	r3, [r7, #7]
1350:.\Generated_Source\PSoC5/UART.c ****     CY_SET_REG8(UART_USBIO_CR0_PTR, bState);
 1364              		.loc 1 1350 0
 1365 000a 044B     		ldr	r3, .L74
 1366 000c FA79     		ldrb	r2, [r7, #7]
 1367 000e 1A70     		strb	r2, [r3]
1351:.\Generated_Source\PSoC5/UART.c **** }
 1368              		.loc 1 1351 0
 1369 0010 0C37     		adds	r7, r7, #12
 1370 0012 BD46     		mov	sp, r7
 1371              		@ sp needed
 1372 0014 5DF8047B 		ldr	r7, [sp], #4
 1373 0018 7047     		bx	lr
 1374              	.L75:
 1375 001a 00BF     		.align	2
 1376              	.L74:
 1377 001c 10600040 		.word	1073766416
 1378              		.cfi_endproc
 1379              	.LFE15:
 1380              		.size	UART_Force, .-UART_Force
 1381              		.section	.text.UART_GetEPAckState,"ax",%progbits
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 49


 1382              		.align	2
 1383              		.global	UART_GetEPAckState
 1384              		.thumb
 1385              		.thumb_func
 1386              		.type	UART_GetEPAckState, %function
 1387              	UART_GetEPAckState:
 1388              	.LFB16:
1352:.\Generated_Source\PSoC5/UART.c **** 
1353:.\Generated_Source\PSoC5/UART.c **** 
1354:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1355:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_GetEPAckState
1356:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1357:.\Generated_Source\PSoC5/UART.c **** *
1358:.\Generated_Source\PSoC5/UART.c **** * Summary:
1359:.\Generated_Source\PSoC5/UART.c **** *  Returns the ACK of the CR0 Register (ACKD)
1360:.\Generated_Source\PSoC5/UART.c **** *
1361:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1362:.\Generated_Source\PSoC5/UART.c **** *  epNumber: Endpoint Number
1363:.\Generated_Source\PSoC5/UART.c **** *            Valid values are between 1 and 8.
1364:.\Generated_Source\PSoC5/UART.c **** *
1365:.\Generated_Source\PSoC5/UART.c **** * Returns
1366:.\Generated_Source\PSoC5/UART.c **** *  0 if nothing has been ACKD, non-=zero something has been ACKD
1367:.\Generated_Source\PSoC5/UART.c **** *
1368:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1369:.\Generated_Source\PSoC5/UART.c **** uint8 UART_GetEPAckState(uint8 epNumber) 
1370:.\Generated_Source\PSoC5/UART.c **** {
 1389              		.loc 1 1370 0
 1390              		.cfi_startproc
 1391              		@ args = 0, pretend = 0, frame = 16
 1392              		@ frame_needed = 1, uses_anonymous_args = 0
 1393              		@ link register save eliminated.
 1394 0000 80B4     		push	{r7}
 1395              		.cfi_def_cfa_offset 4
 1396              		.cfi_offset 7, -4
 1397 0002 85B0     		sub	sp, sp, #20
 1398              		.cfi_def_cfa_offset 24
 1399 0004 00AF     		add	r7, sp, #0
 1400              		.cfi_def_cfa_register 7
 1401 0006 0346     		mov	r3, r0
 1402 0008 FB71     		strb	r3, [r7, #7]
1371:.\Generated_Source\PSoC5/UART.c ****     uint8 ri;
1372:.\Generated_Source\PSoC5/UART.c ****     uint8 cr = 0u;
 1403              		.loc 1 1372 0
 1404 000a 0023     		movs	r3, #0
 1405 000c FB73     		strb	r3, [r7, #15]
1373:.\Generated_Source\PSoC5/UART.c **** 
1374:.\Generated_Source\PSoC5/UART.c ****     if((epNumber > UART_EP0) && (epNumber < UART_MAX_EP))
 1406              		.loc 1 1374 0
 1407 000e FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1408 0010 002B     		cmp	r3, #0
 1409 0012 0FD0     		beq	.L77
 1410              		.loc 1 1374 0 is_stmt 0 discriminator 1
 1411 0014 FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1412 0016 082B     		cmp	r3, #8
 1413 0018 0CD8     		bhi	.L77
1375:.\Generated_Source\PSoC5/UART.c ****     {
1376:.\Generated_Source\PSoC5/UART.c ****         ri = ((epNumber - UART_EP1) << UART_EPX_CNTX_ADDR_SHIFT);
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 50


 1414              		.loc 1 1376 0 is_stmt 1
 1415 001a FB79     		ldrb	r3, [r7, #7]
 1416 001c 013B     		subs	r3, r3, #1
 1417 001e DBB2     		uxtb	r3, r3
 1418 0020 1B01     		lsls	r3, r3, #4
 1419 0022 BB73     		strb	r3, [r7, #14]
1377:.\Generated_Source\PSoC5/UART.c ****         cr = CY_GET_REG8((reg8 *)(UART_SIE_EP1_CR0_IND + ri)) & UART_MODE_ACKD;
 1420              		.loc 1 1377 0
 1421 0024 BA7B     		ldrb	r2, [r7, #14]	@ zero_extendqisi2
 1422 0026 074B     		ldr	r3, .L79
 1423 0028 1344     		add	r3, r3, r2
 1424 002a 1B78     		ldrb	r3, [r3]
 1425 002c DBB2     		uxtb	r3, r3
 1426 002e 03F01003 		and	r3, r3, #16
 1427 0032 FB73     		strb	r3, [r7, #15]
 1428              	.L77:
1378:.\Generated_Source\PSoC5/UART.c ****     }
1379:.\Generated_Source\PSoC5/UART.c **** 
1380:.\Generated_Source\PSoC5/UART.c ****     return(cr);
 1429              		.loc 1 1380 0
 1430 0034 FB7B     		ldrb	r3, [r7, #15]	@ zero_extendqisi2
1381:.\Generated_Source\PSoC5/UART.c **** }
 1431              		.loc 1 1381 0
 1432 0036 1846     		mov	r0, r3
 1433 0038 1437     		adds	r7, r7, #20
 1434 003a BD46     		mov	sp, r7
 1435              		@ sp needed
 1436 003c 5DF8047B 		ldr	r7, [sp], #4
 1437 0040 7047     		bx	lr
 1438              	.L80:
 1439 0042 00BF     		.align	2
 1440              	.L79:
 1441 0044 0E600040 		.word	1073766414
 1442              		.cfi_endproc
 1443              	.LFE16:
 1444              		.size	UART_GetEPAckState, .-UART_GetEPAckState
 1445              		.section	.text.UART_SetPowerStatus,"ax",%progbits
 1446              		.align	2
 1447              		.global	UART_SetPowerStatus
 1448              		.thumb
 1449              		.thumb_func
 1450              		.type	UART_SetPowerStatus, %function
 1451              	UART_SetPowerStatus:
 1452              	.LFB17:
1382:.\Generated_Source\PSoC5/UART.c **** 
1383:.\Generated_Source\PSoC5/UART.c **** 
1384:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1385:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_SetPowerStatus
1386:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1387:.\Generated_Source\PSoC5/UART.c **** *
1388:.\Generated_Source\PSoC5/UART.c **** * Summary:
1389:.\Generated_Source\PSoC5/UART.c **** *  Sets the device power status for reporting in the Get Device Status
1390:.\Generated_Source\PSoC5/UART.c **** *  request
1391:.\Generated_Source\PSoC5/UART.c **** *
1392:.\Generated_Source\PSoC5/UART.c **** * Parameters:
1393:.\Generated_Source\PSoC5/UART.c **** *  powerStatus: UART_DEVICE_STATUS_BUS_POWERED(0) - Bus Powered,
1394:.\Generated_Source\PSoC5/UART.c **** *               UART_DEVICE_STATUS_SELF_POWERED(1) - Self Powered
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 51


1395:.\Generated_Source\PSoC5/UART.c **** *
1396:.\Generated_Source\PSoC5/UART.c **** * Return:
1397:.\Generated_Source\PSoC5/UART.c **** *   None.
1398:.\Generated_Source\PSoC5/UART.c **** *
1399:.\Generated_Source\PSoC5/UART.c **** * Global variables:
1400:.\Generated_Source\PSoC5/UART.c **** *  UART_deviceStatus - set power status
1401:.\Generated_Source\PSoC5/UART.c **** *
1402:.\Generated_Source\PSoC5/UART.c **** * Reentrant:
1403:.\Generated_Source\PSoC5/UART.c **** *  No.
1404:.\Generated_Source\PSoC5/UART.c **** *
1405:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1406:.\Generated_Source\PSoC5/UART.c **** void UART_SetPowerStatus(uint8 powerStatus) 
1407:.\Generated_Source\PSoC5/UART.c **** {
 1453              		.loc 1 1407 0
 1454              		.cfi_startproc
 1455              		@ args = 0, pretend = 0, frame = 8
 1456              		@ frame_needed = 1, uses_anonymous_args = 0
 1457              		@ link register save eliminated.
 1458 0000 80B4     		push	{r7}
 1459              		.cfi_def_cfa_offset 4
 1460              		.cfi_offset 7, -4
 1461 0002 83B0     		sub	sp, sp, #12
 1462              		.cfi_def_cfa_offset 16
 1463 0004 00AF     		add	r7, sp, #0
 1464              		.cfi_def_cfa_register 7
 1465 0006 0346     		mov	r3, r0
 1466 0008 FB71     		strb	r3, [r7, #7]
1408:.\Generated_Source\PSoC5/UART.c ****     if (powerStatus != UART_DEVICE_STATUS_BUS_POWERED)
 1467              		.loc 1 1408 0
 1468 000a FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
 1469 000c 002B     		cmp	r3, #0
 1470 000e 08D0     		beq	.L82
1409:.\Generated_Source\PSoC5/UART.c ****     {
1410:.\Generated_Source\PSoC5/UART.c ****         UART_deviceStatus |=  UART_DEVICE_STATUS_SELF_POWERED;
 1471              		.loc 1 1410 0
 1472 0010 0A4B     		ldr	r3, .L84
 1473 0012 1B78     		ldrb	r3, [r3]
 1474 0014 DBB2     		uxtb	r3, r3
 1475 0016 43F00103 		orr	r3, r3, #1
 1476 001a DAB2     		uxtb	r2, r3
 1477 001c 074B     		ldr	r3, .L84
 1478 001e 1A70     		strb	r2, [r3]
 1479 0020 07E0     		b	.L81
 1480              	.L82:
1411:.\Generated_Source\PSoC5/UART.c ****     }
1412:.\Generated_Source\PSoC5/UART.c ****     else
1413:.\Generated_Source\PSoC5/UART.c ****     {
1414:.\Generated_Source\PSoC5/UART.c ****         UART_deviceStatus &=  ((uint8)(~UART_DEVICE_STATUS_SELF_POWERED));
 1481              		.loc 1 1414 0
 1482 0022 064B     		ldr	r3, .L84
 1483 0024 1B78     		ldrb	r3, [r3]
 1484 0026 DBB2     		uxtb	r3, r3
 1485 0028 23F00103 		bic	r3, r3, #1
 1486 002c DAB2     		uxtb	r2, r3
 1487 002e 034B     		ldr	r3, .L84
 1488 0030 1A70     		strb	r2, [r3]
 1489              	.L81:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 52


1415:.\Generated_Source\PSoC5/UART.c ****     }
1416:.\Generated_Source\PSoC5/UART.c **** }
 1490              		.loc 1 1416 0
 1491 0032 0C37     		adds	r7, r7, #12
 1492 0034 BD46     		mov	sp, r7
 1493              		@ sp needed
 1494 0036 5DF8047B 		ldr	r7, [sp], #4
 1495 003a 7047     		bx	lr
 1496              	.L85:
 1497              		.align	2
 1498              	.L84:
 1499 003c 00000000 		.word	UART_deviceStatus
 1500              		.cfi_endproc
 1501              	.LFE17:
 1502              		.size	UART_SetPowerStatus, .-UART_SetPowerStatus
 1503              		.section	.text.UART_RWUEnabled,"ax",%progbits
 1504              		.align	2
 1505              		.global	UART_RWUEnabled
 1506              		.thumb
 1507              		.thumb_func
 1508              		.type	UART_RWUEnabled, %function
 1509              	UART_RWUEnabled:
 1510              	.LFB18:
1417:.\Generated_Source\PSoC5/UART.c **** 
1418:.\Generated_Source\PSoC5/UART.c **** 
1419:.\Generated_Source\PSoC5/UART.c **** #if (UART_MON_VBUS == 1u)
1420:.\Generated_Source\PSoC5/UART.c **** 
1421:.\Generated_Source\PSoC5/UART.c ****     /*******************************************************************************
1422:.\Generated_Source\PSoC5/UART.c ****     * Function Name: UART_VBusPresent
1423:.\Generated_Source\PSoC5/UART.c ****     ********************************************************************************
1424:.\Generated_Source\PSoC5/UART.c ****     *
1425:.\Generated_Source\PSoC5/UART.c ****     * Summary:
1426:.\Generated_Source\PSoC5/UART.c ****     *  Determines VBUS presence for Self Powered Devices.
1427:.\Generated_Source\PSoC5/UART.c ****     *
1428:.\Generated_Source\PSoC5/UART.c ****     * Parameters:
1429:.\Generated_Source\PSoC5/UART.c ****     *  None.
1430:.\Generated_Source\PSoC5/UART.c ****     *
1431:.\Generated_Source\PSoC5/UART.c ****     * Return:
1432:.\Generated_Source\PSoC5/UART.c ****     *  1 if VBUS is present, otherwise 0.
1433:.\Generated_Source\PSoC5/UART.c ****     *
1434:.\Generated_Source\PSoC5/UART.c ****     *******************************************************************************/
1435:.\Generated_Source\PSoC5/UART.c ****     uint8 UART_VBusPresent(void) 
1436:.\Generated_Source\PSoC5/UART.c ****     {
1437:.\Generated_Source\PSoC5/UART.c ****         return((0u != (CY_GET_REG8(UART_VBUS_PS_PTR) & UART_VBUS_MASK)) ? 1u : 0u);
1438:.\Generated_Source\PSoC5/UART.c ****     }
1439:.\Generated_Source\PSoC5/UART.c **** 
1440:.\Generated_Source\PSoC5/UART.c **** #endif /* UART_MON_VBUS */
1441:.\Generated_Source\PSoC5/UART.c **** 
1442:.\Generated_Source\PSoC5/UART.c **** 
1443:.\Generated_Source\PSoC5/UART.c **** /*******************************************************************************
1444:.\Generated_Source\PSoC5/UART.c **** * Function Name: UART_RWUEnabled
1445:.\Generated_Source\PSoC5/UART.c **** ********************************************************************************
1446:.\Generated_Source\PSoC5/UART.c **** *
1447:.\Generated_Source\PSoC5/UART.c **** * Summary:
1448:.\Generated_Source\PSoC5/UART.c **** *  Returns TRUE if Remote Wake Up is enabled, otherwise FALSE
1449:.\Generated_Source\PSoC5/UART.c **** *
1450:.\Generated_Source\PSoC5/UART.c **** * Parameters:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 53


1451:.\Generated_Source\PSoC5/UART.c **** *   None.
1452:.\Generated_Source\PSoC5/UART.c **** *
1453:.\Generated_Source\PSoC5/UART.c **** * Return:
1454:.\Generated_Source\PSoC5/UART.c **** *  TRUE -  Remote Wake Up Enabled
1455:.\Generated_Source\PSoC5/UART.c **** *  FALSE - Remote Wake Up Disabled
1456:.\Generated_Source\PSoC5/UART.c **** *
1457:.\Generated_Source\PSoC5/UART.c **** * Global variables:
1458:.\Generated_Source\PSoC5/UART.c **** *  UART_deviceStatus - checked to determine remote status
1459:.\Generated_Source\PSoC5/UART.c **** *
1460:.\Generated_Source\PSoC5/UART.c **** *******************************************************************************/
1461:.\Generated_Source\PSoC5/UART.c **** uint8 UART_RWUEnabled(void) 
1462:.\Generated_Source\PSoC5/UART.c **** {
 1511              		.loc 1 1462 0
 1512              		.cfi_startproc
 1513              		@ args = 0, pretend = 0, frame = 8
 1514              		@ frame_needed = 1, uses_anonymous_args = 0
 1515              		@ link register save eliminated.
 1516 0000 80B4     		push	{r7}
 1517              		.cfi_def_cfa_offset 4
 1518              		.cfi_offset 7, -4
 1519 0002 83B0     		sub	sp, sp, #12
 1520              		.cfi_def_cfa_offset 16
 1521 0004 00AF     		add	r7, sp, #0
 1522              		.cfi_def_cfa_register 7
1463:.\Generated_Source\PSoC5/UART.c ****     uint8 result = UART_FALSE;
 1523              		.loc 1 1463 0
 1524 0006 0023     		movs	r3, #0
 1525 0008 FB71     		strb	r3, [r7, #7]
1464:.\Generated_Source\PSoC5/UART.c ****     if((UART_deviceStatus & UART_DEVICE_STATUS_REMOTE_WAKEUP) != 0u)
 1526              		.loc 1 1464 0
 1527 000a 084B     		ldr	r3, .L89
 1528 000c 1B78     		ldrb	r3, [r3]
 1529 000e DBB2     		uxtb	r3, r3
 1530 0010 03F00203 		and	r3, r3, #2
 1531 0014 002B     		cmp	r3, #0
 1532 0016 01D0     		beq	.L87
1465:.\Generated_Source\PSoC5/UART.c ****     {
1466:.\Generated_Source\PSoC5/UART.c ****         result = UART_TRUE;
 1533              		.loc 1 1466 0
 1534 0018 0123     		movs	r3, #1
 1535 001a FB71     		strb	r3, [r7, #7]
 1536              	.L87:
1467:.\Generated_Source\PSoC5/UART.c ****     }
1468:.\Generated_Source\PSoC5/UART.c **** 
1469:.\Generated_Source\PSoC5/UART.c ****     return(result);
 1537              		.loc 1 1469 0
 1538 001c FB79     		ldrb	r3, [r7, #7]	@ zero_extendqisi2
1470:.\Generated_Source\PSoC5/UART.c **** }
 1539              		.loc 1 1470 0
 1540 001e 1846     		mov	r0, r3
 1541 0020 0C37     		adds	r7, r7, #12
 1542 0022 BD46     		mov	sp, r7
 1543              		@ sp needed
 1544 0024 5DF8047B 		ldr	r7, [sp], #4
 1545 0028 7047     		bx	lr
 1546              	.L90:
 1547 002a 00BF     		.align	2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 54


 1548              	.L89:
 1549 002c 00000000 		.word	UART_deviceStatus
 1550              		.cfi_endproc
 1551              	.LFE18:
 1552              		.size	UART_RWUEnabled, .-UART_RWUEnabled
 1553              		.text
 1554              	.Letext0:
 1555              		.file 2 "Generated_Source\\PSoC5/cytypes.h"
 1556              		.file 3 ".\\Generated_Source\\PSoC5\\UART.h"
 1557              		.file 4 ".\\Generated_Source\\PSoC5\\UART_pvt.h"
 1558              		.section	.debug_info,"",%progbits
 1559              	.Ldebug_info0:
 1560 0000 CD050000 		.4byte	0x5cd
 1561 0004 0400     		.2byte	0x4
 1562 0006 00000000 		.4byte	.Ldebug_abbrev0
 1563 000a 04       		.byte	0x4
 1564 000b 01       		.uleb128 0x1
 1565 000c 2E020000 		.4byte	.LASF68
 1566 0010 01       		.byte	0x1
 1567 0011 81000000 		.4byte	.LASF69
 1568 0015 CB000000 		.4byte	.LASF70
 1569 0019 00000000 		.4byte	.Ldebug_ranges0+0
 1570 001d 00000000 		.4byte	0
 1571 0021 00000000 		.4byte	.Ldebug_line0
 1572 0025 02       		.uleb128 0x2
 1573 0026 01       		.byte	0x1
 1574 0027 06       		.byte	0x6
 1575 0028 B6000000 		.4byte	.LASF0
 1576 002c 02       		.uleb128 0x2
 1577 002d 01       		.byte	0x1
 1578 002e 08       		.byte	0x8
 1579 002f 1C030000 		.4byte	.LASF1
 1580 0033 02       		.uleb128 0x2
 1581 0034 02       		.byte	0x2
 1582 0035 05       		.byte	0x5
 1583 0036 3E030000 		.4byte	.LASF2
 1584 003a 02       		.uleb128 0x2
 1585 003b 02       		.byte	0x2
 1586 003c 07       		.byte	0x7
 1587 003d BB010000 		.4byte	.LASF3
 1588 0041 02       		.uleb128 0x2
 1589 0042 04       		.byte	0x4
 1590 0043 05       		.byte	0x5
 1591 0044 C2000000 		.4byte	.LASF4
 1592 0048 02       		.uleb128 0x2
 1593 0049 04       		.byte	0x4
 1594 004a 07       		.byte	0x7
 1595 004b A9010000 		.4byte	.LASF5
 1596 004f 02       		.uleb128 0x2
 1597 0050 08       		.byte	0x8
 1598 0051 05       		.byte	0x5
 1599 0052 A8000000 		.4byte	.LASF6
 1600 0056 02       		.uleb128 0x2
 1601 0057 08       		.byte	0x8
 1602 0058 07       		.byte	0x7
 1603 0059 3C000000 		.4byte	.LASF7
 1604 005d 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 55


 1605 005e 04       		.byte	0x4
 1606 005f 05       		.byte	0x5
 1607 0060 696E7400 		.ascii	"int\000"
 1608 0064 02       		.uleb128 0x2
 1609 0065 04       		.byte	0x4
 1610 0066 07       		.byte	0x7
 1611 0067 89010000 		.4byte	.LASF8
 1612 006b 04       		.uleb128 0x4
 1613 006c 04010000 		.4byte	.LASF9
 1614 0070 02       		.byte	0x2
 1615 0071 A1       		.byte	0xa1
 1616 0072 2C000000 		.4byte	0x2c
 1617 0076 04       		.uleb128 0x4
 1618 0077 00000000 		.4byte	.LASF10
 1619 007b 02       		.byte	0x2
 1620 007c A2       		.byte	0xa2
 1621 007d 3A000000 		.4byte	0x3a
 1622 0081 04       		.uleb128 0x4
 1623 0082 39010000 		.4byte	.LASF11
 1624 0086 02       		.byte	0x2
 1625 0087 A3       		.byte	0xa3
 1626 0088 48000000 		.4byte	0x48
 1627 008c 02       		.uleb128 0x2
 1628 008d 04       		.byte	0x4
 1629 008e 04       		.byte	0x4
 1630 008f D7020000 		.4byte	.LASF12
 1631 0093 02       		.uleb128 0x2
 1632 0094 08       		.byte	0x8
 1633 0095 04       		.byte	0x4
 1634 0096 26010000 		.4byte	.LASF13
 1635 009a 02       		.uleb128 0x2
 1636 009b 01       		.byte	0x1
 1637 009c 08       		.byte	0x8
 1638 009d 6B030000 		.4byte	.LASF14
 1639 00a1 05       		.uleb128 0x5
 1640 00a2 04030000 		.4byte	.LASF15
 1641 00a6 02       		.byte	0x2
 1642 00a7 4B01     		.2byte	0x14b
 1643 00a9 AD000000 		.4byte	0xad
 1644 00ad 06       		.uleb128 0x6
 1645 00ae 6B000000 		.4byte	0x6b
 1646 00b2 05       		.uleb128 0x5
 1647 00b3 F8010000 		.4byte	.LASF16
 1648 00b7 02       		.byte	0x2
 1649 00b8 4D01     		.2byte	0x14d
 1650 00ba BE000000 		.4byte	0xbe
 1651 00be 06       		.uleb128 0x6
 1652 00bf 81000000 		.4byte	0x81
 1653 00c3 02       		.uleb128 0x2
 1654 00c4 04       		.byte	0x4
 1655 00c5 07       		.byte	0x7
 1656 00c6 1E020000 		.4byte	.LASF17
 1657 00ca 07       		.uleb128 0x7
 1658 00cb 0C       		.byte	0xc
 1659 00cc 03       		.byte	0x3
 1660 00cd 7A       		.byte	0x7a
 1661 00ce 3F010000 		.4byte	0x13f
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 56


 1662 00d2 08       		.uleb128 0x8
 1663 00d3 27020000 		.4byte	.LASF18
 1664 00d7 03       		.byte	0x3
 1665 00d8 7C       		.byte	0x7c
 1666 00d9 6B000000 		.4byte	0x6b
 1667 00dd 00       		.byte	0
 1668 00de 08       		.uleb128 0x8
 1669 00df DD020000 		.4byte	.LASF19
 1670 00e3 03       		.byte	0x3
 1671 00e4 7D       		.byte	0x7d
 1672 00e5 6B000000 		.4byte	0x6b
 1673 00e9 01       		.byte	0x1
 1674 00ea 08       		.uleb128 0x8
 1675 00eb 14020000 		.4byte	.LASF20
 1676 00ef 03       		.byte	0x3
 1677 00f0 7E       		.byte	0x7e
 1678 00f1 6B000000 		.4byte	0x6b
 1679 00f5 02       		.byte	0x2
 1680 00f6 08       		.uleb128 0x8
 1681 00f7 1D010000 		.4byte	.LASF21
 1682 00fb 03       		.byte	0x3
 1683 00fc 7F       		.byte	0x7f
 1684 00fd 6B000000 		.4byte	0x6b
 1685 0101 03       		.byte	0x3
 1686 0102 08       		.uleb128 0x8
 1687 0103 53000000 		.4byte	.LASF22
 1688 0107 03       		.byte	0x3
 1689 0108 80       		.byte	0x80
 1690 0109 6B000000 		.4byte	0x6b
 1691 010d 04       		.byte	0x4
 1692 010e 08       		.uleb128 0x8
 1693 010f 4E010000 		.4byte	.LASF23
 1694 0113 03       		.byte	0x3
 1695 0114 81       		.byte	0x81
 1696 0115 6B000000 		.4byte	0x6b
 1697 0119 05       		.byte	0x5
 1698 011a 08       		.uleb128 0x8
 1699 011b 93030000 		.4byte	.LASF24
 1700 011f 03       		.byte	0x3
 1701 0120 82       		.byte	0x82
 1702 0121 76000000 		.4byte	0x76
 1703 0125 06       		.byte	0x6
 1704 0126 08       		.uleb128 0x8
 1705 0127 88030000 		.4byte	.LASF25
 1706 012b 03       		.byte	0x3
 1707 012c 83       		.byte	0x83
 1708 012d 76000000 		.4byte	0x76
 1709 0131 08       		.byte	0x8
 1710 0132 08       		.uleb128 0x8
 1711 0133 EE010000 		.4byte	.LASF26
 1712 0137 03       		.byte	0x3
 1713 0138 84       		.byte	0x84
 1714 0139 6B000000 		.4byte	0x6b
 1715 013d 0A       		.byte	0xa
 1716 013e 00       		.byte	0
 1717 013f 04       		.uleb128 0x4
 1718 0140 AA020000 		.4byte	.LASF27
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 57


 1719 0144 03       		.byte	0x3
 1720 0145 85       		.byte	0x85
 1721 0146 CA000000 		.4byte	0xca
 1722 014a 09       		.uleb128 0x9
 1723 014b F4030000 		.4byte	.LASF30
 1724 014f 01       		.byte	0x1
 1725 0150 81       		.byte	0x81
 1726 0151 00000000 		.4byte	.LFB0
 1727 0155 38000000 		.4byte	.LFE0-.LFB0
 1728 0159 01       		.uleb128 0x1
 1729 015a 9C       		.byte	0x9c
 1730 015b 7C010000 		.4byte	0x17c
 1731 015f 0A       		.uleb128 0xa
 1732 0160 A1000000 		.4byte	.LASF28
 1733 0164 01       		.byte	0x1
 1734 0165 81       		.byte	0x81
 1735 0166 6B000000 		.4byte	0x6b
 1736 016a 02       		.uleb128 0x2
 1737 016b 91       		.byte	0x91
 1738 016c 77       		.sleb128 -9
 1739 016d 0A       		.uleb128 0xa
 1740 016e 83030000 		.4byte	.LASF29
 1741 0172 01       		.byte	0x1
 1742 0173 81       		.byte	0x81
 1743 0174 6B000000 		.4byte	0x6b
 1744 0178 02       		.uleb128 0x2
 1745 0179 91       		.byte	0x91
 1746 017a 76       		.sleb128 -10
 1747 017b 00       		.byte	0
 1748 017c 09       		.uleb128 0x9
 1749 017d 55010000 		.4byte	.LASF31
 1750 0181 01       		.byte	0x1
 1751 0182 9E       		.byte	0x9e
 1752 0183 00000000 		.4byte	.LFB1
 1753 0187 8C010000 		.4byte	.LFE1-.LFB1
 1754 018b 01       		.uleb128 0x1
 1755 018c 9C       		.byte	0x9c
 1756 018d A0010000 		.4byte	0x1a0
 1757 0191 0B       		.uleb128 0xb
 1758 0192 CC030000 		.4byte	.LASF35
 1759 0196 01       		.byte	0x1
 1760 0197 A0       		.byte	0xa0
 1761 0198 6B000000 		.4byte	0x6b
 1762 019c 02       		.uleb128 0x2
 1763 019d 91       		.byte	0x91
 1764 019e 77       		.sleb128 -9
 1765 019f 00       		.byte	0
 1766 01a0 0C       		.uleb128 0xc
 1767 01a1 09030000 		.4byte	.LASF32
 1768 01a5 01       		.byte	0x1
 1769 01a6 5C01     		.2byte	0x15c
 1770 01a8 00000000 		.4byte	.LFB2
 1771 01ac D8000000 		.4byte	.LFE2-.LFB2
 1772 01b0 01       		.uleb128 0x1
 1773 01b1 9C       		.byte	0x9c
 1774 01b2 D5010000 		.4byte	0x1d5
 1775 01b6 0D       		.uleb128 0xd
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 58


 1776 01b7 A1000000 		.4byte	.LASF28
 1777 01bb 01       		.byte	0x1
 1778 01bc 5C01     		.2byte	0x15c
 1779 01be 6B000000 		.4byte	0x6b
 1780 01c2 02       		.uleb128 0x2
 1781 01c3 91       		.byte	0x91
 1782 01c4 77       		.sleb128 -9
 1783 01c5 0D       		.uleb128 0xd
 1784 01c6 83030000 		.4byte	.LASF29
 1785 01ca 01       		.byte	0x1
 1786 01cb 5C01     		.2byte	0x15c
 1787 01cd 6B000000 		.4byte	0x6b
 1788 01d1 02       		.uleb128 0x2
 1789 01d2 91       		.byte	0x91
 1790 01d3 76       		.sleb128 -10
 1791 01d4 00       		.byte	0
 1792 01d5 0E       		.uleb128 0xe
 1793 01d6 D9010000 		.4byte	.LASF33
 1794 01da 01       		.byte	0x1
 1795 01db F201     		.2byte	0x1f2
 1796 01dd 00000000 		.4byte	.LFB3
 1797 01e1 68000000 		.4byte	.LFE3-.LFB3
 1798 01e5 01       		.uleb128 0x1
 1799 01e6 9C       		.byte	0x9c
 1800 01e7 0E       		.uleb128 0xe
 1801 01e8 EA030000 		.4byte	.LASF34
 1802 01ec 01       		.byte	0x1
 1803 01ed 3402     		.2byte	0x234
 1804 01ef 00000000 		.4byte	.LFB4
 1805 01f3 C0000000 		.4byte	.LFE4-.LFB4
 1806 01f7 01       		.uleb128 0x1
 1807 01f8 9C       		.byte	0x9c
 1808 01f9 0F       		.uleb128 0xf
 1809 01fa 1C040000 		.4byte	.LASF36
 1810 01fe 01       		.byte	0x1
 1811 01ff 7B02     		.2byte	0x27b
 1812 0201 6B000000 		.4byte	0x6b
 1813 0205 00000000 		.4byte	.LFB5
 1814 0209 34000000 		.4byte	.LFE5-.LFB5
 1815 020d 01       		.uleb128 0x1
 1816 020e 9C       		.byte	0x9c
 1817 020f 21020000 		.4byte	0x221
 1818 0213 10       		.uleb128 0x10
 1819 0214 7200     		.ascii	"r\000"
 1820 0216 01       		.byte	0x1
 1821 0217 7D02     		.2byte	0x27d
 1822 0219 6B000000 		.4byte	0x6b
 1823 021d 02       		.uleb128 0x2
 1824 021e 91       		.byte	0x91
 1825 021f 77       		.sleb128 -9
 1826 0220 00       		.byte	0
 1827 0221 11       		.uleb128 0x11
 1828 0222 FE010000 		.4byte	.LASF71
 1829 0226 01       		.byte	0x1
 1830 0227 9402     		.2byte	0x294
 1831 0229 6B000000 		.4byte	0x6b
 1832 022d 00000000 		.4byte	.LFB6
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 59


 1833 0231 18000000 		.4byte	.LFE6-.LFB6
 1834 0235 01       		.uleb128 0x1
 1835 0236 9C       		.byte	0x9c
 1836 0237 0F       		.uleb128 0xf
 1837 0238 E8020000 		.4byte	.LASF37
 1838 023c 01       		.byte	0x1
 1839 023d AE02     		.2byte	0x2ae
 1840 023f 6B000000 		.4byte	0x6b
 1841 0243 00000000 		.4byte	.LFB7
 1842 0247 34000000 		.4byte	.LFE7-.LFB7
 1843 024b 01       		.uleb128 0x1
 1844 024c 9C       		.byte	0x9c
 1845 024d 61020000 		.4byte	0x261
 1846 0251 10       		.uleb128 0x10
 1847 0252 72657300 		.ascii	"res\000"
 1848 0256 01       		.byte	0x1
 1849 0257 B002     		.2byte	0x2b0
 1850 0259 6B000000 		.4byte	0x6b
 1851 025d 02       		.uleb128 0x2
 1852 025e 91       		.byte	0x91
 1853 025f 77       		.sleb128 -9
 1854 0260 00       		.byte	0
 1855 0261 0F       		.uleb128 0xf
 1856 0262 BE020000 		.4byte	.LASF38
 1857 0266 01       		.byte	0x1
 1858 0267 CA02     		.2byte	0x2ca
 1859 0269 6B000000 		.4byte	0x6b
 1860 026d 00000000 		.4byte	.LFB8
 1861 0271 24000000 		.4byte	.LFE8-.LFB8
 1862 0275 01       		.uleb128 0x1
 1863 0276 9C       		.byte	0x9c
 1864 0277 8B020000 		.4byte	0x28b
 1865 027b 0D       		.uleb128 0xd
 1866 027c 68000000 		.4byte	.LASF39
 1867 0280 01       		.byte	0x1
 1868 0281 CA02     		.2byte	0x2ca
 1869 0283 6B000000 		.4byte	0x6b
 1870 0287 02       		.uleb128 0x2
 1871 0288 91       		.byte	0x91
 1872 0289 77       		.sleb128 -9
 1873 028a 00       		.byte	0
 1874 028b 0F       		.uleb128 0xf
 1875 028c 5B040000 		.4byte	.LASF40
 1876 0290 01       		.byte	0x1
 1877 0291 DF02     		.2byte	0x2df
 1878 0293 6B000000 		.4byte	0x6b
 1879 0297 00000000 		.4byte	.LFB9
 1880 029b 2C000000 		.4byte	.LFE9-.LFB9
 1881 029f 01       		.uleb128 0x1
 1882 02a0 9C       		.byte	0x9c
 1883 02a1 B5020000 		.4byte	0x2b5
 1884 02a5 0D       		.uleb128 0xd
 1885 02a6 78000000 		.4byte	.LASF41
 1886 02aa 01       		.byte	0x1
 1887 02ab DF02     		.2byte	0x2df
 1888 02ad 6B000000 		.4byte	0x6b
 1889 02b1 02       		.uleb128 0x2
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 60


 1890 02b2 91       		.byte	0x91
 1891 02b3 77       		.sleb128 -9
 1892 02b4 00       		.byte	0
 1893 02b5 0F       		.uleb128 0xf
 1894 02b6 58000000 		.4byte	.LASF42
 1895 02ba 01       		.byte	0x1
 1896 02bb F802     		.2byte	0x2f8
 1897 02bd 76000000 		.4byte	0x76
 1898 02c1 00000000 		.4byte	.LFB10
 1899 02c5 68000000 		.4byte	.LFE10-.LFB10
 1900 02c9 01       		.uleb128 0x1
 1901 02ca 9C       		.byte	0x9c
 1902 02cb FC020000 		.4byte	0x2fc
 1903 02cf 0D       		.uleb128 0xd
 1904 02d0 78000000 		.4byte	.LASF41
 1905 02d4 01       		.byte	0x1
 1906 02d5 F802     		.2byte	0x2f8
 1907 02d7 6B000000 		.4byte	0x6b
 1908 02db 02       		.uleb128 0x2
 1909 02dc 91       		.byte	0x91
 1910 02dd 6F       		.sleb128 -17
 1911 02de 10       		.uleb128 0x10
 1912 02df 726900   		.ascii	"ri\000"
 1913 02e2 01       		.byte	0x1
 1914 02e3 FA02     		.2byte	0x2fa
 1915 02e5 6B000000 		.4byte	0x6b
 1916 02e9 02       		.uleb128 0x2
 1917 02ea 91       		.byte	0x91
 1918 02eb 75       		.sleb128 -11
 1919 02ec 12       		.uleb128 0x12
 1920 02ed 54040000 		.4byte	.LASF43
 1921 02f1 01       		.byte	0x1
 1922 02f2 FB02     		.2byte	0x2fb
 1923 02f4 76000000 		.4byte	0x76
 1924 02f8 02       		.uleb128 0x2
 1925 02f9 91       		.byte	0x91
 1926 02fa 76       		.sleb128 -10
 1927 02fb 00       		.byte	0
 1928 02fc 13       		.uleb128 0x13
 1929 02fd AA030000 		.4byte	.LASF44
 1930 0301 01       		.byte	0x1
 1931 0302 F103     		.2byte	0x3f1
 1932 0304 00000000 		.4byte	.LFB11
 1933 0308 08010000 		.4byte	.LFE11-.LFB11
 1934 030c 01       		.uleb128 0x1
 1935 030d 9C       		.byte	0x9c
 1936 030e 68030000 		.4byte	0x368
 1937 0312 0D       		.uleb128 0xd
 1938 0313 78000000 		.4byte	.LASF41
 1939 0317 01       		.byte	0x1
 1940 0318 F103     		.2byte	0x3f1
 1941 031a 6B000000 		.4byte	0x6b
 1942 031e 02       		.uleb128 0x2
 1943 031f 91       		.byte	0x91
 1944 0320 6F       		.sleb128 -17
 1945 0321 0D       		.uleb128 0xd
 1946 0322 40010000 		.4byte	.LASF45
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 61


 1947 0326 01       		.byte	0x1
 1948 0327 F103     		.2byte	0x3f1
 1949 0329 68030000 		.4byte	0x368
 1950 032d 02       		.uleb128 0x2
 1951 032e 91       		.byte	0x91
 1952 032f 68       		.sleb128 -24
 1953 0330 0D       		.uleb128 0xd
 1954 0331 64030000 		.4byte	.LASF46
 1955 0335 01       		.byte	0x1
 1956 0336 F103     		.2byte	0x3f1
 1957 0338 76000000 		.4byte	0x76
 1958 033c 02       		.uleb128 0x2
 1959 033d 91       		.byte	0x91
 1960 033e 6C       		.sleb128 -20
 1961 033f 10       		.uleb128 0x10
 1962 0340 726900   		.ascii	"ri\000"
 1963 0343 01       		.byte	0x1
 1964 0344 F403     		.2byte	0x3f4
 1965 0346 6B000000 		.4byte	0x6b
 1966 034a 02       		.uleb128 0x2
 1967 034b 91       		.byte	0x91
 1968 034c 75       		.sleb128 -11
 1969 034d 10       		.uleb128 0x10
 1970 034e 7000     		.ascii	"p\000"
 1971 0350 01       		.byte	0x1
 1972 0351 F503     		.2byte	0x3f5
 1973 0353 73030000 		.4byte	0x373
 1974 0357 02       		.uleb128 0x2
 1975 0358 91       		.byte	0x91
 1976 0359 70       		.sleb128 -16
 1977 035a 10       		.uleb128 0x10
 1978 035b 6900     		.ascii	"i\000"
 1979 035d 01       		.byte	0x1
 1980 035e F703     		.2byte	0x3f7
 1981 0360 76000000 		.4byte	0x76
 1982 0364 02       		.uleb128 0x2
 1983 0365 91       		.byte	0x91
 1984 0366 76       		.sleb128 -10
 1985 0367 00       		.byte	0
 1986 0368 14       		.uleb128 0x14
 1987 0369 04       		.byte	0x4
 1988 036a 6E030000 		.4byte	0x36e
 1989 036e 15       		.uleb128 0x15
 1990 036f 6B000000 		.4byte	0x6b
 1991 0373 14       		.uleb128 0x14
 1992 0374 04       		.byte	0x4
 1993 0375 A1000000 		.4byte	0xa1
 1994 0379 16       		.uleb128 0x16
 1995 037a 2F040000 		.4byte	.LASF47
 1996 037e 01       		.byte	0x1
 1997 037f 9C04     		.2byte	0x49c
 1998 0381 76000000 		.4byte	0x76
 1999 0385 00000000 		.4byte	.LFB12
 2000 0389 8C000000 		.4byte	.LFE12-.LFB12
 2001 038d 01       		.uleb128 0x1
 2002 038e 9C       		.byte	0x9c
 2003 038f F8030000 		.4byte	0x3f8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 62


 2004 0393 0D       		.uleb128 0xd
 2005 0394 78000000 		.4byte	.LASF41
 2006 0398 01       		.byte	0x1
 2007 0399 9C04     		.2byte	0x49c
 2008 039b 6B000000 		.4byte	0x6b
 2009 039f 02       		.uleb128 0x2
 2010 03a0 91       		.byte	0x91
 2011 03a1 67       		.sleb128 -25
 2012 03a2 0D       		.uleb128 0xd
 2013 03a3 40010000 		.4byte	.LASF45
 2014 03a7 01       		.byte	0x1
 2015 03a8 9C04     		.2byte	0x49c
 2016 03aa F8030000 		.4byte	0x3f8
 2017 03ae 02       		.uleb128 0x2
 2018 03af 91       		.byte	0x91
 2019 03b0 60       		.sleb128 -32
 2020 03b1 0D       		.uleb128 0xd
 2021 03b2 64030000 		.4byte	.LASF46
 2022 03b6 01       		.byte	0x1
 2023 03b7 9C04     		.2byte	0x49c
 2024 03b9 76000000 		.4byte	0x76
 2025 03bd 02       		.uleb128 0x2
 2026 03be 91       		.byte	0x91
 2027 03bf 64       		.sleb128 -28
 2028 03c0 10       		.uleb128 0x10
 2029 03c1 726900   		.ascii	"ri\000"
 2030 03c4 01       		.byte	0x1
 2031 03c5 9F04     		.2byte	0x49f
 2032 03c7 6B000000 		.4byte	0x6b
 2033 03cb 02       		.uleb128 0x2
 2034 03cc 91       		.byte	0x91
 2035 03cd 75       		.sleb128 -11
 2036 03ce 10       		.uleb128 0x10
 2037 03cf 7000     		.ascii	"p\000"
 2038 03d1 01       		.byte	0x1
 2039 03d2 A004     		.2byte	0x4a0
 2040 03d4 73030000 		.4byte	0x373
 2041 03d8 02       		.uleb128 0x2
 2042 03d9 91       		.byte	0x91
 2043 03da 70       		.sleb128 -16
 2044 03db 10       		.uleb128 0x10
 2045 03dc 6900     		.ascii	"i\000"
 2046 03de 01       		.byte	0x1
 2047 03df A204     		.2byte	0x4a2
 2048 03e1 76000000 		.4byte	0x76
 2049 03e5 02       		.uleb128 0x2
 2050 03e6 91       		.byte	0x91
 2051 03e7 76       		.sleb128 -10
 2052 03e8 12       		.uleb128 0x12
 2053 03e9 FF030000 		.4byte	.LASF48
 2054 03ed 01       		.byte	0x1
 2055 03ee A504     		.2byte	0x4a5
 2056 03f0 76000000 		.4byte	0x76
 2057 03f4 02       		.uleb128 0x2
 2058 03f5 91       		.byte	0x91
 2059 03f6 6E       		.sleb128 -18
 2060 03f7 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 63


 2061 03f8 14       		.uleb128 0x14
 2062 03f9 04       		.byte	0x4
 2063 03fa 6B000000 		.4byte	0x6b
 2064 03fe 13       		.uleb128 0x13
 2065 03ff 19000000 		.4byte	.LASF49
 2066 0403 01       		.byte	0x1
 2067 0404 0705     		.2byte	0x507
 2068 0406 00000000 		.4byte	.LFB13
 2069 040a 60000000 		.4byte	.LFE13-.LFB13
 2070 040e 01       		.uleb128 0x1
 2071 040f 9C       		.byte	0x9c
 2072 0410 32040000 		.4byte	0x432
 2073 0414 0D       		.uleb128 0xd
 2074 0415 78000000 		.4byte	.LASF41
 2075 0419 01       		.byte	0x1
 2076 041a 0705     		.2byte	0x507
 2077 041c 6B000000 		.4byte	0x6b
 2078 0420 02       		.uleb128 0x2
 2079 0421 91       		.byte	0x91
 2080 0422 6F       		.sleb128 -17
 2081 0423 10       		.uleb128 0x10
 2082 0424 726900   		.ascii	"ri\000"
 2083 0427 01       		.byte	0x1
 2084 0428 0905     		.2byte	0x509
 2085 042a 6B000000 		.4byte	0x6b
 2086 042e 02       		.uleb128 0x2
 2087 042f 91       		.byte	0x91
 2088 0430 77       		.sleb128 -9
 2089 0431 00       		.byte	0
 2090 0432 13       		.uleb128 0x13
 2091 0433 2A000000 		.4byte	.LASF50
 2092 0437 01       		.byte	0x1
 2093 0438 2505     		.2byte	0x525
 2094 043a 00000000 		.4byte	.LFB14
 2095 043e 38000000 		.4byte	.LFE14-.LFB14
 2096 0442 01       		.uleb128 0x1
 2097 0443 9C       		.byte	0x9c
 2098 0444 66040000 		.4byte	0x466
 2099 0448 0D       		.uleb128 0xd
 2100 0449 78000000 		.4byte	.LASF41
 2101 044d 01       		.byte	0x1
 2102 044e 2505     		.2byte	0x525
 2103 0450 6B000000 		.4byte	0x6b
 2104 0454 02       		.uleb128 0x2
 2105 0455 91       		.byte	0x91
 2106 0456 6F       		.sleb128 -17
 2107 0457 10       		.uleb128 0x10
 2108 0458 726900   		.ascii	"ri\000"
 2109 045b 01       		.byte	0x1
 2110 045c 2705     		.2byte	0x527
 2111 045e 6B000000 		.4byte	0x6b
 2112 0462 02       		.uleb128 0x2
 2113 0463 91       		.byte	0x91
 2114 0464 77       		.sleb128 -9
 2115 0465 00       		.byte	0
 2116 0466 13       		.uleb128 0x13
 2117 0467 CE010000 		.4byte	.LASF51
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 64


 2118 046b 01       		.byte	0x1
 2119 046c 4405     		.2byte	0x544
 2120 046e 00000000 		.4byte	.LFB15
 2121 0472 20000000 		.4byte	.LFE15-.LFB15
 2122 0476 01       		.uleb128 0x1
 2123 0477 9C       		.byte	0x9c
 2124 0478 8C040000 		.4byte	0x48c
 2125 047c 0D       		.uleb128 0xd
 2126 047d 48030000 		.4byte	.LASF52
 2127 0481 01       		.byte	0x1
 2128 0482 4405     		.2byte	0x544
 2129 0484 6B000000 		.4byte	0x6b
 2130 0488 02       		.uleb128 0x2
 2131 0489 91       		.byte	0x91
 2132 048a 77       		.sleb128 -9
 2133 048b 00       		.byte	0
 2134 048c 0F       		.uleb128 0xf
 2135 048d 09040000 		.4byte	.LASF53
 2136 0491 01       		.byte	0x1
 2137 0492 5905     		.2byte	0x559
 2138 0494 6B000000 		.4byte	0x6b
 2139 0498 00000000 		.4byte	.LFB16
 2140 049c 48000000 		.4byte	.LFE16-.LFB16
 2141 04a0 01       		.uleb128 0x1
 2142 04a1 9C       		.byte	0x9c
 2143 04a2 D2040000 		.4byte	0x4d2
 2144 04a6 0D       		.uleb128 0xd
 2145 04a7 78000000 		.4byte	.LASF41
 2146 04ab 01       		.byte	0x1
 2147 04ac 5905     		.2byte	0x559
 2148 04ae 6B000000 		.4byte	0x6b
 2149 04b2 02       		.uleb128 0x2
 2150 04b3 91       		.byte	0x91
 2151 04b4 6F       		.sleb128 -17
 2152 04b5 10       		.uleb128 0x10
 2153 04b6 726900   		.ascii	"ri\000"
 2154 04b9 01       		.byte	0x1
 2155 04ba 5B05     		.2byte	0x55b
 2156 04bc 6B000000 		.4byte	0x6b
 2157 04c0 02       		.uleb128 0x2
 2158 04c1 91       		.byte	0x91
 2159 04c2 76       		.sleb128 -10
 2160 04c3 10       		.uleb128 0x10
 2161 04c4 637200   		.ascii	"cr\000"
 2162 04c7 01       		.byte	0x1
 2163 04c8 5C05     		.2byte	0x55c
 2164 04ca 6B000000 		.4byte	0x6b
 2165 04ce 02       		.uleb128 0x2
 2166 04cf 91       		.byte	0x91
 2167 04d0 77       		.sleb128 -9
 2168 04d1 00       		.byte	0
 2169 04d2 13       		.uleb128 0x13
 2170 04d3 B8030000 		.4byte	.LASF54
 2171 04d7 01       		.byte	0x1
 2172 04d8 7E05     		.2byte	0x57e
 2173 04da 00000000 		.4byte	.LFB17
 2174 04de 40000000 		.4byte	.LFE17-.LFB17
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 65


 2175 04e2 01       		.uleb128 0x1
 2176 04e3 9C       		.byte	0x9c
 2177 04e4 F8040000 		.4byte	0x4f8
 2178 04e8 0D       		.uleb128 0xd
 2179 04e9 2D010000 		.4byte	.LASF55
 2180 04ed 01       		.byte	0x1
 2181 04ee 7E05     		.2byte	0x57e
 2182 04f0 6B000000 		.4byte	0x6b
 2183 04f4 02       		.uleb128 0x2
 2184 04f5 91       		.byte	0x91
 2185 04f6 77       		.sleb128 -9
 2186 04f7 00       		.byte	0
 2187 04f8 0F       		.uleb128 0xf
 2188 04f9 5F010000 		.4byte	.LASF56
 2189 04fd 01       		.byte	0x1
 2190 04fe B505     		.2byte	0x5b5
 2191 0500 6B000000 		.4byte	0x6b
 2192 0504 00000000 		.4byte	.LFB18
 2193 0508 30000000 		.4byte	.LFE18-.LFB18
 2194 050c 01       		.uleb128 0x1
 2195 050d 9C       		.byte	0x9c
 2196 050e 22050000 		.4byte	0x522
 2197 0512 12       		.uleb128 0x12
 2198 0513 54040000 		.4byte	.LASF43
 2199 0517 01       		.byte	0x1
 2200 0518 B705     		.2byte	0x5b7
 2201 051a 6B000000 		.4byte	0x6b
 2202 051e 02       		.uleb128 0x2
 2203 051f 91       		.byte	0x91
 2204 0520 77       		.sleb128 -9
 2205 0521 00       		.byte	0
 2206 0522 17       		.uleb128 0x17
 2207 0523 DD030000 		.4byte	.LASF57
 2208 0527 01       		.byte	0x1
 2209 0528 3B       		.byte	0x3b
 2210 0529 6B000000 		.4byte	0x6b
 2211 052d 05       		.uleb128 0x5
 2212 052e 03       		.byte	0x3
 2213 052f 00000000 		.4byte	UART_initVar
 2214 0533 18       		.uleb128 0x18
 2215 0534 9E030000 		.4byte	.LASF58
 2216 0538 03       		.byte	0x3
 2217 0539 4C02     		.2byte	0x24c
 2218 053b AD000000 		.4byte	0xad
 2219 053f 18       		.uleb128 0x18
 2220 0540 70030000 		.4byte	.LASF59
 2221 0544 03       		.byte	0x3
 2222 0545 4D02     		.2byte	0x24d
 2223 0547 AD000000 		.4byte	0xad
 2224 054b 18       		.uleb128 0x18
 2225 054c 96010000 		.4byte	.LASF60
 2226 0550 03       		.byte	0x3
 2227 0551 4E02     		.2byte	0x24e
 2228 0553 AD000000 		.4byte	0xad
 2229 0557 18       		.uleb128 0x18
 2230 0558 6F010000 		.4byte	.LASF61
 2231 055c 03       		.byte	0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 66


 2232 055d 4F02     		.2byte	0x24f
 2233 055f AD000000 		.4byte	0xad
 2234 0563 18       		.uleb128 0x18
 2235 0564 07000000 		.4byte	.LASF62
 2236 0568 03       		.byte	0x3
 2237 0569 5002     		.2byte	0x250
 2238 056b AD000000 		.4byte	0xad
 2239 056f 19       		.uleb128 0x19
 2240 0570 4F030000 		.4byte	.LASF63
 2241 0574 04       		.byte	0x4
 2242 0575 2D       		.byte	0x2d
 2243 0576 AD000000 		.4byte	0xad
 2244 057a 1A       		.uleb128 0x1a
 2245 057b 6B000000 		.4byte	0x6b
 2246 057f 8A050000 		.4byte	0x58a
 2247 0583 1B       		.uleb128 0x1b
 2248 0584 C3000000 		.4byte	0xc3
 2249 0588 01       		.byte	0x1
 2250 0589 00       		.byte	0
 2251 058a 19       		.uleb128 0x19
 2252 058b 3E040000 		.4byte	.LASF64
 2253 058f 04       		.byte	0x4
 2254 0590 2E       		.byte	0x2e
 2255 0591 95050000 		.4byte	0x595
 2256 0595 06       		.uleb128 0x6
 2257 0596 7A050000 		.4byte	0x57a
 2258 059a 19       		.uleb128 0x19
 2259 059b 0A010000 		.4byte	.LASF65
 2260 059f 04       		.byte	0x4
 2261 05a0 30       		.byte	0x30
 2262 05a1 AD000000 		.4byte	0xad
 2263 05a5 1A       		.uleb128 0x1a
 2264 05a6 3F010000 		.4byte	0x13f
 2265 05aa B5050000 		.4byte	0x5b5
 2266 05ae 1B       		.uleb128 0x1b
 2267 05af C3000000 		.4byte	0xc3
 2268 05b3 08       		.byte	0x8
 2269 05b4 00       		.byte	0
 2270 05b5 19       		.uleb128 0x19
 2271 05b6 46010000 		.4byte	.LASF66
 2272 05ba 04       		.byte	0x4
 2273 05bb 34       		.byte	0x34
 2274 05bc C0050000 		.4byte	0x5c0
 2275 05c0 06       		.uleb128 0x6
 2276 05c1 A5050000 		.4byte	0x5a5
 2277 05c5 19       		.uleb128 0x19
 2278 05c6 2A030000 		.4byte	.LASF67
 2279 05ca 04       		.byte	0x4
 2280 05cb 44       		.byte	0x44
 2281 05cc AD000000 		.4byte	0xad
 2282 05d0 00       		.byte	0
 2283              		.section	.debug_abbrev,"",%progbits
 2284              	.Ldebug_abbrev0:
 2285 0000 01       		.uleb128 0x1
 2286 0001 11       		.uleb128 0x11
 2287 0002 01       		.byte	0x1
 2288 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 67


 2289 0004 0E       		.uleb128 0xe
 2290 0005 13       		.uleb128 0x13
 2291 0006 0B       		.uleb128 0xb
 2292 0007 03       		.uleb128 0x3
 2293 0008 0E       		.uleb128 0xe
 2294 0009 1B       		.uleb128 0x1b
 2295 000a 0E       		.uleb128 0xe
 2296 000b 55       		.uleb128 0x55
 2297 000c 17       		.uleb128 0x17
 2298 000d 11       		.uleb128 0x11
 2299 000e 01       		.uleb128 0x1
 2300 000f 10       		.uleb128 0x10
 2301 0010 17       		.uleb128 0x17
 2302 0011 00       		.byte	0
 2303 0012 00       		.byte	0
 2304 0013 02       		.uleb128 0x2
 2305 0014 24       		.uleb128 0x24
 2306 0015 00       		.byte	0
 2307 0016 0B       		.uleb128 0xb
 2308 0017 0B       		.uleb128 0xb
 2309 0018 3E       		.uleb128 0x3e
 2310 0019 0B       		.uleb128 0xb
 2311 001a 03       		.uleb128 0x3
 2312 001b 0E       		.uleb128 0xe
 2313 001c 00       		.byte	0
 2314 001d 00       		.byte	0
 2315 001e 03       		.uleb128 0x3
 2316 001f 24       		.uleb128 0x24
 2317 0020 00       		.byte	0
 2318 0021 0B       		.uleb128 0xb
 2319 0022 0B       		.uleb128 0xb
 2320 0023 3E       		.uleb128 0x3e
 2321 0024 0B       		.uleb128 0xb
 2322 0025 03       		.uleb128 0x3
 2323 0026 08       		.uleb128 0x8
 2324 0027 00       		.byte	0
 2325 0028 00       		.byte	0
 2326 0029 04       		.uleb128 0x4
 2327 002a 16       		.uleb128 0x16
 2328 002b 00       		.byte	0
 2329 002c 03       		.uleb128 0x3
 2330 002d 0E       		.uleb128 0xe
 2331 002e 3A       		.uleb128 0x3a
 2332 002f 0B       		.uleb128 0xb
 2333 0030 3B       		.uleb128 0x3b
 2334 0031 0B       		.uleb128 0xb
 2335 0032 49       		.uleb128 0x49
 2336 0033 13       		.uleb128 0x13
 2337 0034 00       		.byte	0
 2338 0035 00       		.byte	0
 2339 0036 05       		.uleb128 0x5
 2340 0037 16       		.uleb128 0x16
 2341 0038 00       		.byte	0
 2342 0039 03       		.uleb128 0x3
 2343 003a 0E       		.uleb128 0xe
 2344 003b 3A       		.uleb128 0x3a
 2345 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 68


 2346 003d 3B       		.uleb128 0x3b
 2347 003e 05       		.uleb128 0x5
 2348 003f 49       		.uleb128 0x49
 2349 0040 13       		.uleb128 0x13
 2350 0041 00       		.byte	0
 2351 0042 00       		.byte	0
 2352 0043 06       		.uleb128 0x6
 2353 0044 35       		.uleb128 0x35
 2354 0045 00       		.byte	0
 2355 0046 49       		.uleb128 0x49
 2356 0047 13       		.uleb128 0x13
 2357 0048 00       		.byte	0
 2358 0049 00       		.byte	0
 2359 004a 07       		.uleb128 0x7
 2360 004b 13       		.uleb128 0x13
 2361 004c 01       		.byte	0x1
 2362 004d 0B       		.uleb128 0xb
 2363 004e 0B       		.uleb128 0xb
 2364 004f 3A       		.uleb128 0x3a
 2365 0050 0B       		.uleb128 0xb
 2366 0051 3B       		.uleb128 0x3b
 2367 0052 0B       		.uleb128 0xb
 2368 0053 01       		.uleb128 0x1
 2369 0054 13       		.uleb128 0x13
 2370 0055 00       		.byte	0
 2371 0056 00       		.byte	0
 2372 0057 08       		.uleb128 0x8
 2373 0058 0D       		.uleb128 0xd
 2374 0059 00       		.byte	0
 2375 005a 03       		.uleb128 0x3
 2376 005b 0E       		.uleb128 0xe
 2377 005c 3A       		.uleb128 0x3a
 2378 005d 0B       		.uleb128 0xb
 2379 005e 3B       		.uleb128 0x3b
 2380 005f 0B       		.uleb128 0xb
 2381 0060 49       		.uleb128 0x49
 2382 0061 13       		.uleb128 0x13
 2383 0062 38       		.uleb128 0x38
 2384 0063 0B       		.uleb128 0xb
 2385 0064 00       		.byte	0
 2386 0065 00       		.byte	0
 2387 0066 09       		.uleb128 0x9
 2388 0067 2E       		.uleb128 0x2e
 2389 0068 01       		.byte	0x1
 2390 0069 3F       		.uleb128 0x3f
 2391 006a 19       		.uleb128 0x19
 2392 006b 03       		.uleb128 0x3
 2393 006c 0E       		.uleb128 0xe
 2394 006d 3A       		.uleb128 0x3a
 2395 006e 0B       		.uleb128 0xb
 2396 006f 3B       		.uleb128 0x3b
 2397 0070 0B       		.uleb128 0xb
 2398 0071 27       		.uleb128 0x27
 2399 0072 19       		.uleb128 0x19
 2400 0073 11       		.uleb128 0x11
 2401 0074 01       		.uleb128 0x1
 2402 0075 12       		.uleb128 0x12
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 69


 2403 0076 06       		.uleb128 0x6
 2404 0077 40       		.uleb128 0x40
 2405 0078 18       		.uleb128 0x18
 2406 0079 9642     		.uleb128 0x2116
 2407 007b 19       		.uleb128 0x19
 2408 007c 01       		.uleb128 0x1
 2409 007d 13       		.uleb128 0x13
 2410 007e 00       		.byte	0
 2411 007f 00       		.byte	0
 2412 0080 0A       		.uleb128 0xa
 2413 0081 05       		.uleb128 0x5
 2414 0082 00       		.byte	0
 2415 0083 03       		.uleb128 0x3
 2416 0084 0E       		.uleb128 0xe
 2417 0085 3A       		.uleb128 0x3a
 2418 0086 0B       		.uleb128 0xb
 2419 0087 3B       		.uleb128 0x3b
 2420 0088 0B       		.uleb128 0xb
 2421 0089 49       		.uleb128 0x49
 2422 008a 13       		.uleb128 0x13
 2423 008b 02       		.uleb128 0x2
 2424 008c 18       		.uleb128 0x18
 2425 008d 00       		.byte	0
 2426 008e 00       		.byte	0
 2427 008f 0B       		.uleb128 0xb
 2428 0090 34       		.uleb128 0x34
 2429 0091 00       		.byte	0
 2430 0092 03       		.uleb128 0x3
 2431 0093 0E       		.uleb128 0xe
 2432 0094 3A       		.uleb128 0x3a
 2433 0095 0B       		.uleb128 0xb
 2434 0096 3B       		.uleb128 0x3b
 2435 0097 0B       		.uleb128 0xb
 2436 0098 49       		.uleb128 0x49
 2437 0099 13       		.uleb128 0x13
 2438 009a 02       		.uleb128 0x2
 2439 009b 18       		.uleb128 0x18
 2440 009c 00       		.byte	0
 2441 009d 00       		.byte	0
 2442 009e 0C       		.uleb128 0xc
 2443 009f 2E       		.uleb128 0x2e
 2444 00a0 01       		.byte	0x1
 2445 00a1 3F       		.uleb128 0x3f
 2446 00a2 19       		.uleb128 0x19
 2447 00a3 03       		.uleb128 0x3
 2448 00a4 0E       		.uleb128 0xe
 2449 00a5 3A       		.uleb128 0x3a
 2450 00a6 0B       		.uleb128 0xb
 2451 00a7 3B       		.uleb128 0x3b
 2452 00a8 05       		.uleb128 0x5
 2453 00a9 27       		.uleb128 0x27
 2454 00aa 19       		.uleb128 0x19
 2455 00ab 11       		.uleb128 0x11
 2456 00ac 01       		.uleb128 0x1
 2457 00ad 12       		.uleb128 0x12
 2458 00ae 06       		.uleb128 0x6
 2459 00af 40       		.uleb128 0x40
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 70


 2460 00b0 18       		.uleb128 0x18
 2461 00b1 9642     		.uleb128 0x2116
 2462 00b3 19       		.uleb128 0x19
 2463 00b4 01       		.uleb128 0x1
 2464 00b5 13       		.uleb128 0x13
 2465 00b6 00       		.byte	0
 2466 00b7 00       		.byte	0
 2467 00b8 0D       		.uleb128 0xd
 2468 00b9 05       		.uleb128 0x5
 2469 00ba 00       		.byte	0
 2470 00bb 03       		.uleb128 0x3
 2471 00bc 0E       		.uleb128 0xe
 2472 00bd 3A       		.uleb128 0x3a
 2473 00be 0B       		.uleb128 0xb
 2474 00bf 3B       		.uleb128 0x3b
 2475 00c0 05       		.uleb128 0x5
 2476 00c1 49       		.uleb128 0x49
 2477 00c2 13       		.uleb128 0x13
 2478 00c3 02       		.uleb128 0x2
 2479 00c4 18       		.uleb128 0x18
 2480 00c5 00       		.byte	0
 2481 00c6 00       		.byte	0
 2482 00c7 0E       		.uleb128 0xe
 2483 00c8 2E       		.uleb128 0x2e
 2484 00c9 00       		.byte	0
 2485 00ca 3F       		.uleb128 0x3f
 2486 00cb 19       		.uleb128 0x19
 2487 00cc 03       		.uleb128 0x3
 2488 00cd 0E       		.uleb128 0xe
 2489 00ce 3A       		.uleb128 0x3a
 2490 00cf 0B       		.uleb128 0xb
 2491 00d0 3B       		.uleb128 0x3b
 2492 00d1 05       		.uleb128 0x5
 2493 00d2 27       		.uleb128 0x27
 2494 00d3 19       		.uleb128 0x19
 2495 00d4 11       		.uleb128 0x11
 2496 00d5 01       		.uleb128 0x1
 2497 00d6 12       		.uleb128 0x12
 2498 00d7 06       		.uleb128 0x6
 2499 00d8 40       		.uleb128 0x40
 2500 00d9 18       		.uleb128 0x18
 2501 00da 9742     		.uleb128 0x2117
 2502 00dc 19       		.uleb128 0x19
 2503 00dd 00       		.byte	0
 2504 00de 00       		.byte	0
 2505 00df 0F       		.uleb128 0xf
 2506 00e0 2E       		.uleb128 0x2e
 2507 00e1 01       		.byte	0x1
 2508 00e2 3F       		.uleb128 0x3f
 2509 00e3 19       		.uleb128 0x19
 2510 00e4 03       		.uleb128 0x3
 2511 00e5 0E       		.uleb128 0xe
 2512 00e6 3A       		.uleb128 0x3a
 2513 00e7 0B       		.uleb128 0xb
 2514 00e8 3B       		.uleb128 0x3b
 2515 00e9 05       		.uleb128 0x5
 2516 00ea 27       		.uleb128 0x27
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 71


 2517 00eb 19       		.uleb128 0x19
 2518 00ec 49       		.uleb128 0x49
 2519 00ed 13       		.uleb128 0x13
 2520 00ee 11       		.uleb128 0x11
 2521 00ef 01       		.uleb128 0x1
 2522 00f0 12       		.uleb128 0x12
 2523 00f1 06       		.uleb128 0x6
 2524 00f2 40       		.uleb128 0x40
 2525 00f3 18       		.uleb128 0x18
 2526 00f4 9742     		.uleb128 0x2117
 2527 00f6 19       		.uleb128 0x19
 2528 00f7 01       		.uleb128 0x1
 2529 00f8 13       		.uleb128 0x13
 2530 00f9 00       		.byte	0
 2531 00fa 00       		.byte	0
 2532 00fb 10       		.uleb128 0x10
 2533 00fc 34       		.uleb128 0x34
 2534 00fd 00       		.byte	0
 2535 00fe 03       		.uleb128 0x3
 2536 00ff 08       		.uleb128 0x8
 2537 0100 3A       		.uleb128 0x3a
 2538 0101 0B       		.uleb128 0xb
 2539 0102 3B       		.uleb128 0x3b
 2540 0103 05       		.uleb128 0x5
 2541 0104 49       		.uleb128 0x49
 2542 0105 13       		.uleb128 0x13
 2543 0106 02       		.uleb128 0x2
 2544 0107 18       		.uleb128 0x18
 2545 0108 00       		.byte	0
 2546 0109 00       		.byte	0
 2547 010a 11       		.uleb128 0x11
 2548 010b 2E       		.uleb128 0x2e
 2549 010c 00       		.byte	0
 2550 010d 3F       		.uleb128 0x3f
 2551 010e 19       		.uleb128 0x19
 2552 010f 03       		.uleb128 0x3
 2553 0110 0E       		.uleb128 0xe
 2554 0111 3A       		.uleb128 0x3a
 2555 0112 0B       		.uleb128 0xb
 2556 0113 3B       		.uleb128 0x3b
 2557 0114 05       		.uleb128 0x5
 2558 0115 27       		.uleb128 0x27
 2559 0116 19       		.uleb128 0x19
 2560 0117 49       		.uleb128 0x49
 2561 0118 13       		.uleb128 0x13
 2562 0119 11       		.uleb128 0x11
 2563 011a 01       		.uleb128 0x1
 2564 011b 12       		.uleb128 0x12
 2565 011c 06       		.uleb128 0x6
 2566 011d 40       		.uleb128 0x40
 2567 011e 18       		.uleb128 0x18
 2568 011f 9742     		.uleb128 0x2117
 2569 0121 19       		.uleb128 0x19
 2570 0122 00       		.byte	0
 2571 0123 00       		.byte	0
 2572 0124 12       		.uleb128 0x12
 2573 0125 34       		.uleb128 0x34
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 72


 2574 0126 00       		.byte	0
 2575 0127 03       		.uleb128 0x3
 2576 0128 0E       		.uleb128 0xe
 2577 0129 3A       		.uleb128 0x3a
 2578 012a 0B       		.uleb128 0xb
 2579 012b 3B       		.uleb128 0x3b
 2580 012c 05       		.uleb128 0x5
 2581 012d 49       		.uleb128 0x49
 2582 012e 13       		.uleb128 0x13
 2583 012f 02       		.uleb128 0x2
 2584 0130 18       		.uleb128 0x18
 2585 0131 00       		.byte	0
 2586 0132 00       		.byte	0
 2587 0133 13       		.uleb128 0x13
 2588 0134 2E       		.uleb128 0x2e
 2589 0135 01       		.byte	0x1
 2590 0136 3F       		.uleb128 0x3f
 2591 0137 19       		.uleb128 0x19
 2592 0138 03       		.uleb128 0x3
 2593 0139 0E       		.uleb128 0xe
 2594 013a 3A       		.uleb128 0x3a
 2595 013b 0B       		.uleb128 0xb
 2596 013c 3B       		.uleb128 0x3b
 2597 013d 05       		.uleb128 0x5
 2598 013e 27       		.uleb128 0x27
 2599 013f 19       		.uleb128 0x19
 2600 0140 11       		.uleb128 0x11
 2601 0141 01       		.uleb128 0x1
 2602 0142 12       		.uleb128 0x12
 2603 0143 06       		.uleb128 0x6
 2604 0144 40       		.uleb128 0x40
 2605 0145 18       		.uleb128 0x18
 2606 0146 9742     		.uleb128 0x2117
 2607 0148 19       		.uleb128 0x19
 2608 0149 01       		.uleb128 0x1
 2609 014a 13       		.uleb128 0x13
 2610 014b 00       		.byte	0
 2611 014c 00       		.byte	0
 2612 014d 14       		.uleb128 0x14
 2613 014e 0F       		.uleb128 0xf
 2614 014f 00       		.byte	0
 2615 0150 0B       		.uleb128 0xb
 2616 0151 0B       		.uleb128 0xb
 2617 0152 49       		.uleb128 0x49
 2618 0153 13       		.uleb128 0x13
 2619 0154 00       		.byte	0
 2620 0155 00       		.byte	0
 2621 0156 15       		.uleb128 0x15
 2622 0157 26       		.uleb128 0x26
 2623 0158 00       		.byte	0
 2624 0159 49       		.uleb128 0x49
 2625 015a 13       		.uleb128 0x13
 2626 015b 00       		.byte	0
 2627 015c 00       		.byte	0
 2628 015d 16       		.uleb128 0x16
 2629 015e 2E       		.uleb128 0x2e
 2630 015f 01       		.byte	0x1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 73


 2631 0160 3F       		.uleb128 0x3f
 2632 0161 19       		.uleb128 0x19
 2633 0162 03       		.uleb128 0x3
 2634 0163 0E       		.uleb128 0xe
 2635 0164 3A       		.uleb128 0x3a
 2636 0165 0B       		.uleb128 0xb
 2637 0166 3B       		.uleb128 0x3b
 2638 0167 05       		.uleb128 0x5
 2639 0168 27       		.uleb128 0x27
 2640 0169 19       		.uleb128 0x19
 2641 016a 49       		.uleb128 0x49
 2642 016b 13       		.uleb128 0x13
 2643 016c 11       		.uleb128 0x11
 2644 016d 01       		.uleb128 0x1
 2645 016e 12       		.uleb128 0x12
 2646 016f 06       		.uleb128 0x6
 2647 0170 40       		.uleb128 0x40
 2648 0171 18       		.uleb128 0x18
 2649 0172 9642     		.uleb128 0x2116
 2650 0174 19       		.uleb128 0x19
 2651 0175 01       		.uleb128 0x1
 2652 0176 13       		.uleb128 0x13
 2653 0177 00       		.byte	0
 2654 0178 00       		.byte	0
 2655 0179 17       		.uleb128 0x17
 2656 017a 34       		.uleb128 0x34
 2657 017b 00       		.byte	0
 2658 017c 03       		.uleb128 0x3
 2659 017d 0E       		.uleb128 0xe
 2660 017e 3A       		.uleb128 0x3a
 2661 017f 0B       		.uleb128 0xb
 2662 0180 3B       		.uleb128 0x3b
 2663 0181 0B       		.uleb128 0xb
 2664 0182 49       		.uleb128 0x49
 2665 0183 13       		.uleb128 0x13
 2666 0184 3F       		.uleb128 0x3f
 2667 0185 19       		.uleb128 0x19
 2668 0186 02       		.uleb128 0x2
 2669 0187 18       		.uleb128 0x18
 2670 0188 00       		.byte	0
 2671 0189 00       		.byte	0
 2672 018a 18       		.uleb128 0x18
 2673 018b 34       		.uleb128 0x34
 2674 018c 00       		.byte	0
 2675 018d 03       		.uleb128 0x3
 2676 018e 0E       		.uleb128 0xe
 2677 018f 3A       		.uleb128 0x3a
 2678 0190 0B       		.uleb128 0xb
 2679 0191 3B       		.uleb128 0x3b
 2680 0192 05       		.uleb128 0x5
 2681 0193 49       		.uleb128 0x49
 2682 0194 13       		.uleb128 0x13
 2683 0195 3F       		.uleb128 0x3f
 2684 0196 19       		.uleb128 0x19
 2685 0197 3C       		.uleb128 0x3c
 2686 0198 19       		.uleb128 0x19
 2687 0199 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 74


 2688 019a 00       		.byte	0
 2689 019b 19       		.uleb128 0x19
 2690 019c 34       		.uleb128 0x34
 2691 019d 00       		.byte	0
 2692 019e 03       		.uleb128 0x3
 2693 019f 0E       		.uleb128 0xe
 2694 01a0 3A       		.uleb128 0x3a
 2695 01a1 0B       		.uleb128 0xb
 2696 01a2 3B       		.uleb128 0x3b
 2697 01a3 0B       		.uleb128 0xb
 2698 01a4 49       		.uleb128 0x49
 2699 01a5 13       		.uleb128 0x13
 2700 01a6 3F       		.uleb128 0x3f
 2701 01a7 19       		.uleb128 0x19
 2702 01a8 3C       		.uleb128 0x3c
 2703 01a9 19       		.uleb128 0x19
 2704 01aa 00       		.byte	0
 2705 01ab 00       		.byte	0
 2706 01ac 1A       		.uleb128 0x1a
 2707 01ad 01       		.uleb128 0x1
 2708 01ae 01       		.byte	0x1
 2709 01af 49       		.uleb128 0x49
 2710 01b0 13       		.uleb128 0x13
 2711 01b1 01       		.uleb128 0x1
 2712 01b2 13       		.uleb128 0x13
 2713 01b3 00       		.byte	0
 2714 01b4 00       		.byte	0
 2715 01b5 1B       		.uleb128 0x1b
 2716 01b6 21       		.uleb128 0x21
 2717 01b7 00       		.byte	0
 2718 01b8 49       		.uleb128 0x49
 2719 01b9 13       		.uleb128 0x13
 2720 01ba 2F       		.uleb128 0x2f
 2721 01bb 0B       		.uleb128 0xb
 2722 01bc 00       		.byte	0
 2723 01bd 00       		.byte	0
 2724 01be 00       		.byte	0
 2725              		.section	.debug_aranges,"",%progbits
 2726 0000 AC000000 		.4byte	0xac
 2727 0004 0200     		.2byte	0x2
 2728 0006 00000000 		.4byte	.Ldebug_info0
 2729 000a 04       		.byte	0x4
 2730 000b 00       		.byte	0
 2731 000c 0000     		.2byte	0
 2732 000e 0000     		.2byte	0
 2733 0010 00000000 		.4byte	.LFB0
 2734 0014 38000000 		.4byte	.LFE0-.LFB0
 2735 0018 00000000 		.4byte	.LFB1
 2736 001c 8C010000 		.4byte	.LFE1-.LFB1
 2737 0020 00000000 		.4byte	.LFB2
 2738 0024 D8000000 		.4byte	.LFE2-.LFB2
 2739 0028 00000000 		.4byte	.LFB3
 2740 002c 68000000 		.4byte	.LFE3-.LFB3
 2741 0030 00000000 		.4byte	.LFB4
 2742 0034 C0000000 		.4byte	.LFE4-.LFB4
 2743 0038 00000000 		.4byte	.LFB5
 2744 003c 34000000 		.4byte	.LFE5-.LFB5
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 75


 2745 0040 00000000 		.4byte	.LFB6
 2746 0044 18000000 		.4byte	.LFE6-.LFB6
 2747 0048 00000000 		.4byte	.LFB7
 2748 004c 34000000 		.4byte	.LFE7-.LFB7
 2749 0050 00000000 		.4byte	.LFB8
 2750 0054 24000000 		.4byte	.LFE8-.LFB8
 2751 0058 00000000 		.4byte	.LFB9
 2752 005c 2C000000 		.4byte	.LFE9-.LFB9
 2753 0060 00000000 		.4byte	.LFB10
 2754 0064 68000000 		.4byte	.LFE10-.LFB10
 2755 0068 00000000 		.4byte	.LFB11
 2756 006c 08010000 		.4byte	.LFE11-.LFB11
 2757 0070 00000000 		.4byte	.LFB12
 2758 0074 8C000000 		.4byte	.LFE12-.LFB12
 2759 0078 00000000 		.4byte	.LFB13
 2760 007c 60000000 		.4byte	.LFE13-.LFB13
 2761 0080 00000000 		.4byte	.LFB14
 2762 0084 38000000 		.4byte	.LFE14-.LFB14
 2763 0088 00000000 		.4byte	.LFB15
 2764 008c 20000000 		.4byte	.LFE15-.LFB15
 2765 0090 00000000 		.4byte	.LFB16
 2766 0094 48000000 		.4byte	.LFE16-.LFB16
 2767 0098 00000000 		.4byte	.LFB17
 2768 009c 40000000 		.4byte	.LFE17-.LFB17
 2769 00a0 00000000 		.4byte	.LFB18
 2770 00a4 30000000 		.4byte	.LFE18-.LFB18
 2771 00a8 00000000 		.4byte	0
 2772 00ac 00000000 		.4byte	0
 2773              		.section	.debug_ranges,"",%progbits
 2774              	.Ldebug_ranges0:
 2775 0000 00000000 		.4byte	.LFB0
 2776 0004 38000000 		.4byte	.LFE0
 2777 0008 00000000 		.4byte	.LFB1
 2778 000c 8C010000 		.4byte	.LFE1
 2779 0010 00000000 		.4byte	.LFB2
 2780 0014 D8000000 		.4byte	.LFE2
 2781 0018 00000000 		.4byte	.LFB3
 2782 001c 68000000 		.4byte	.LFE3
 2783 0020 00000000 		.4byte	.LFB4
 2784 0024 C0000000 		.4byte	.LFE4
 2785 0028 00000000 		.4byte	.LFB5
 2786 002c 34000000 		.4byte	.LFE5
 2787 0030 00000000 		.4byte	.LFB6
 2788 0034 18000000 		.4byte	.LFE6
 2789 0038 00000000 		.4byte	.LFB7
 2790 003c 34000000 		.4byte	.LFE7
 2791 0040 00000000 		.4byte	.LFB8
 2792 0044 24000000 		.4byte	.LFE8
 2793 0048 00000000 		.4byte	.LFB9
 2794 004c 2C000000 		.4byte	.LFE9
 2795 0050 00000000 		.4byte	.LFB10
 2796 0054 68000000 		.4byte	.LFE10
 2797 0058 00000000 		.4byte	.LFB11
 2798 005c 08010000 		.4byte	.LFE11
 2799 0060 00000000 		.4byte	.LFB12
 2800 0064 8C000000 		.4byte	.LFE12
 2801 0068 00000000 		.4byte	.LFB13
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 76


 2802 006c 60000000 		.4byte	.LFE13
 2803 0070 00000000 		.4byte	.LFB14
 2804 0074 38000000 		.4byte	.LFE14
 2805 0078 00000000 		.4byte	.LFB15
 2806 007c 20000000 		.4byte	.LFE15
 2807 0080 00000000 		.4byte	.LFB16
 2808 0084 48000000 		.4byte	.LFE16
 2809 0088 00000000 		.4byte	.LFB17
 2810 008c 40000000 		.4byte	.LFE17
 2811 0090 00000000 		.4byte	.LFB18
 2812 0094 30000000 		.4byte	.LFE18
 2813 0098 00000000 		.4byte	0
 2814 009c 00000000 		.4byte	0
 2815              		.section	.debug_line,"",%progbits
 2816              	.Ldebug_line0:
 2817 0000 AA020000 		.section	.debug_str,"MS",%progbits,1
 2817      02007200 
 2817      00000201 
 2817      FB0E0D00 
 2817      01010101 
 2818              	.LASF10:
 2819 0000 75696E74 		.ascii	"uint16\000"
 2819      313600
 2820              	.LASF62:
 2821 0007 55415254 		.ascii	"UART_deviceStatus\000"
 2821      5F646576 
 2821      69636553 
 2821      74617475 
 2821      7300
 2822              	.LASF49:
 2823 0019 55415254 		.ascii	"UART_EnableOutEP\000"
 2823      5F456E61 
 2823      626C654F 
 2823      75744550 
 2823      00
 2824              	.LASF50:
 2825 002a 55415254 		.ascii	"UART_DisableOutEP\000"
 2825      5F446973 
 2825      61626C65 
 2825      4F757445 
 2825      5000
 2826              	.LASF7:
 2827 003c 6C6F6E67 		.ascii	"long long unsigned int\000"
 2827      206C6F6E 
 2827      6720756E 
 2827      7369676E 
 2827      65642069 
 2828              	.LASF22:
 2829 0053 61646472 		.ascii	"addr\000"
 2829      00
 2830              	.LASF42:
 2831 0058 55415254 		.ascii	"UART_GetEPCount\000"
 2831      5F476574 
 2831      4550436F 
 2831      756E7400 
 2832              	.LASF39:
 2833 0068 696E7465 		.ascii	"interfaceNumber\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 77


 2833      72666163 
 2833      654E756D 
 2833      62657200 
 2834              	.LASF41:
 2835 0078 65704E75 		.ascii	"epNumber\000"
 2835      6D626572 
 2835      00
 2836              	.LASF69:
 2837 0081 2E5C4765 		.ascii	".\\Generated_Source\\PSoC5\\UART.c\000"
 2837      6E657261 
 2837      7465645F 
 2837      536F7572 
 2837      63655C50 
 2838              	.LASF28:
 2839 00a1 64657669 		.ascii	"device\000"
 2839      636500
 2840              	.LASF6:
 2841 00a8 6C6F6E67 		.ascii	"long long int\000"
 2841      206C6F6E 
 2841      6720696E 
 2841      7400
 2842              	.LASF0:
 2843 00b6 7369676E 		.ascii	"signed char\000"
 2843      65642063 
 2843      68617200 
 2844              	.LASF4:
 2845 00c2 6C6F6E67 		.ascii	"long int\000"
 2845      20696E74 
 2845      00
 2846              	.LASF70:
 2847 00cb 433A5C55 		.ascii	"C:\\Users\\plod1602\\Desktop\\TAC_2015-09-18\\TAC_P"
 2847      73657273 
 2847      5C706C6F 
 2847      64313630 
 2847      325C4465 
 2848 00f9 534F4335 		.ascii	"SOC5.cydsn\000"
 2848      2E637964 
 2848      736E00
 2849              	.LASF9:
 2850 0104 75696E74 		.ascii	"uint8\000"
 2850      3800
 2851              	.LASF65:
 2852 010a 55415254 		.ascii	"UART_deviceAddress\000"
 2852      5F646576 
 2852      69636541 
 2852      64647265 
 2852      737300
 2853              	.LASF21:
 2854 011d 6570546F 		.ascii	"epToggle\000"
 2854      67676C65 
 2854      00
 2855              	.LASF13:
 2856 0126 646F7562 		.ascii	"double\000"
 2856      6C6500
 2857              	.LASF55:
 2858 012d 706F7765 		.ascii	"powerStatus\000"
 2858      72537461 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 78


 2858      74757300 
 2859              	.LASF11:
 2860 0139 75696E74 		.ascii	"uint32\000"
 2860      333200
 2861              	.LASF45:
 2862 0140 70446174 		.ascii	"pData\000"
 2862      6100
 2863              	.LASF66:
 2864 0146 55415254 		.ascii	"UART_EP\000"
 2864      5F455000 
 2865              	.LASF23:
 2866 014e 65704D6F 		.ascii	"epMode\000"
 2866      646500
 2867              	.LASF31:
 2868 0155 55415254 		.ascii	"UART_Init\000"
 2868      5F496E69 
 2868      7400
 2869              	.LASF56:
 2870 015f 55415254 		.ascii	"UART_RWUEnabled\000"
 2870      5F525755 
 2870      456E6162 
 2870      6C656400 
 2871              	.LASF61:
 2872 016f 55415254 		.ascii	"UART_configurationChanged\000"
 2872      5F636F6E 
 2872      66696775 
 2872      72617469 
 2872      6F6E4368 
 2873              	.LASF8:
 2874 0189 756E7369 		.ascii	"unsigned int\000"
 2874      676E6564 
 2874      20696E74 
 2874      00
 2875              	.LASF60:
 2876 0196 55415254 		.ascii	"UART_configuration\000"
 2876      5F636F6E 
 2876      66696775 
 2876      72617469 
 2876      6F6E00
 2877              	.LASF5:
 2878 01a9 6C6F6E67 		.ascii	"long unsigned int\000"
 2878      20756E73 
 2878      69676E65 
 2878      6420696E 
 2878      7400
 2879              	.LASF3:
 2880 01bb 73686F72 		.ascii	"short unsigned int\000"
 2880      7420756E 
 2880      7369676E 
 2880      65642069 
 2880      6E7400
 2881              	.LASF51:
 2882 01ce 55415254 		.ascii	"UART_Force\000"
 2882      5F466F72 
 2882      636500
 2883              	.LASF33:
 2884 01d9 55415254 		.ascii	"UART_ReInitComponent\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 79


 2884      5F526549 
 2884      6E697443 
 2884      6F6D706F 
 2884      6E656E74 
 2885              	.LASF26:
 2886 01ee 696E7465 		.ascii	"interface\000"
 2886      72666163 
 2886      6500
 2887              	.LASF16:
 2888 01f8 72656733 		.ascii	"reg32\000"
 2888      3200
 2889              	.LASF71:
 2890 01fe 55415254 		.ascii	"UART_GetConfiguration\000"
 2890      5F476574 
 2890      436F6E66 
 2890      69677572 
 2890      6174696F 
 2891              	.LASF20:
 2892 0214 68774570 		.ascii	"hwEpState\000"
 2892      53746174 
 2892      6500
 2893              	.LASF17:
 2894 021e 73697A65 		.ascii	"sizetype\000"
 2894      74797065 
 2894      00
 2895              	.LASF18:
 2896 0227 61747472 		.ascii	"attrib\000"
 2896      696200
 2897              	.LASF68:
 2898 022e 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 2898      4320342E 
 2898      382E3420 
 2898      32303134 
 2898      30353236 
 2899 0261 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 2899      20726576 
 2899      6973696F 
 2899      6E203231 
 2899      31333538 
 2900 0294 30202D66 		.ascii	"0 -ffunction-sections\000"
 2900      66756E63 
 2900      74696F6E 
 2900      2D736563 
 2900      74696F6E 
 2901              	.LASF27:
 2902 02aa 545F5541 		.ascii	"T_UART_EP_CTL_BLOCK\000"
 2902      52545F45 
 2902      505F4354 
 2902      4C5F424C 
 2902      4F434B00 
 2903              	.LASF38:
 2904 02be 55415254 		.ascii	"UART_GetInterfaceSetting\000"
 2904      5F476574 
 2904      496E7465 
 2904      72666163 
 2904      65536574 
 2905              	.LASF12:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 80


 2906 02d7 666C6F61 		.ascii	"float\000"
 2906      7400
 2907              	.LASF19:
 2908 02dd 61706945 		.ascii	"apiEpState\000"
 2908      70537461 
 2908      746500
 2909              	.LASF37:
 2910 02e8 55415254 		.ascii	"UART_IsConfigurationChanged\000"
 2910      5F497343 
 2910      6F6E6669 
 2910      67757261 
 2910      74696F6E 
 2911              	.LASF15:
 2912 0304 72656738 		.ascii	"reg8\000"
 2912      00
 2913              	.LASF32:
 2914 0309 55415254 		.ascii	"UART_InitComponent\000"
 2914      5F496E69 
 2914      74436F6D 
 2914      706F6E65 
 2914      6E7400
 2915              	.LASF1:
 2916 031c 756E7369 		.ascii	"unsigned char\000"
 2916      676E6564 
 2916      20636861 
 2916      7200
 2917              	.LASF67:
 2918 032a 55415254 		.ascii	"UART_lastPacketSize\000"
 2918      5F6C6173 
 2918      74506163 
 2918      6B657453 
 2918      697A6500 
 2919              	.LASF2:
 2920 033e 73686F72 		.ascii	"short int\000"
 2920      7420696E 
 2920      7400
 2921              	.LASF52:
 2922 0348 62537461 		.ascii	"bState\000"
 2922      746500
 2923              	.LASF63:
 2924 034f 55415254 		.ascii	"UART_interfaceNumber\000"
 2924      5F696E74 
 2924      65726661 
 2924      63654E75 
 2924      6D626572 
 2925              	.LASF46:
 2926 0364 6C656E67 		.ascii	"length\000"
 2926      746800
 2927              	.LASF14:
 2928 036b 63686172 		.ascii	"char\000"
 2928      00
 2929              	.LASF59:
 2930 0370 55415254 		.ascii	"UART_transferState\000"
 2930      5F747261 
 2930      6E736665 
 2930      72537461 
 2930      746500
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 81


 2931              	.LASF29:
 2932 0383 6D6F6465 		.ascii	"mode\000"
 2932      00
 2933              	.LASF25:
 2934 0388 62756666 		.ascii	"bufferSize\000"
 2934      65725369 
 2934      7A6500
 2935              	.LASF24:
 2936 0393 62756666 		.ascii	"buffOffset\000"
 2936      4F666673 
 2936      657400
 2937              	.LASF58:
 2938 039e 55415254 		.ascii	"UART_device\000"
 2938      5F646576 
 2938      69636500 
 2939              	.LASF44:
 2940 03aa 55415254 		.ascii	"UART_LoadInEP\000"
 2940      5F4C6F61 
 2940      64496E45 
 2940      5000
 2941              	.LASF54:
 2942 03b8 55415254 		.ascii	"UART_SetPowerStatus\000"
 2942      5F536574 
 2942      506F7765 
 2942      72537461 
 2942      74757300 
 2943              	.LASF35:
 2944 03cc 656E6162 		.ascii	"enableInterrupts\000"
 2944      6C65496E 
 2944      74657272 
 2944      75707473 
 2944      00
 2945              	.LASF57:
 2946 03dd 55415254 		.ascii	"UART_initVar\000"
 2946      5F696E69 
 2946      74566172 
 2946      00
 2947              	.LASF34:
 2948 03ea 55415254 		.ascii	"UART_Stop\000"
 2948      5F53746F 
 2948      7000
 2949              	.LASF30:
 2950 03f4 55415254 		.ascii	"UART_Start\000"
 2950      5F537461 
 2950      727400
 2951              	.LASF48:
 2952 03ff 78666572 		.ascii	"xferCount\000"
 2952      436F756E 
 2952      7400
 2953              	.LASF53:
 2954 0409 55415254 		.ascii	"UART_GetEPAckState\000"
 2954      5F476574 
 2954      45504163 
 2954      6B537461 
 2954      746500
 2955              	.LASF36:
 2956 041c 55415254 		.ascii	"UART_CheckActivity\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccr45dTX.s 			page 82


 2956      5F436865 
 2956      636B4163 
 2956      74697669 
 2956      747900
 2957              	.LASF47:
 2958 042f 55415254 		.ascii	"UART_ReadOutEP\000"
 2958      5F526561 
 2958      644F7574 
 2958      455000
 2959              	.LASF64:
 2960 043e 55415254 		.ascii	"UART_interfaceSetting\000"
 2960      5F696E74 
 2960      65726661 
 2960      63655365 
 2960      7474696E 
 2961              	.LASF43:
 2962 0454 72657375 		.ascii	"result\000"
 2962      6C7400
 2963              	.LASF40:
 2964 045b 55415254 		.ascii	"UART_GetEPState\000"
 2964      5F476574 
 2964      45505374 
 2964      61746500 
 2965              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
