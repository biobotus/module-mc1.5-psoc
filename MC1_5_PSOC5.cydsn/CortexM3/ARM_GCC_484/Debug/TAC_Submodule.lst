ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 6
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.file	"TAC_Submodule.c"
  15              		.text
  16              	.Ltext0:
  17              		.cfi_sections	.debug_frame
  18              		.section	.text.updatePeltierOutput,"ax",%progbits
  19              		.align	2
  20              		.global	updatePeltierOutput
  21              		.thumb
  22              		.thumb_func
  23              		.type	updatePeltierOutput, %function
  24              	updatePeltierOutput:
  25              	.LFB56:
  26              		.file 1 ".\\TAC_Submodule.c"
   1:.\TAC_Submodule.c **** /* ========================================
   2:.\TAC_Submodule.c ****  *
   3:.\TAC_Submodule.c ****  * Copyright YOUR COMPANY, THE YEAR
   4:.\TAC_Submodule.c ****  * All Rights Reserved
   5:.\TAC_Submodule.c ****  * UNPUBLISHED, LICENSED SOFTWARE.
   6:.\TAC_Submodule.c ****  *
   7:.\TAC_Submodule.c ****  * CONFIDENTIAL AND PROPRIETARY INFORMATION
   8:.\TAC_Submodule.c ****  * WHICH IS THE PROPERTY OF your company.
   9:.\TAC_Submodule.c ****  *
  10:.\TAC_Submodule.c ****  * ========================================
  11:.\TAC_Submodule.c **** */
  12:.\TAC_Submodule.c **** #include "TAC_Submodule.h"
  13:.\TAC_Submodule.c **** #include "PeltierCalibration.h"
  14:.\TAC_Submodule.c **** 
  15:.\TAC_Submodule.c **** void updatePeltierOutput(Tac_Submodule* TACPtr)//, int16 currentTemp)
  16:.\TAC_Submodule.c **** {
  27              		.loc 1 16 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 8
  30              		@ frame_needed = 1, uses_anonymous_args = 0
  31 0000 80B5     		push	{r7, lr}
  32              		.cfi_def_cfa_offset 8
  33              		.cfi_offset 7, -8
  34              		.cfi_offset 14, -4
  35 0002 82B0     		sub	sp, sp, #8
  36              		.cfi_def_cfa_offset 16
  37 0004 00AF     		add	r7, sp, #0
  38              		.cfi_def_cfa_register 7
  39 0006 7860     		str	r0, [r7, #4]
  17:.\TAC_Submodule.c ****     // Updates current temperature of the Peltier element by reading the corresponding thermistor.
  18:.\TAC_Submodule.c ****     TACPtr->currentTemperature = getThermistorTemp(TACPtr->subModuleId);    
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 2


  40              		.loc 1 18 0
  41 0008 7B68     		ldr	r3, [r7, #4]
  42 000a 1B88     		ldrh	r3, [r3]
  43 000c DBB2     		uxtb	r3, r3
  44 000e 1846     		mov	r0, r3
  45 0010 FFF7FEFF 		bl	getThermistorTemp
  46 0014 0346     		mov	r3, r0
  47 0016 1A46     		mov	r2, r3
  48 0018 7B68     		ldr	r3, [r7, #4]
  49 001a 1A81     		strh	r2, [r3, #8]	@ movhi
  19:.\TAC_Submodule.c ****     
  20:.\TAC_Submodule.c ****     // If the module is in waiting mode and the peltier is still on, we shut it off.
  21:.\TAC_Submodule.c ****     if (TACPtr->temperatureMode == Waiting && TACPtr->peltierState == peltierEnabled)
  50              		.loc 1 21 0
  51 001c 7B68     		ldr	r3, [r7, #4]
  52 001e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  53 0020 042B     		cmp	r3, #4
  54 0022 0BD1     		bne	.L2
  55              		.loc 1 21 0 is_stmt 0 discriminator 1
  56 0024 7B68     		ldr	r3, [r7, #4]
  57 0026 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  58 0028 012B     		cmp	r3, #1
  59 002a 07D1     		bne	.L2
  22:.\TAC_Submodule.c ****     {
  23:.\TAC_Submodule.c ****         //TACPtr->peltierState = peltierDisabled; //Not needed as it is updated in the function its
  24:.\TAC_Submodule.c ****         changePeltierModuleState(peltierDisabled,TACPtr->subModuleId);
  60              		.loc 1 24 0 is_stmt 1
  61 002c 7B68     		ldr	r3, [r7, #4]
  62 002e 1B88     		ldrh	r3, [r3]
  63 0030 DBB2     		uxtb	r3, r3
  64 0032 0020     		movs	r0, #0
  65 0034 1946     		mov	r1, r3
  66 0036 FFF7FEFF 		bl	changePeltierModuleState
  67 003a 0EE0     		b	.L3
  68              	.L2:
  25:.\TAC_Submodule.c ****     }
  26:.\TAC_Submodule.c ****     // Else, if the module is not in waiting mode but the peltier is off, we put it on.
  27:.\TAC_Submodule.c ****     else if (TACPtr->temperatureMode != Waiting && TACPtr->peltierState == peltierDisabled)
  69              		.loc 1 27 0
  70 003c 7B68     		ldr	r3, [r7, #4]
  71 003e 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  72 0040 042B     		cmp	r3, #4
  73 0042 0AD0     		beq	.L3
  74              		.loc 1 27 0 is_stmt 0 discriminator 1
  75 0044 7B68     		ldr	r3, [r7, #4]
  76 0046 1B79     		ldrb	r3, [r3, #4]	@ zero_extendqisi2
  77 0048 002B     		cmp	r3, #0
  78 004a 06D1     		bne	.L3
  28:.\TAC_Submodule.c ****     {
  29:.\TAC_Submodule.c ****         //TACPtr->peltierState = peltierEnabled; //Not needed as it is updated in the function itse
  30:.\TAC_Submodule.c ****         changePeltierModuleState(peltierEnabled,TACPtr->subModuleId);
  79              		.loc 1 30 0 is_stmt 1
  80 004c 7B68     		ldr	r3, [r7, #4]
  81 004e 1B88     		ldrh	r3, [r3]
  82 0050 DBB2     		uxtb	r3, r3
  83 0052 0120     		movs	r0, #1
  84 0054 1946     		mov	r1, r3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 3


  85 0056 FFF7FEFF 		bl	changePeltierModuleState
  86              	.L3:
  31:.\TAC_Submodule.c ****     }
  32:.\TAC_Submodule.c ****     
  33:.\TAC_Submodule.c ****     // Verify if the user asked to stop temperature maintain. If not, go ahead with temperature con
  34:.\TAC_Submodule.c ****     if (TACPtr->temperatureMode!= Waiting)
  87              		.loc 1 34 0
  88 005a 7B68     		ldr	r3, [r7, #4]
  89 005c 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
  90 005e 042B     		cmp	r3, #4
  91 0060 00F0CB80 		beq	.L1
  35:.\TAC_Submodule.c ****     { 
  36:.\TAC_Submodule.c ****         // If we are in temperature control mode, we make sure the fan runs at 100% of its speed.
  37:.\TAC_Submodule.c ****         if (TACPtr->fanState != fanEnabled || TACPtr->fanSpeed != 100)
  92              		.loc 1 37 0
  93 0064 7B68     		ldr	r3, [r7, #4]
  94 0066 5B7D     		ldrb	r3, [r3, #21]	@ zero_extendqisi2
  95 0068 012B     		cmp	r3, #1
  96 006a 03D1     		bne	.L5
  97              		.loc 1 37 0 is_stmt 0 discriminator 1
  98 006c 7B68     		ldr	r3, [r7, #4]
  99 006e 1B7D     		ldrb	r3, [r3, #20]	@ zero_extendqisi2
 100 0070 642B     		cmp	r3, #100
 101 0072 0DD0     		beq	.L6
 102              	.L5:
  38:.\TAC_Submodule.c ****         {
  39:.\TAC_Submodule.c ****             //TACPtr->fanState = fanEnabled; // Already done in changeFanState function.
  40:.\TAC_Submodule.c ****             changeFanState(fanEnabled, TACPtr->subModuleId);
 103              		.loc 1 40 0 is_stmt 1
 104 0074 7B68     		ldr	r3, [r7, #4]
 105 0076 1B88     		ldrh	r3, [r3]
 106 0078 DBB2     		uxtb	r3, r3
 107 007a 0120     		movs	r0, #1
 108 007c 1946     		mov	r1, r3
 109 007e FFF7FEFF 		bl	changeFanState
  41:.\TAC_Submodule.c ****             changeFanSpeed(100,TACPtr->subModuleId);
 110              		.loc 1 41 0
 111 0082 7B68     		ldr	r3, [r7, #4]
 112 0084 1B88     		ldrh	r3, [r3]
 113 0086 DBB2     		uxtb	r3, r3
 114 0088 6420     		movs	r0, #100
 115 008a 1946     		mov	r1, r3
 116 008c FFF7FEFF 		bl	changeFanSpeed
 117              	.L6:
  42:.\TAC_Submodule.c ****         }        
  43:.\TAC_Submodule.c ****         
  44:.\TAC_Submodule.c ****         // Verify if the peltier element is supposed to heat or cool
  45:.\TAC_Submodule.c ****         if (TACPtr->temperatureMode == Maintaining_heat)
 118              		.loc 1 45 0
 119 0090 7B68     		ldr	r3, [r7, #4]
 120 0092 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 121 0094 002B     		cmp	r3, #0
 122 0096 47D1     		bne	.L7
  46:.\TAC_Submodule.c ****         {
  47:.\TAC_Submodule.c ****             // Make sure that the direction of the current is set to heat
  48:.\TAC_Submodule.c ****             if(TACPtr->currentDirection != Heating)
 123              		.loc 1 48 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 4


 124 0098 7B68     		ldr	r3, [r7, #4]
 125 009a 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 126 009c 022B     		cmp	r3, #2
 127 009e 06D0     		beq	.L8
  49:.\TAC_Submodule.c ****             {
  50:.\TAC_Submodule.c ****                 //TACPtr->currentDirection = Heating; // Already done in the function changePeltier
  51:.\TAC_Submodule.c ****                 changePeltierModuleCurrentDirection(Heating, TACPtr->subModuleId);                
 128              		.loc 1 51 0
 129 00a0 7B68     		ldr	r3, [r7, #4]
 130 00a2 1B88     		ldrh	r3, [r3]
 131 00a4 DBB2     		uxtb	r3, r3
 132 00a6 0220     		movs	r0, #2
 133 00a8 1946     		mov	r1, r3
 134 00aa FFF7FEFF 		bl	changePeltierModuleCurrentDirection
 135              	.L8:
  52:.\TAC_Submodule.c ****             }          
  53:.\TAC_Submodule.c ****             
  54:.\TAC_Submodule.c ****             // 1- If the current temperature is lower than the target temperature - 3 times the max
  55:.\TAC_Submodule.c ****             //    we heat as much as possible.
  56:.\TAC_Submodule.c ****             if (TACPtr->currentTemperature < (TACPtr->targetTemperature - 3*TACPtr->maxTemperatureD
 136              		.loc 1 56 0
 137 00ae 7B68     		ldr	r3, [r7, #4]
 138 00b0 1B89     		ldrh	r3, [r3, #8]
 139 00b2 1AB2     		sxth	r2, r3
 140 00b4 7B68     		ldr	r3, [r7, #4]
 141 00b6 DB88     		ldrh	r3, [r3, #6]
 142 00b8 19B2     		sxth	r1, r3
 143 00ba 7B68     		ldr	r3, [r7, #4]
 144 00bc 5B88     		ldrh	r3, [r3, #2]
 145 00be 1846     		mov	r0, r3
 146 00c0 9B00     		lsls	r3, r3, #2
 147 00c2 C31A     		subs	r3, r0, r3
 148 00c4 0B44     		add	r3, r3, r1
 149 00c6 9A42     		cmp	r2, r3
 150 00c8 0CDA     		bge	.L9
  57:.\TAC_Submodule.c ****             {
  58:.\TAC_Submodule.c ****                 // If the peltier is not already set at it's maximum, we do it here to heat as much
  59:.\TAC_Submodule.c ****                 if (TACPtr->pwmCompareValue != 100)
 151              		.loc 1 59 0
 152 00ca 7B68     		ldr	r3, [r7, #4]
 153 00cc 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 154 00ce 642B     		cmp	r3, #100
 155 00d0 00F09380 		beq	.L1
  60:.\TAC_Submodule.c ****                 {
  61:.\TAC_Submodule.c ****                     changePeltierPWMValue(100,TACPtr->subModuleId);   
 156              		.loc 1 61 0
 157 00d4 7B68     		ldr	r3, [r7, #4]
 158 00d6 1B88     		ldrh	r3, [r3]
 159 00d8 DBB2     		uxtb	r3, r3
 160 00da 6420     		movs	r0, #100
 161 00dc 1946     		mov	r1, r3
 162 00de FFF7FEFF 		bl	changePeltierPWMValue
 163 00e2 8AE0     		b	.L1
 164              	.L9:
  62:.\TAC_Submodule.c ****                 }                                                    
  63:.\TAC_Submodule.c ****             }
  64:.\TAC_Submodule.c ****             // 2- If the current temperature is between 3 times the maximum temperature deviation f
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 5


  65:.\TAC_Submodule.c ****             //    found in the calibration table.
  66:.\TAC_Submodule.c ****             else if(TACPtr->currentTemperature < (TACPtr->targetTemperature - TACPtr->maxTemperatur
 165              		.loc 1 66 0
 166 00e4 7B68     		ldr	r3, [r7, #4]
 167 00e6 1B89     		ldrh	r3, [r3, #8]
 168 00e8 1AB2     		sxth	r2, r3
 169 00ea 7B68     		ldr	r3, [r7, #4]
 170 00ec DB88     		ldrh	r3, [r3, #6]
 171 00ee 19B2     		sxth	r1, r3
 172 00f0 7B68     		ldr	r3, [r7, #4]
 173 00f2 5B88     		ldrh	r3, [r3, #2]
 174 00f4 CB1A     		subs	r3, r1, r3
 175 00f6 9A42     		cmp	r2, r3
 176 00f8 07DA     		bge	.L12
  67:.\TAC_Submodule.c ****             {
  68:.\TAC_Submodule.c ****                 // If the pwm value from the calibration table is not up to date to reach the targe
  69:.\TAC_Submodule.c ****                 if (TACPtr->pwmValueFromCalibration == OutDated)
 177              		.loc 1 69 0
 178 00fa 7B68     		ldr	r3, [r7, #4]
 179 00fc 5B7C     		ldrb	r3, [r3, #17]	@ zero_extendqisi2
 180 00fe 002B     		cmp	r3, #0
 181 0100 7BD1     		bne	.L1
  70:.\TAC_Submodule.c ****                 {
  71:.\TAC_Submodule.c ****                     
  72:.\TAC_Submodule.c ****                     TACPtr->pwmValueFromCalibration = UpToDate;                    
 182              		.loc 1 72 0
 183 0102 7B68     		ldr	r3, [r7, #4]
 184 0104 0122     		movs	r2, #1
 185 0106 5A74     		strb	r2, [r3, #17]
 186 0108 77E0     		b	.L1
 187              	.L12:
  73:.\TAC_Submodule.c ****                 }              
  74:.\TAC_Submodule.c ****                 
  75:.\TAC_Submodule.c ****                 // ALLER CHERCHER DANS LA TABLE DE CALIBRATION LA VALEUR IDÉALE DE MAINTIEN.
  76:.\TAC_Submodule.c ****                 // AJOUTER UN PARAMÈTRE DANS LA STRUCTURE POUR DIRE SI ELLE EST DÉJÀ DÉTERMINÉ
  77:.\TAC_Submodule.c ****                 // AFIN DE NE PAS AVOIR À LA CHANGER TOUT LE TEMPS EN ENTRANT DANS CETTE BOUCLE-CI
  78:.\TAC_Submodule.c ****                 // Heat with the value from the calibration table that is the nearest to the target
  79:.\TAC_Submodule.c ****             }
  80:.\TAC_Submodule.c ****             // 3- If we are within maxTemperatureDeviation, we stop heating until we get low enough
  81:.\TAC_Submodule.c ****             else
  82:.\TAC_Submodule.c ****             {              
  83:.\TAC_Submodule.c ****                 // If the peltier is not already set to do nothing, we do it here.
  84:.\TAC_Submodule.c ****                 if (TACPtr->pwmCompareValue != 0)
 188              		.loc 1 84 0
 189 010a 7B68     		ldr	r3, [r7, #4]
 190 010c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 191 010e 002B     		cmp	r3, #0
 192 0110 06D0     		beq	.L14
  85:.\TAC_Submodule.c ****                 {
  86:.\TAC_Submodule.c ****                     changePeltierPWMValue(0,TACPtr->subModuleId);   
 193              		.loc 1 86 0
 194 0112 7B68     		ldr	r3, [r7, #4]
 195 0114 1B88     		ldrh	r3, [r3]
 196 0116 DBB2     		uxtb	r3, r3
 197 0118 0020     		movs	r0, #0
 198 011a 1946     		mov	r1, r3
 199 011c FFF7FEFF 		bl	changePeltierPWMValue
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 6


 200              	.L14:
  87:.\TAC_Submodule.c ****                 } 
  88:.\TAC_Submodule.c ****                 // Update the TAC temperature to waiting for a drop.
  89:.\TAC_Submodule.c ****                 TACPtr->temperatureMode = Waiting_drop;
 201              		.loc 1 89 0
 202 0120 7B68     		ldr	r3, [r7, #4]
 203 0122 0122     		movs	r2, #1
 204 0124 1A73     		strb	r2, [r3, #12]
 205 0126 68E0     		b	.L1
 206              	.L7:
  90:.\TAC_Submodule.c ****             }      
  91:.\TAC_Submodule.c ****         } 
  92:.\TAC_Submodule.c ****         // If we had stopped heating, we wait for the temperature to drop below target temperature 
  93:.\TAC_Submodule.c ****         // before setting it back to maintaining_heat.
  94:.\TAC_Submodule.c ****         else if (TACPtr->temperatureMode == Waiting_drop && TACPtr->currentTemperature < (TACPtr->t
 207              		.loc 1 94 0
 208 0128 7B68     		ldr	r3, [r7, #4]
 209 012a 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 210 012c 012B     		cmp	r3, #1
 211 012e 0ED1     		bne	.L15
 212              		.loc 1 94 0 is_stmt 0 discriminator 1
 213 0130 7B68     		ldr	r3, [r7, #4]
 214 0132 1A89     		ldrh	r2, [r3, #8]
 215 0134 7B68     		ldr	r3, [r7, #4]
 216 0136 DB88     		ldrh	r3, [r3, #6]
 217 0138 12B2     		sxth	r2, r2
 218 013a 1BB2     		sxth	r3, r3
 219 013c 9A42     		cmp	r2, r3
 220 013e 06DA     		bge	.L15
  95:.\TAC_Submodule.c ****         {
  96:.\TAC_Submodule.c ****             TACPtr->temperatureMode = Maintaining_heat;
 221              		.loc 1 96 0 is_stmt 1
 222 0140 7B68     		ldr	r3, [r7, #4]
 223 0142 0022     		movs	r2, #0
 224 0144 1A73     		strb	r2, [r3, #12]
  97:.\TAC_Submodule.c ****             TACPtr->currentDirection = NotSet;
 225              		.loc 1 97 0
 226 0146 7B68     		ldr	r3, [r7, #4]
 227 0148 0022     		movs	r2, #0
 228 014a 5A73     		strb	r2, [r3, #13]
 229 014c 55E0     		b	.L1
 230              	.L15:
  98:.\TAC_Submodule.c ****         }        
  99:.\TAC_Submodule.c ****         
 100:.\TAC_Submodule.c ****         // Confirm that the peltier element is supposed to cool down the module
 101:.\TAC_Submodule.c ****         else if (TACPtr->temperatureMode == Maintaining_cool)
 231              		.loc 1 101 0
 232 014e 7B68     		ldr	r3, [r7, #4]
 233 0150 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 234 0152 022B     		cmp	r3, #2
 235 0154 3FD1     		bne	.L16
 102:.\TAC_Submodule.c ****         {
 103:.\TAC_Submodule.c ****             if(TACPtr->currentDirection != Cooling)
 236              		.loc 1 103 0
 237 0156 7B68     		ldr	r3, [r7, #4]
 238 0158 5B7B     		ldrb	r3, [r3, #13]	@ zero_extendqisi2
 239 015a 012B     		cmp	r3, #1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 7


 240 015c 06D0     		beq	.L17
 104:.\TAC_Submodule.c ****             {
 105:.\TAC_Submodule.c ****                 //TACPtr->currentDirection = Cooling; // Already done in the function changePeltier
 106:.\TAC_Submodule.c ****                 changePeltierModuleCurrentDirection(Cooling, TACPtr->subModuleId);                
 241              		.loc 1 106 0
 242 015e 7B68     		ldr	r3, [r7, #4]
 243 0160 1B88     		ldrh	r3, [r3]
 244 0162 DBB2     		uxtb	r3, r3
 245 0164 0120     		movs	r0, #1
 246 0166 1946     		mov	r1, r3
 247 0168 FFF7FEFF 		bl	changePeltierModuleCurrentDirection
 248              	.L17:
 107:.\TAC_Submodule.c ****             }
 108:.\TAC_Submodule.c ****             // The following actions are taken depending on the situation :
 109:.\TAC_Submodule.c ****             // 1- If the current temperature is higher than the target temperature + 3 times the ma
 110:.\TAC_Submodule.c ****             if (TACPtr->currentTemperature > (TACPtr->targetTemperature + 3*TACPtr->maxTemperatureD
 249              		.loc 1 110 0
 250 016c 7B68     		ldr	r3, [r7, #4]
 251 016e 1B89     		ldrh	r3, [r3, #8]
 252 0170 19B2     		sxth	r1, r3
 253 0172 7B68     		ldr	r3, [r7, #4]
 254 0174 DB88     		ldrh	r3, [r3, #6]
 255 0176 18B2     		sxth	r0, r3
 256 0178 7B68     		ldr	r3, [r7, #4]
 257 017a 5B88     		ldrh	r3, [r3, #2]
 258 017c 1A46     		mov	r2, r3
 259 017e 1346     		mov	r3, r2
 260 0180 5B00     		lsls	r3, r3, #1
 261 0182 1344     		add	r3, r3, r2
 262 0184 0344     		add	r3, r3, r0
 263 0186 9942     		cmp	r1, r3
 264 0188 0BDD     		ble	.L18
 111:.\TAC_Submodule.c ****             {
 112:.\TAC_Submodule.c ****                 // If the peltier is not already set at it's maximum, we do it here to cool as much
 113:.\TAC_Submodule.c ****                 if (TACPtr->pwmCompareValue != 100)
 265              		.loc 1 113 0
 266 018a 7B68     		ldr	r3, [r7, #4]
 267 018c 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 268 018e 642B     		cmp	r3, #100
 269 0190 33D0     		beq	.L1
 114:.\TAC_Submodule.c ****                 {
 115:.\TAC_Submodule.c ****                     changePeltierPWMValue(100,TACPtr->subModuleId);   
 270              		.loc 1 115 0
 271 0192 7B68     		ldr	r3, [r7, #4]
 272 0194 1B88     		ldrh	r3, [r3]
 273 0196 DBB2     		uxtb	r3, r3
 274 0198 6420     		movs	r0, #100
 275 019a 1946     		mov	r1, r3
 276 019c FFF7FEFF 		bl	changePeltierPWMValue
 277 01a0 2BE0     		b	.L1
 278              	.L18:
 116:.\TAC_Submodule.c ****                 }                 
 117:.\TAC_Submodule.c ****             }
 118:.\TAC_Submodule.c ****             // 2- If the current temperature is between 3 times the maximum temperature deviation f
 119:.\TAC_Submodule.c ****             //    found in the calibration table.
 120:.\TAC_Submodule.c ****             else if(TACPtr->currentTemperature < (TACPtr->targetTemperature - TACPtr->maxTemperatur
 279              		.loc 1 120 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 8


 280 01a2 7B68     		ldr	r3, [r7, #4]
 281 01a4 1B89     		ldrh	r3, [r3, #8]
 282 01a6 1AB2     		sxth	r2, r3
 283 01a8 7B68     		ldr	r3, [r7, #4]
 284 01aa DB88     		ldrh	r3, [r3, #6]
 285 01ac 19B2     		sxth	r1, r3
 286 01ae 7B68     		ldr	r3, [r7, #4]
 287 01b0 5B88     		ldrh	r3, [r3, #2]
 288 01b2 CB1A     		subs	r3, r1, r3
 289 01b4 9A42     		cmp	r2, r3
 290 01b6 20DB     		blt	.L1
 121:.\TAC_Submodule.c ****             {
 122:.\TAC_Submodule.c ****                 // ALLER CHERCHER DANS LA TABLE DE CALIBRATION LA VALEUR IDÉALE DE MAINTIEN.
 123:.\TAC_Submodule.c ****                 // AJOUTER UN PARAMÈTRE DANS LA STRUCTURE POUR DIRE SI ELLE EST DÉJÀ DÉTERMINÉ
 124:.\TAC_Submodule.c ****                 // AFIN DE NE PAS AVOIR À LA CHANGER TOUT LE TEMPS EN ENTRANT DANS CETTE BOUCLE-CI
 125:.\TAC_Submodule.c ****                 // Cool with the value from the calibration table that is the nearest to the target
 126:.\TAC_Submodule.c ****             }
 127:.\TAC_Submodule.c ****             // 3- If we are within maxTemperatureDeviation, we stop cooling until we get high enoug
 128:.\TAC_Submodule.c ****             else
 129:.\TAC_Submodule.c ****             {
 130:.\TAC_Submodule.c ****                 // If the peltier is not already set to do nothing, we do it here.
 131:.\TAC_Submodule.c ****                 if (TACPtr->pwmCompareValue != 0)
 291              		.loc 1 131 0
 292 01b8 7B68     		ldr	r3, [r7, #4]
 293 01ba 9B7B     		ldrb	r3, [r3, #14]	@ zero_extendqisi2
 294 01bc 002B     		cmp	r3, #0
 295 01be 06D0     		beq	.L21
 132:.\TAC_Submodule.c ****                 {
 133:.\TAC_Submodule.c ****                     changePeltierPWMValue(0,TACPtr->subModuleId);   
 296              		.loc 1 133 0
 297 01c0 7B68     		ldr	r3, [r7, #4]
 298 01c2 1B88     		ldrh	r3, [r3]
 299 01c4 DBB2     		uxtb	r3, r3
 300 01c6 0020     		movs	r0, #0
 301 01c8 1946     		mov	r1, r3
 302 01ca FFF7FEFF 		bl	changePeltierPWMValue
 303              	.L21:
 134:.\TAC_Submodule.c ****                 } 
 135:.\TAC_Submodule.c ****                 
 136:.\TAC_Submodule.c ****                 TACPtr->temperatureMode = Waiting_overshoot;
 304              		.loc 1 136 0
 305 01ce 7B68     		ldr	r3, [r7, #4]
 306 01d0 0322     		movs	r2, #3
 307 01d2 1A73     		strb	r2, [r3, #12]
 308 01d4 11E0     		b	.L1
 309              	.L16:
 137:.\TAC_Submodule.c ****             }          
 138:.\TAC_Submodule.c ****         } // If we had stopped cooling, we wait for the temperature to get higher than target tempe
 139:.\TAC_Submodule.c ****           // before setting it back to maintaining_cool.  
 140:.\TAC_Submodule.c ****         else if (TACPtr->temperatureMode == Waiting_overshoot && TACPtr->currentTemperature > (TACP
 310              		.loc 1 140 0
 311 01d6 7B68     		ldr	r3, [r7, #4]
 312 01d8 1B7B     		ldrb	r3, [r3, #12]	@ zero_extendqisi2
 313 01da 032B     		cmp	r3, #3
 314 01dc 0DD1     		bne	.L1
 315              		.loc 1 140 0 is_stmt 0 discriminator 1
 316 01de 7B68     		ldr	r3, [r7, #4]
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 9


 317 01e0 1A89     		ldrh	r2, [r3, #8]
 318 01e2 7B68     		ldr	r3, [r7, #4]
 319 01e4 DB88     		ldrh	r3, [r3, #6]
 320 01e6 12B2     		sxth	r2, r2
 321 01e8 1BB2     		sxth	r3, r3
 322 01ea 9A42     		cmp	r2, r3
 323 01ec 05DD     		ble	.L1
 141:.\TAC_Submodule.c ****         {
 142:.\TAC_Submodule.c ****             TACPtr->temperatureMode = Maintaining_cool;
 324              		.loc 1 142 0 is_stmt 1
 325 01ee 7B68     		ldr	r3, [r7, #4]
 326 01f0 0222     		movs	r2, #2
 327 01f2 1A73     		strb	r2, [r3, #12]
 143:.\TAC_Submodule.c ****             TACPtr->currentDirection = NotSet;
 328              		.loc 1 143 0
 329 01f4 7B68     		ldr	r3, [r7, #4]
 330 01f6 0022     		movs	r2, #0
 331 01f8 5A73     		strb	r2, [r3, #13]
 332              	.L1:
 144:.\TAC_Submodule.c ****         }        
 145:.\TAC_Submodule.c ****     }
 146:.\TAC_Submodule.c **** }
 333              		.loc 1 146 0
 334 01fa 0837     		adds	r7, r7, #8
 335 01fc BD46     		mov	sp, r7
 336              		@ sp needed
 337 01fe 80BD     		pop	{r7, pc}
 338              		.cfi_endproc
 339              	.LFE56:
 340              		.size	updatePeltierOutput, .-updatePeltierOutput
 341              		.section	.text.updatePwmValueFromCalibrationTable,"ax",%progbits
 342              		.align	2
 343              		.global	updatePwmValueFromCalibrationTable
 344              		.thumb
 345              		.thumb_func
 346              		.type	updatePwmValueFromCalibrationTable, %function
 347              	updatePwmValueFromCalibrationTable:
 348              	.LFB57:
 147:.\TAC_Submodule.c **** 
 148:.\TAC_Submodule.c **** void updatePwmValueFromCalibrationTable(Tac_Submodule* TACPtr)
 149:.\TAC_Submodule.c **** {
 349              		.loc 1 149 0
 350              		.cfi_startproc
 351              		@ args = 0, pretend = 0, frame = 24
 352              		@ frame_needed = 1, uses_anonymous_args = 0
 353              		@ link register save eliminated.
 354 0000 80B4     		push	{r7}
 355              		.cfi_def_cfa_offset 4
 356              		.cfi_offset 7, -4
 357 0002 87B0     		sub	sp, sp, #28
 358              		.cfi_def_cfa_offset 32
 359 0004 00AF     		add	r7, sp, #0
 360              		.cfi_def_cfa_register 7
 361 0006 7860     		str	r0, [r7, #4]
 150:.\TAC_Submodule.c ****     int x = 0;
 362              		.loc 1 150 0
 363 0008 0023     		movs	r3, #0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 10


 364 000a 7B61     		str	r3, [r7, #20]
 151:.\TAC_Submodule.c ****     int bestMatchIndex;
 152:.\TAC_Submodule.c ****     
 153:.\TAC_Submodule.c ****     int diffFromTarget = 0;
 365              		.loc 1 153 0
 366 000c 0023     		movs	r3, #0
 367 000e BB60     		str	r3, [r7, #8]
 154:.\TAC_Submodule.c ****     int precedingDiffFromTarget = 10000000;    
 368              		.loc 1 154 0
 369 0010 184B     		ldr	r3, .L26
 370 0012 FB60     		str	r3, [r7, #12]
 155:.\TAC_Submodule.c ****    
 156:.\TAC_Submodule.c ****     for (x=0; x<CALIBRATION_TABLE_SIZE; x++)
 371              		.loc 1 156 0
 372 0014 0023     		movs	r3, #0
 373 0016 7B61     		str	r3, [r7, #20]
 374 0018 19E0     		b	.L23
 375              	.L25:
 157:.\TAC_Submodule.c ****     {
 158:.\TAC_Submodule.c ****         diffFromTarget = abs(TACPtr->targetTemperature - TACPtr->calibrationValuesPtr[x]);
 376              		.loc 1 158 0
 377 001a 7B68     		ldr	r3, [r7, #4]
 378 001c DB88     		ldrh	r3, [r3, #6]
 379 001e 1AB2     		sxth	r2, r3
 380 0020 7B68     		ldr	r3, [r7, #4]
 381 0022 9969     		ldr	r1, [r3, #24]
 382 0024 7B69     		ldr	r3, [r7, #20]
 383 0026 5B00     		lsls	r3, r3, #1
 384 0028 0B44     		add	r3, r3, r1
 385 002a 1B88     		ldrh	r3, [r3]
 386 002c 1BB2     		sxth	r3, r3
 387 002e D31A     		subs	r3, r2, r3
 388 0030 002B     		cmp	r3, #0
 389 0032 B8BF     		it	lt
 390 0034 5B42     		rsblt	r3, r3, #0
 391 0036 BB60     		str	r3, [r7, #8]
 159:.\TAC_Submodule.c ****         
 160:.\TAC_Submodule.c ****         if (diffFromTarget < precedingDiffFromTarget)
 392              		.loc 1 160 0
 393 0038 BA68     		ldr	r2, [r7, #8]
 394 003a FB68     		ldr	r3, [r7, #12]
 395 003c 9A42     		cmp	r2, r3
 396 003e 03DA     		bge	.L24
 161:.\TAC_Submodule.c ****         {
 162:.\TAC_Submodule.c ****             precedingDiffFromTarget = diffFromTarget;
 397              		.loc 1 162 0
 398 0040 BB68     		ldr	r3, [r7, #8]
 399 0042 FB60     		str	r3, [r7, #12]
 163:.\TAC_Submodule.c ****             bestMatchIndex = x;
 400              		.loc 1 163 0
 401 0044 7B69     		ldr	r3, [r7, #20]
 402 0046 3B61     		str	r3, [r7, #16]
 403              	.L24:
 156:.\TAC_Submodule.c ****     for (x=0; x<CALIBRATION_TABLE_SIZE; x++)
 404              		.loc 1 156 0
 405 0048 7B69     		ldr	r3, [r7, #20]
 406 004a 0133     		adds	r3, r3, #1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 11


 407 004c 7B61     		str	r3, [r7, #20]
 408              	.L23:
 156:.\TAC_Submodule.c ****     for (x=0; x<CALIBRATION_TABLE_SIZE; x++)
 409              		.loc 1 156 0 is_stmt 0 discriminator 1
 410 004e 7B69     		ldr	r3, [r7, #20]
 411 0050 632B     		cmp	r3, #99
 412 0052 E2DD     		ble	.L25
 164:.\TAC_Submodule.c ****         }
 165:.\TAC_Submodule.c ****     }    
 166:.\TAC_Submodule.c ****     TACPtr->desiredPwmPercentage = TACPtr->percentageValuesPtr[bestMatchIndex];
 413              		.loc 1 166 0 is_stmt 1
 414 0054 7B68     		ldr	r3, [r7, #4]
 415 0056 DA69     		ldr	r2, [r3, #28]
 416 0058 3B69     		ldr	r3, [r7, #16]
 417 005a 1344     		add	r3, r3, r2
 418 005c 1A78     		ldrb	r2, [r3]	@ zero_extendqisi2
 419 005e 7B68     		ldr	r3, [r7, #4]
 420 0060 DA73     		strb	r2, [r3, #15]
 167:.\TAC_Submodule.c ****     TACPtr->pwmValueFromCalibration = UpToDate;
 421              		.loc 1 167 0
 422 0062 7B68     		ldr	r3, [r7, #4]
 423 0064 0122     		movs	r2, #1
 424 0066 5A74     		strb	r2, [r3, #17]
 168:.\TAC_Submodule.c **** }
 425              		.loc 1 168 0
 426 0068 1C37     		adds	r7, r7, #28
 427 006a BD46     		mov	sp, r7
 428              		@ sp needed
 429 006c 5DF8047B 		ldr	r7, [sp], #4
 430 0070 7047     		bx	lr
 431              	.L27:
 432 0072 00BF     		.align	2
 433              	.L26:
 434 0074 80969800 		.word	10000000
 435              		.cfi_endproc
 436              	.LFE57:
 437              		.size	updatePwmValueFromCalibrationTable, .-updatePwmValueFromCalibrationTable
 438              		.text
 439              	.Letext0:
 440              		.file 2 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 441              		.file 3 "c:\\program files (x86)\\cypress\\psoc creator\\3.2\\psoc creator\\import\\gnu\\arm\\4.8.
 442              		.file 4 "Generated_Source\\PSoC5/cytypes.h"
 443              		.file 5 ".\\TAC_Submodule.h"
 444              		.file 6 "Generated_Source\\PSoC5/core_cm3.h"
 445              		.section	.debug_info,"",%progbits
 446              	.Ldebug_info0:
 447 0000 7F030000 		.4byte	0x37f
 448 0004 0400     		.2byte	0x4
 449 0006 00000000 		.4byte	.Ldebug_abbrev0
 450 000a 04       		.byte	0x4
 451 000b 01       		.uleb128 0x1
 452 000c BD000000 		.4byte	.LASF74
 453 0010 01       		.byte	0x1
 454 0011 18000000 		.4byte	.LASF75
 455 0015 91010000 		.4byte	.LASF76
 456 0019 00000000 		.4byte	.Ldebug_ranges0+0
 457 001d 00000000 		.4byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 12


 458 0021 00000000 		.4byte	.Ldebug_line0
 459 0025 02       		.uleb128 0x2
 460 0026 01       		.byte	0x1
 461 0027 06       		.byte	0x6
 462 0028 E4010000 		.4byte	.LASF0
 463 002c 02       		.uleb128 0x2
 464 002d 01       		.byte	0x1
 465 002e 08       		.byte	0x8
 466 002f 9A020000 		.4byte	.LASF1
 467 0033 02       		.uleb128 0x2
 468 0034 02       		.byte	0x2
 469 0035 05       		.byte	0x5
 470 0036 67000000 		.4byte	.LASF2
 471 003a 02       		.uleb128 0x2
 472 003b 02       		.byte	0x2
 473 003c 07       		.byte	0x7
 474 003d 37030000 		.4byte	.LASF3
 475 0041 03       		.uleb128 0x3
 476 0042 7B040000 		.4byte	.LASF9
 477 0046 02       		.byte	0x2
 478 0047 37       		.byte	0x37
 479 0048 4C000000 		.4byte	0x4c
 480 004c 02       		.uleb128 0x2
 481 004d 04       		.byte	0x4
 482 004e 05       		.byte	0x5
 483 004f 2D020000 		.4byte	.LASF4
 484 0053 02       		.uleb128 0x2
 485 0054 04       		.byte	0x4
 486 0055 07       		.byte	0x7
 487 0056 0F040000 		.4byte	.LASF5
 488 005a 02       		.uleb128 0x2
 489 005b 08       		.byte	0x8
 490 005c 05       		.byte	0x5
 491 005d 09020000 		.4byte	.LASF6
 492 0061 02       		.uleb128 0x2
 493 0062 08       		.byte	0x8
 494 0063 07       		.byte	0x7
 495 0064 DD020000 		.4byte	.LASF7
 496 0068 04       		.uleb128 0x4
 497 0069 04       		.byte	0x4
 498 006a 05       		.byte	0x5
 499 006b 696E7400 		.ascii	"int\000"
 500 006f 02       		.uleb128 0x2
 501 0070 04       		.byte	0x4
 502 0071 07       		.byte	0x7
 503 0072 05030000 		.4byte	.LASF8
 504 0076 03       		.uleb128 0x3
 505 0077 9C030000 		.4byte	.LASF10
 506 007b 03       		.byte	0x3
 507 007c 41       		.byte	0x41
 508 007d 41000000 		.4byte	0x41
 509 0081 03       		.uleb128 0x3
 510 0082 7F010000 		.4byte	.LASF11
 511 0086 04       		.byte	0x4
 512 0087 A1       		.byte	0xa1
 513 0088 2C000000 		.4byte	0x2c
 514 008c 03       		.uleb128 0x3
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 13


 515 008d 57010000 		.4byte	.LASF12
 516 0091 04       		.byte	0x4
 517 0092 A2       		.byte	0xa2
 518 0093 3A000000 		.4byte	0x3a
 519 0097 03       		.uleb128 0x3
 520 0098 6A010000 		.4byte	.LASF13
 521 009c 04       		.byte	0x4
 522 009d A5       		.byte	0xa5
 523 009e 33000000 		.4byte	0x33
 524 00a2 02       		.uleb128 0x2
 525 00a3 04       		.byte	0x4
 526 00a4 04       		.byte	0x4
 527 00a5 03020000 		.4byte	.LASF14
 528 00a9 02       		.uleb128 0x2
 529 00aa 08       		.byte	0x8
 530 00ab 04       		.byte	0x4
 531 00ac 21040000 		.4byte	.LASF15
 532 00b0 02       		.uleb128 0x2
 533 00b1 01       		.byte	0x1
 534 00b2 08       		.byte	0x8
 535 00b3 70030000 		.4byte	.LASF16
 536 00b7 02       		.uleb128 0x2
 537 00b8 04       		.byte	0x4
 538 00b9 07       		.byte	0x7
 539 00ba 7F000000 		.4byte	.LASF17
 540 00be 02       		.uleb128 0x2
 541 00bf 08       		.byte	0x8
 542 00c0 04       		.byte	0x4
 543 00c1 8E020000 		.4byte	.LASF18
 544 00c5 05       		.uleb128 0x5
 545 00c6 01       		.byte	0x1
 546 00c7 05       		.byte	0x5
 547 00c8 13       		.byte	0x13
 548 00c9 DA000000 		.4byte	0xda
 549 00cd 06       		.uleb128 0x6
 550 00ce 36020000 		.4byte	.LASF19
 551 00d2 00       		.sleb128 0
 552 00d3 06       		.uleb128 0x6
 553 00d4 1D020000 		.4byte	.LASF20
 554 00d8 01       		.sleb128 1
 555 00d9 00       		.byte	0
 556 00da 03       		.uleb128 0x3
 557 00db F0010000 		.4byte	.LASF21
 558 00df 05       		.byte	0x5
 559 00e0 13       		.byte	0x13
 560 00e1 C5000000 		.4byte	0xc5
 561 00e5 05       		.uleb128 0x5
 562 00e6 01       		.byte	0x1
 563 00e7 05       		.byte	0x5
 564 00e8 14       		.byte	0x14
 565 00e9 FA000000 		.4byte	0xfa
 566 00ed 06       		.uleb128 0x6
 567 00ee 5E010000 		.4byte	.LASF22
 568 00f2 00       		.sleb128 0
 569 00f3 06       		.uleb128 0x6
 570 00f4 83020000 		.4byte	.LASF23
 571 00f8 01       		.sleb128 1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 14


 572 00f9 00       		.byte	0
 573 00fa 03       		.uleb128 0x3
 574 00fb 60040000 		.4byte	.LASF24
 575 00ff 05       		.byte	0x5
 576 0100 14       		.byte	0x14
 577 0101 E5000000 		.4byte	0xe5
 578 0105 05       		.uleb128 0x5
 579 0106 01       		.byte	0x1
 580 0107 05       		.byte	0x5
 581 0108 15       		.byte	0x15
 582 0109 1A010000 		.4byte	0x11a
 583 010d 06       		.uleb128 0x6
 584 010e 9B040000 		.4byte	.LASF25
 585 0112 00       		.sleb128 0
 586 0113 06       		.uleb128 0x6
 587 0114 A4030000 		.4byte	.LASF26
 588 0118 01       		.sleb128 1
 589 0119 00       		.byte	0
 590 011a 03       		.uleb128 0x3
 591 011b A8020000 		.4byte	.LASF27
 592 011f 05       		.byte	0x5
 593 0120 15       		.byte	0x15
 594 0121 05010000 		.4byte	0x105
 595 0125 05       		.uleb128 0x5
 596 0126 01       		.byte	0x1
 597 0127 05       		.byte	0x5
 598 0128 16       		.byte	0x16
 599 0129 4C010000 		.4byte	0x14c
 600 012d 06       		.uleb128 0x6
 601 012e F4020000 		.4byte	.LASF28
 602 0132 00       		.sleb128 0
 603 0133 06       		.uleb128 0x6
 604 0134 CF040000 		.4byte	.LASF29
 605 0138 01       		.sleb128 1
 606 0139 06       		.uleb128 0x6
 607 013a 4F040000 		.4byte	.LASF30
 608 013e 02       		.sleb128 2
 609 013f 06       		.uleb128 0x6
 610 0140 8A030000 		.4byte	.LASF31
 611 0144 03       		.sleb128 3
 612 0145 06       		.uleb128 0x6
 613 0146 12030000 		.4byte	.LASF32
 614 014a 04       		.sleb128 4
 615 014b 00       		.byte	0
 616 014c 03       		.uleb128 0x3
 617 014d 47020000 		.4byte	.LASF33
 618 0151 05       		.byte	0x5
 619 0152 16       		.byte	0x16
 620 0153 25010000 		.4byte	0x125
 621 0157 05       		.uleb128 0x5
 622 0158 01       		.byte	0x1
 623 0159 05       		.byte	0x5
 624 015a 17       		.byte	0x17
 625 015b 72010000 		.4byte	0x172
 626 015f 06       		.uleb128 0x6
 627 0160 60000000 		.4byte	.LASF34
 628 0164 00       		.sleb128 0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 15


 629 0165 06       		.uleb128 0x6
 630 0166 96000000 		.4byte	.LASF35
 631 016a 01       		.sleb128 1
 632 016b 06       		.uleb128 0x6
 633 016c 21030000 		.4byte	.LASF36
 634 0170 02       		.sleb128 2
 635 0171 00       		.byte	0
 636 0172 03       		.uleb128 0x3
 637 0173 85040000 		.4byte	.LASF37
 638 0177 05       		.byte	0x5
 639 0178 17       		.byte	0x17
 640 0179 57010000 		.4byte	0x157
 641 017d 05       		.uleb128 0x5
 642 017e 01       		.byte	0x1
 643 017f 05       		.byte	0x5
 644 0180 18       		.byte	0x18
 645 0181 92010000 		.4byte	0x192
 646 0185 06       		.uleb128 0x6
 647 0186 7A020000 		.4byte	.LASF38
 648 018a 00       		.sleb128 0
 649 018b 06       		.uleb128 0x6
 650 018c CA010000 		.4byte	.LASF39
 651 0190 01       		.sleb128 1
 652 0191 00       		.byte	0
 653 0192 03       		.uleb128 0x3
 654 0193 39010000 		.4byte	.LASF40
 655 0197 05       		.byte	0x5
 656 0198 18       		.byte	0x18
 657 0199 7D010000 		.4byte	0x17d
 658 019d 05       		.uleb128 0x5
 659 019e 01       		.byte	0x1
 660 019f 05       		.byte	0x5
 661 01a0 19       		.byte	0x19
 662 01a1 B2010000 		.4byte	0x1b2
 663 01a5 06       		.uleb128 0x6
 664 01a6 17020000 		.4byte	.LASF41
 665 01aa 00       		.sleb128 0
 666 01ab 06       		.uleb128 0x6
 667 01ac BA040000 		.4byte	.LASF42
 668 01b0 01       		.sleb128 1
 669 01b1 00       		.byte	0
 670 01b2 03       		.uleb128 0x3
 671 01b3 07050000 		.4byte	.LASF43
 672 01b7 05       		.byte	0x5
 673 01b8 19       		.byte	0x19
 674 01b9 9D010000 		.4byte	0x19d
 675 01bd 05       		.uleb128 0x5
 676 01be 01       		.byte	0x1
 677 01bf 05       		.byte	0x5
 678 01c0 1A       		.byte	0x1a
 679 01c1 D2010000 		.4byte	0x1d2
 680 01c5 06       		.uleb128 0x6
 681 01c6 AB040000 		.4byte	.LASF44
 682 01ca 00       		.sleb128 0
 683 01cb 06       		.uleb128 0x6
 684 01cc B1000000 		.4byte	.LASF45
 685 01d0 01       		.sleb128 1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 16


 686 01d1 00       		.byte	0
 687 01d2 03       		.uleb128 0x3
 688 01d3 38040000 		.4byte	.LASF46
 689 01d7 05       		.byte	0x5
 690 01d8 1A       		.byte	0x1a
 691 01d9 BD010000 		.4byte	0x1bd
 692 01dd 07       		.uleb128 0x7
 693 01de 24       		.byte	0x24
 694 01df 05       		.byte	0x5
 695 01e0 1D       		.byte	0x1d
 696 01e1 D6020000 		.4byte	0x2d6
 697 01e5 08       		.uleb128 0x8
 698 01e6 85010000 		.4byte	.LASF47
 699 01ea 05       		.byte	0x5
 700 01eb 1F       		.byte	0x1f
 701 01ec 8C000000 		.4byte	0x8c
 702 01f0 00       		.byte	0
 703 01f1 08       		.uleb128 0x8
 704 01f2 C2030000 		.4byte	.LASF48
 705 01f6 05       		.byte	0x5
 706 01f7 20       		.byte	0x20
 707 01f8 8C000000 		.4byte	0x8c
 708 01fc 02       		.byte	0x2
 709 01fd 08       		.uleb128 0x8
 710 01fe 6E040000 		.4byte	.LASF49
 711 0202 05       		.byte	0x5
 712 0203 22       		.byte	0x22
 713 0204 1A010000 		.4byte	0x11a
 714 0208 04       		.byte	0x4
 715 0209 08       		.uleb128 0x8
 716 020a DA030000 		.4byte	.LASF50
 717 020e 05       		.byte	0x5
 718 020f 24       		.byte	0x24
 719 0210 97000000 		.4byte	0x97
 720 0214 06       		.byte	0x6
 721 0215 08       		.uleb128 0x8
 722 0216 9E000000 		.4byte	.LASF51
 723 021a 05       		.byte	0x5
 724 021b 25       		.byte	0x25
 725 021c 97000000 		.4byte	0x97
 726 0220 08       		.byte	0x8
 727 0221 08       		.uleb128 0x8
 728 0222 F2040000 		.4byte	.LASF52
 729 0226 05       		.byte	0x5
 730 0227 26       		.byte	0x26
 731 0228 97000000 		.4byte	0x97
 732 022c 0A       		.byte	0xa
 733 022d 08       		.uleb128 0x8
 734 022e 28040000 		.4byte	.LASF53
 735 0232 05       		.byte	0x5
 736 0233 27       		.byte	0x27
 737 0234 4C010000 		.4byte	0x14c
 738 0238 0C       		.byte	0xc
 739 0239 08       		.uleb128 0x8
 740 023a D3010000 		.4byte	.LASF54
 741 023e 05       		.byte	0x5
 742 023f 28       		.byte	0x28
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 17


 743 0240 72010000 		.4byte	0x172
 744 0244 0D       		.byte	0xd
 745 0245 08       		.uleb128 0x8
 746 0246 BF040000 		.4byte	.LASF55
 747 024a 05       		.byte	0x5
 748 024b 2A       		.byte	0x2a
 749 024c 81000000 		.4byte	0x81
 750 0250 0E       		.byte	0xe
 751 0251 08       		.uleb128 0x8
 752 0252 65020000 		.4byte	.LASF56
 753 0256 05       		.byte	0x5
 754 0257 2B       		.byte	0x2b
 755 0258 81000000 		.4byte	0x81
 756 025c 0F       		.byte	0xf
 757 025d 08       		.uleb128 0x8
 758 025e 00040000 		.4byte	.LASF57
 759 0262 05       		.byte	0x5
 760 0263 2C       		.byte	0x2c
 761 0264 81000000 		.4byte	0x81
 762 0268 10       		.byte	0x10
 763 0269 08       		.uleb128 0x8
 764 026a 00000000 		.4byte	.LASF58
 765 026e 05       		.byte	0x5
 766 026f 2D       		.byte	0x2d
 767 0270 92010000 		.4byte	0x192
 768 0274 11       		.byte	0x11
 769 0275 08       		.uleb128 0x8
 770 0276 29030000 		.4byte	.LASF59
 771 027a 05       		.byte	0x5
 772 027b 2F       		.byte	0x2f
 773 027c 81000000 		.4byte	0x81
 774 0280 12       		.byte	0x12
 775 0281 08       		.uleb128 0x8
 776 0282 71000000 		.4byte	.LASF60
 777 0286 05       		.byte	0x5
 778 0287 30       		.byte	0x30
 779 0288 DA000000 		.4byte	0xda
 780 028c 13       		.byte	0x13
 781 028d 08       		.uleb128 0x8
 782 028e 5C020000 		.4byte	.LASF61
 783 0292 05       		.byte	0x5
 784 0293 32       		.byte	0x32
 785 0294 81000000 		.4byte	0x81
 786 0298 14       		.byte	0x14
 787 0299 08       		.uleb128 0x8
 788 029a E9040000 		.4byte	.LASF62
 789 029e 05       		.byte	0x5
 790 029f 33       		.byte	0x33
 791 02a0 FA000000 		.4byte	0xfa
 792 02a4 15       		.byte	0x15
 793 02a5 08       		.uleb128 0x8
 794 02a6 75030000 		.4byte	.LASF63
 795 02aa 05       		.byte	0x5
 796 02ab 35       		.byte	0x35
 797 02ac D6020000 		.4byte	0x2d6
 798 02b0 18       		.byte	0x18
 799 02b1 08       		.uleb128 0x8
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 18


 800 02b2 5C030000 		.4byte	.LASF64
 801 02b6 05       		.byte	0x5
 802 02b7 36       		.byte	0x36
 803 02b8 DC020000 		.4byte	0x2dc
 804 02bc 1C       		.byte	0x1c
 805 02bd 08       		.uleb128 0x8
 806 02be 42000000 		.4byte	.LASF65
 807 02c2 05       		.byte	0x5
 808 02c3 37       		.byte	0x37
 809 02c4 B2010000 		.4byte	0x1b2
 810 02c8 20       		.byte	0x20
 811 02c9 08       		.uleb128 0x8
 812 02ca 4A030000 		.4byte	.LASF66
 813 02ce 05       		.byte	0x5
 814 02cf 39       		.byte	0x39
 815 02d0 D2010000 		.4byte	0x1d2
 816 02d4 21       		.byte	0x21
 817 02d5 00       		.byte	0
 818 02d6 09       		.uleb128 0x9
 819 02d7 04       		.byte	0x4
 820 02d8 97000000 		.4byte	0x97
 821 02dc 09       		.uleb128 0x9
 822 02dd 04       		.byte	0x4
 823 02de 81000000 		.4byte	0x81
 824 02e2 03       		.uleb128 0x3
 825 02e3 88000000 		.4byte	.LASF67
 826 02e7 05       		.byte	0x5
 827 02e8 3B       		.byte	0x3b
 828 02e9 DD010000 		.4byte	0x1dd
 829 02ed 0A       		.uleb128 0xa
 830 02ee EC030000 		.4byte	.LASF68
 831 02f2 01       		.byte	0x1
 832 02f3 0F       		.byte	0xf
 833 02f4 00000000 		.4byte	.LFB56
 834 02f8 00020000 		.4byte	.LFE56-.LFB56
 835 02fc 01       		.uleb128 0x1
 836 02fd 9C       		.byte	0x9c
 837 02fe 11030000 		.4byte	0x311
 838 0302 0B       		.uleb128 0xb
 839 0303 1A030000 		.4byte	.LASF70
 840 0307 01       		.byte	0x1
 841 0308 0F       		.byte	0xf
 842 0309 11030000 		.4byte	0x311
 843 030d 02       		.uleb128 0x2
 844 030e 91       		.byte	0x91
 845 030f 74       		.sleb128 -12
 846 0310 00       		.byte	0
 847 0311 09       		.uleb128 0x9
 848 0312 04       		.byte	0x4
 849 0313 E2020000 		.4byte	0x2e2
 850 0317 0C       		.uleb128 0xc
 851 0318 BA020000 		.4byte	.LASF69
 852 031c 01       		.byte	0x1
 853 031d 94       		.byte	0x94
 854 031e 00000000 		.4byte	.LFB57
 855 0322 78000000 		.4byte	.LFE57-.LFB57
 856 0326 01       		.uleb128 0x1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 19


 857 0327 9C       		.byte	0x9c
 858 0328 71030000 		.4byte	0x371
 859 032c 0B       		.uleb128 0xb
 860 032d 1A030000 		.4byte	.LASF70
 861 0331 01       		.byte	0x1
 862 0332 94       		.byte	0x94
 863 0333 11030000 		.4byte	0x311
 864 0337 02       		.uleb128 0x2
 865 0338 91       		.byte	0x91
 866 0339 64       		.sleb128 -28
 867 033a 0D       		.uleb128 0xd
 868 033b 7800     		.ascii	"x\000"
 869 033d 01       		.byte	0x1
 870 033e 96       		.byte	0x96
 871 033f 68000000 		.4byte	0x68
 872 0343 02       		.uleb128 0x2
 873 0344 91       		.byte	0x91
 874 0345 74       		.sleb128 -12
 875 0346 0E       		.uleb128 0xe
 876 0347 70010000 		.4byte	.LASF71
 877 034b 01       		.byte	0x1
 878 034c 97       		.byte	0x97
 879 034d 68000000 		.4byte	0x68
 880 0351 02       		.uleb128 0x2
 881 0352 91       		.byte	0x91
 882 0353 70       		.sleb128 -16
 883 0354 0E       		.uleb128 0xe
 884 0355 B3030000 		.4byte	.LASF72
 885 0359 01       		.byte	0x1
 886 035a 99       		.byte	0x99
 887 035b 68000000 		.4byte	0x68
 888 035f 02       		.uleb128 0x2
 889 0360 91       		.byte	0x91
 890 0361 68       		.sleb128 -24
 891 0362 0E       		.uleb128 0xe
 892 0363 2A000000 		.4byte	.LASF73
 893 0367 01       		.byte	0x1
 894 0368 9A       		.byte	0x9a
 895 0369 68000000 		.4byte	0x68
 896 036d 02       		.uleb128 0x2
 897 036e 91       		.byte	0x91
 898 036f 6C       		.sleb128 -20
 899 0370 00       		.byte	0
 900 0371 0F       		.uleb128 0xf
 901 0372 DC040000 		.4byte	.LASF77
 902 0376 06       		.byte	0x6
 903 0377 1606     		.2byte	0x616
 904 0379 7D030000 		.4byte	0x37d
 905 037d 10       		.uleb128 0x10
 906 037e 76000000 		.4byte	0x76
 907 0382 00       		.byte	0
 908              		.section	.debug_abbrev,"",%progbits
 909              	.Ldebug_abbrev0:
 910 0000 01       		.uleb128 0x1
 911 0001 11       		.uleb128 0x11
 912 0002 01       		.byte	0x1
 913 0003 25       		.uleb128 0x25
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 20


 914 0004 0E       		.uleb128 0xe
 915 0005 13       		.uleb128 0x13
 916 0006 0B       		.uleb128 0xb
 917 0007 03       		.uleb128 0x3
 918 0008 0E       		.uleb128 0xe
 919 0009 1B       		.uleb128 0x1b
 920 000a 0E       		.uleb128 0xe
 921 000b 55       		.uleb128 0x55
 922 000c 17       		.uleb128 0x17
 923 000d 11       		.uleb128 0x11
 924 000e 01       		.uleb128 0x1
 925 000f 10       		.uleb128 0x10
 926 0010 17       		.uleb128 0x17
 927 0011 00       		.byte	0
 928 0012 00       		.byte	0
 929 0013 02       		.uleb128 0x2
 930 0014 24       		.uleb128 0x24
 931 0015 00       		.byte	0
 932 0016 0B       		.uleb128 0xb
 933 0017 0B       		.uleb128 0xb
 934 0018 3E       		.uleb128 0x3e
 935 0019 0B       		.uleb128 0xb
 936 001a 03       		.uleb128 0x3
 937 001b 0E       		.uleb128 0xe
 938 001c 00       		.byte	0
 939 001d 00       		.byte	0
 940 001e 03       		.uleb128 0x3
 941 001f 16       		.uleb128 0x16
 942 0020 00       		.byte	0
 943 0021 03       		.uleb128 0x3
 944 0022 0E       		.uleb128 0xe
 945 0023 3A       		.uleb128 0x3a
 946 0024 0B       		.uleb128 0xb
 947 0025 3B       		.uleb128 0x3b
 948 0026 0B       		.uleb128 0xb
 949 0027 49       		.uleb128 0x49
 950 0028 13       		.uleb128 0x13
 951 0029 00       		.byte	0
 952 002a 00       		.byte	0
 953 002b 04       		.uleb128 0x4
 954 002c 24       		.uleb128 0x24
 955 002d 00       		.byte	0
 956 002e 0B       		.uleb128 0xb
 957 002f 0B       		.uleb128 0xb
 958 0030 3E       		.uleb128 0x3e
 959 0031 0B       		.uleb128 0xb
 960 0032 03       		.uleb128 0x3
 961 0033 08       		.uleb128 0x8
 962 0034 00       		.byte	0
 963 0035 00       		.byte	0
 964 0036 05       		.uleb128 0x5
 965 0037 04       		.uleb128 0x4
 966 0038 01       		.byte	0x1
 967 0039 0B       		.uleb128 0xb
 968 003a 0B       		.uleb128 0xb
 969 003b 3A       		.uleb128 0x3a
 970 003c 0B       		.uleb128 0xb
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 21


 971 003d 3B       		.uleb128 0x3b
 972 003e 0B       		.uleb128 0xb
 973 003f 01       		.uleb128 0x1
 974 0040 13       		.uleb128 0x13
 975 0041 00       		.byte	0
 976 0042 00       		.byte	0
 977 0043 06       		.uleb128 0x6
 978 0044 28       		.uleb128 0x28
 979 0045 00       		.byte	0
 980 0046 03       		.uleb128 0x3
 981 0047 0E       		.uleb128 0xe
 982 0048 1C       		.uleb128 0x1c
 983 0049 0D       		.uleb128 0xd
 984 004a 00       		.byte	0
 985 004b 00       		.byte	0
 986 004c 07       		.uleb128 0x7
 987 004d 13       		.uleb128 0x13
 988 004e 01       		.byte	0x1
 989 004f 0B       		.uleb128 0xb
 990 0050 0B       		.uleb128 0xb
 991 0051 3A       		.uleb128 0x3a
 992 0052 0B       		.uleb128 0xb
 993 0053 3B       		.uleb128 0x3b
 994 0054 0B       		.uleb128 0xb
 995 0055 01       		.uleb128 0x1
 996 0056 13       		.uleb128 0x13
 997 0057 00       		.byte	0
 998 0058 00       		.byte	0
 999 0059 08       		.uleb128 0x8
 1000 005a 0D       		.uleb128 0xd
 1001 005b 00       		.byte	0
 1002 005c 03       		.uleb128 0x3
 1003 005d 0E       		.uleb128 0xe
 1004 005e 3A       		.uleb128 0x3a
 1005 005f 0B       		.uleb128 0xb
 1006 0060 3B       		.uleb128 0x3b
 1007 0061 0B       		.uleb128 0xb
 1008 0062 49       		.uleb128 0x49
 1009 0063 13       		.uleb128 0x13
 1010 0064 38       		.uleb128 0x38
 1011 0065 0B       		.uleb128 0xb
 1012 0066 00       		.byte	0
 1013 0067 00       		.byte	0
 1014 0068 09       		.uleb128 0x9
 1015 0069 0F       		.uleb128 0xf
 1016 006a 00       		.byte	0
 1017 006b 0B       		.uleb128 0xb
 1018 006c 0B       		.uleb128 0xb
 1019 006d 49       		.uleb128 0x49
 1020 006e 13       		.uleb128 0x13
 1021 006f 00       		.byte	0
 1022 0070 00       		.byte	0
 1023 0071 0A       		.uleb128 0xa
 1024 0072 2E       		.uleb128 0x2e
 1025 0073 01       		.byte	0x1
 1026 0074 3F       		.uleb128 0x3f
 1027 0075 19       		.uleb128 0x19
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 22


 1028 0076 03       		.uleb128 0x3
 1029 0077 0E       		.uleb128 0xe
 1030 0078 3A       		.uleb128 0x3a
 1031 0079 0B       		.uleb128 0xb
 1032 007a 3B       		.uleb128 0x3b
 1033 007b 0B       		.uleb128 0xb
 1034 007c 27       		.uleb128 0x27
 1035 007d 19       		.uleb128 0x19
 1036 007e 11       		.uleb128 0x11
 1037 007f 01       		.uleb128 0x1
 1038 0080 12       		.uleb128 0x12
 1039 0081 06       		.uleb128 0x6
 1040 0082 40       		.uleb128 0x40
 1041 0083 18       		.uleb128 0x18
 1042 0084 9642     		.uleb128 0x2116
 1043 0086 19       		.uleb128 0x19
 1044 0087 01       		.uleb128 0x1
 1045 0088 13       		.uleb128 0x13
 1046 0089 00       		.byte	0
 1047 008a 00       		.byte	0
 1048 008b 0B       		.uleb128 0xb
 1049 008c 05       		.uleb128 0x5
 1050 008d 00       		.byte	0
 1051 008e 03       		.uleb128 0x3
 1052 008f 0E       		.uleb128 0xe
 1053 0090 3A       		.uleb128 0x3a
 1054 0091 0B       		.uleb128 0xb
 1055 0092 3B       		.uleb128 0x3b
 1056 0093 0B       		.uleb128 0xb
 1057 0094 49       		.uleb128 0x49
 1058 0095 13       		.uleb128 0x13
 1059 0096 02       		.uleb128 0x2
 1060 0097 18       		.uleb128 0x18
 1061 0098 00       		.byte	0
 1062 0099 00       		.byte	0
 1063 009a 0C       		.uleb128 0xc
 1064 009b 2E       		.uleb128 0x2e
 1065 009c 01       		.byte	0x1
 1066 009d 3F       		.uleb128 0x3f
 1067 009e 19       		.uleb128 0x19
 1068 009f 03       		.uleb128 0x3
 1069 00a0 0E       		.uleb128 0xe
 1070 00a1 3A       		.uleb128 0x3a
 1071 00a2 0B       		.uleb128 0xb
 1072 00a3 3B       		.uleb128 0x3b
 1073 00a4 0B       		.uleb128 0xb
 1074 00a5 27       		.uleb128 0x27
 1075 00a6 19       		.uleb128 0x19
 1076 00a7 11       		.uleb128 0x11
 1077 00a8 01       		.uleb128 0x1
 1078 00a9 12       		.uleb128 0x12
 1079 00aa 06       		.uleb128 0x6
 1080 00ab 40       		.uleb128 0x40
 1081 00ac 18       		.uleb128 0x18
 1082 00ad 9742     		.uleb128 0x2117
 1083 00af 19       		.uleb128 0x19
 1084 00b0 01       		.uleb128 0x1
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 23


 1085 00b1 13       		.uleb128 0x13
 1086 00b2 00       		.byte	0
 1087 00b3 00       		.byte	0
 1088 00b4 0D       		.uleb128 0xd
 1089 00b5 34       		.uleb128 0x34
 1090 00b6 00       		.byte	0
 1091 00b7 03       		.uleb128 0x3
 1092 00b8 08       		.uleb128 0x8
 1093 00b9 3A       		.uleb128 0x3a
 1094 00ba 0B       		.uleb128 0xb
 1095 00bb 3B       		.uleb128 0x3b
 1096 00bc 0B       		.uleb128 0xb
 1097 00bd 49       		.uleb128 0x49
 1098 00be 13       		.uleb128 0x13
 1099 00bf 02       		.uleb128 0x2
 1100 00c0 18       		.uleb128 0x18
 1101 00c1 00       		.byte	0
 1102 00c2 00       		.byte	0
 1103 00c3 0E       		.uleb128 0xe
 1104 00c4 34       		.uleb128 0x34
 1105 00c5 00       		.byte	0
 1106 00c6 03       		.uleb128 0x3
 1107 00c7 0E       		.uleb128 0xe
 1108 00c8 3A       		.uleb128 0x3a
 1109 00c9 0B       		.uleb128 0xb
 1110 00ca 3B       		.uleb128 0x3b
 1111 00cb 0B       		.uleb128 0xb
 1112 00cc 49       		.uleb128 0x49
 1113 00cd 13       		.uleb128 0x13
 1114 00ce 02       		.uleb128 0x2
 1115 00cf 18       		.uleb128 0x18
 1116 00d0 00       		.byte	0
 1117 00d1 00       		.byte	0
 1118 00d2 0F       		.uleb128 0xf
 1119 00d3 34       		.uleb128 0x34
 1120 00d4 00       		.byte	0
 1121 00d5 03       		.uleb128 0x3
 1122 00d6 0E       		.uleb128 0xe
 1123 00d7 3A       		.uleb128 0x3a
 1124 00d8 0B       		.uleb128 0xb
 1125 00d9 3B       		.uleb128 0x3b
 1126 00da 05       		.uleb128 0x5
 1127 00db 49       		.uleb128 0x49
 1128 00dc 13       		.uleb128 0x13
 1129 00dd 3F       		.uleb128 0x3f
 1130 00de 19       		.uleb128 0x19
 1131 00df 3C       		.uleb128 0x3c
 1132 00e0 19       		.uleb128 0x19
 1133 00e1 00       		.byte	0
 1134 00e2 00       		.byte	0
 1135 00e3 10       		.uleb128 0x10
 1136 00e4 35       		.uleb128 0x35
 1137 00e5 00       		.byte	0
 1138 00e6 49       		.uleb128 0x49
 1139 00e7 13       		.uleb128 0x13
 1140 00e8 00       		.byte	0
 1141 00e9 00       		.byte	0
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 24


 1142 00ea 00       		.byte	0
 1143              		.section	.debug_aranges,"",%progbits
 1144 0000 24000000 		.4byte	0x24
 1145 0004 0200     		.2byte	0x2
 1146 0006 00000000 		.4byte	.Ldebug_info0
 1147 000a 04       		.byte	0x4
 1148 000b 00       		.byte	0
 1149 000c 0000     		.2byte	0
 1150 000e 0000     		.2byte	0
 1151 0010 00000000 		.4byte	.LFB56
 1152 0014 00020000 		.4byte	.LFE56-.LFB56
 1153 0018 00000000 		.4byte	.LFB57
 1154 001c 78000000 		.4byte	.LFE57-.LFB57
 1155 0020 00000000 		.4byte	0
 1156 0024 00000000 		.4byte	0
 1157              		.section	.debug_ranges,"",%progbits
 1158              	.Ldebug_ranges0:
 1159 0000 00000000 		.4byte	.LFB56
 1160 0004 00020000 		.4byte	.LFE56
 1161 0008 00000000 		.4byte	.LFB57
 1162 000c 78000000 		.4byte	.LFE57
 1163 0010 00000000 		.4byte	0
 1164 0014 00000000 		.4byte	0
 1165              		.section	.debug_line,"",%progbits
 1166              	.Ldebug_line0:
 1167 0000 F0010000 		.section	.debug_str,"MS",%progbits,1
 1167      02006701 
 1167      00000201 
 1167      FB0E0D00 
 1167      01010101 
 1168              	.LASF58:
 1169 0000 70776D56 		.ascii	"pwmValueFromCalibration\000"
 1169      616C7565 
 1169      46726F6D 
 1169      43616C69 
 1169      62726174 
 1170              	.LASF75:
 1171 0018 2E5C5441 		.ascii	".\\TAC_Submodule.c\000"
 1171      435F5375 
 1171      626D6F64 
 1171      756C652E 
 1171      6300
 1172              	.LASF73:
 1173 002a 70726563 		.ascii	"precedingDiffFromTarget\000"
 1173      6564696E 
 1173      67446966 
 1173      6646726F 
 1173      6D546172 
 1174              	.LASF65:
 1175 0042 61726543 		.ascii	"areCalibrationValuesRetrieved\000"
 1175      616C6962 
 1175      72617469 
 1175      6F6E5661 
 1175      6C756573 
 1176              	.LASF34:
 1177 0060 4E6F7453 		.ascii	"NotSet\000"
 1177      657400
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 25


 1178              	.LASF2:
 1179 0067 73686F72 		.ascii	"short int\000"
 1179      7420696E 
 1179      7400
 1180              	.LASF60:
 1181 0071 61676974 		.ascii	"agitatorState\000"
 1181      61746F72 
 1181      53746174 
 1181      6500
 1182              	.LASF17:
 1183 007f 73697A65 		.ascii	"sizetype\000"
 1183      74797065 
 1183      00
 1184              	.LASF67:
 1185 0088 5461635F 		.ascii	"Tac_Submodule\000"
 1185      5375626D 
 1185      6F64756C 
 1185      6500
 1186              	.LASF35:
 1187 0096 436F6F6C 		.ascii	"Cooling\000"
 1187      696E6700 
 1188              	.LASF51:
 1189 009e 63757272 		.ascii	"currentTemperature\000"
 1189      656E7454 
 1189      656D7065 
 1189      72617475 
 1189      726500
 1190              	.LASF45:
 1191 00b1 43616C69 		.ascii	"Calibrating\000"
 1191      62726174 
 1191      696E6700 
 1192              	.LASF74:
 1193 00bd 474E5520 		.ascii	"GNU C 4.8.4 20140526 (release) [ARM/embedded-4_8-br"
 1193      4320342E 
 1193      382E3420 
 1193      32303134 
 1193      30353236 
 1194 00f0 616E6368 		.ascii	"anch revision 211358] -mcpu=cortex-m3 -mthumb -g -O"
 1194      20726576 
 1194      6973696F 
 1194      6E203231 
 1194      31333538 
 1195 0123 30202D66 		.ascii	"0 -ffunction-sections\000"
 1195      66756E63 
 1195      74696F6E 
 1195      2D736563 
 1195      74696F6E 
 1196              	.LASF40:
 1197 0139 70776D46 		.ascii	"pwmFromCalibrationStatus_type\000"
 1197      726F6D43 
 1197      616C6962 
 1197      72617469 
 1197      6F6E5374 
 1198              	.LASF12:
 1199 0157 75696E74 		.ascii	"uint16\000"
 1199      313600
 1200              	.LASF22:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 26


 1201 015e 66616E44 		.ascii	"fanDisabled\000"
 1201      69736162 
 1201      6C656400 
 1202              	.LASF13:
 1203 016a 696E7431 		.ascii	"int16\000"
 1203      3600
 1204              	.LASF71:
 1205 0170 62657374 		.ascii	"bestMatchIndex\000"
 1205      4D617463 
 1205      68496E64 
 1205      657800
 1206              	.LASF11:
 1207 017f 75696E74 		.ascii	"uint8\000"
 1207      3800
 1208              	.LASF47:
 1209 0185 7375624D 		.ascii	"subModuleId\000"
 1209      6F64756C 
 1209      65496400 
 1210              	.LASF76:
 1211 0191 433A5C55 		.ascii	"C:\\Users\\plod1602\\Desktop\\TAC_2015-09-18\\TAC_P"
 1211      73657273 
 1211      5C706C6F 
 1211      64313630 
 1211      325C4465 
 1212 01bf 534F4335 		.ascii	"SOC5.cydsn\000"
 1212      2E637964 
 1212      736E00
 1213              	.LASF39:
 1214 01ca 5570546F 		.ascii	"UpToDate\000"
 1214      44617465 
 1214      00
 1215              	.LASF54:
 1216 01d3 63757272 		.ascii	"currentDirection\000"
 1216      656E7444 
 1216      69726563 
 1216      74696F6E 
 1216      00
 1217              	.LASF0:
 1218 01e4 7369676E 		.ascii	"signed char\000"
 1218      65642063 
 1218      68617200 
 1219              	.LASF21:
 1220 01f0 61676974 		.ascii	"agitatorState_type\000"
 1220      61746F72 
 1220      53746174 
 1220      655F7479 
 1220      706500
 1221              	.LASF14:
 1222 0203 666C6F61 		.ascii	"float\000"
 1222      7400
 1223              	.LASF6:
 1224 0209 6C6F6E67 		.ascii	"long long int\000"
 1224      206C6F6E 
 1224      6720696E 
 1224      7400
 1225              	.LASF41:
 1226 0217 46616C73 		.ascii	"False\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 27


 1226      6500
 1227              	.LASF20:
 1228 021d 61676974 		.ascii	"agitatorEnabled\000"
 1228      61746F72 
 1228      456E6162 
 1228      6C656400 
 1229              	.LASF4:
 1230 022d 6C6F6E67 		.ascii	"long int\000"
 1230      20696E74 
 1230      00
 1231              	.LASF19:
 1232 0236 61676974 		.ascii	"agitatorDisabled\000"
 1232      61746F72 
 1232      44697361 
 1232      626C6564 
 1232      00
 1233              	.LASF33:
 1234 0247 74656D70 		.ascii	"temperatureMode_type\000"
 1234      65726174 
 1234      7572654D 
 1234      6F64655F 
 1234      74797065 
 1235              	.LASF61:
 1236 025c 66616E53 		.ascii	"fanSpeed\000"
 1236      70656564 
 1236      00
 1237              	.LASF56:
 1238 0265 64657369 		.ascii	"desiredPwmPercentage\000"
 1238      72656450 
 1238      776D5065 
 1238      7263656E 
 1238      74616765 
 1239              	.LASF38:
 1240 027a 4F757444 		.ascii	"OutDated\000"
 1240      61746564 
 1240      00
 1241              	.LASF23:
 1242 0283 66616E45 		.ascii	"fanEnabled\000"
 1242      6E61626C 
 1242      656400
 1243              	.LASF18:
 1244 028e 6C6F6E67 		.ascii	"long double\000"
 1244      20646F75 
 1244      626C6500 
 1245              	.LASF1:
 1246 029a 756E7369 		.ascii	"unsigned char\000"
 1246      676E6564 
 1246      20636861 
 1246      7200
 1247              	.LASF27:
 1248 02a8 70656C74 		.ascii	"peltierState_type\000"
 1248      69657253 
 1248      74617465 
 1248      5F747970 
 1248      6500
 1249              	.LASF69:
 1250 02ba 75706461 		.ascii	"updatePwmValueFromCalibrationTable\000"
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 28


 1250      74655077 
 1250      6D56616C 
 1250      75654672 
 1250      6F6D4361 
 1251              	.LASF7:
 1252 02dd 6C6F6E67 		.ascii	"long long unsigned int\000"
 1252      206C6F6E 
 1252      6720756E 
 1252      7369676E 
 1252      65642069 
 1253              	.LASF28:
 1254 02f4 4D61696E 		.ascii	"Maintaining_heat\000"
 1254      7461696E 
 1254      696E675F 
 1254      68656174 
 1254      00
 1255              	.LASF8:
 1256 0305 756E7369 		.ascii	"unsigned int\000"
 1256      676E6564 
 1256      20696E74 
 1256      00
 1257              	.LASF32:
 1258 0312 57616974 		.ascii	"Waiting\000"
 1258      696E6700 
 1259              	.LASF70:
 1260 031a 54414350 		.ascii	"TACPtr\000"
 1260      747200
 1261              	.LASF36:
 1262 0321 48656174 		.ascii	"Heating\000"
 1262      696E6700 
 1263              	.LASF59:
 1264 0329 61676974 		.ascii	"agitatorSpeed\000"
 1264      61746F72 
 1264      53706565 
 1264      6400
 1265              	.LASF3:
 1266 0337 73686F72 		.ascii	"short unsigned int\000"
 1266      7420756E 
 1266      7369676E 
 1266      65642069 
 1266      6E7400
 1267              	.LASF66:
 1268 034a 63616C69 		.ascii	"calibratingStatus\000"
 1268      62726174 
 1268      696E6753 
 1268      74617475 
 1268      7300
 1269              	.LASF64:
 1270 035c 70657263 		.ascii	"percentageValuesPtr\000"
 1270      656E7461 
 1270      67655661 
 1270      6C756573 
 1270      50747200 
 1271              	.LASF16:
 1272 0370 63686172 		.ascii	"char\000"
 1272      00
 1273              	.LASF63:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 29


 1274 0375 63616C69 		.ascii	"calibrationValuesPtr\000"
 1274      62726174 
 1274      696F6E56 
 1274      616C7565 
 1274      73507472 
 1275              	.LASF31:
 1276 038a 57616974 		.ascii	"Waiting_overshoot\000"
 1276      696E675F 
 1276      6F766572 
 1276      73686F6F 
 1276      7400
 1277              	.LASF10:
 1278 039c 696E7433 		.ascii	"int32_t\000"
 1278      325F7400 
 1279              	.LASF26:
 1280 03a4 70656C74 		.ascii	"peltierEnabled\000"
 1280      69657245 
 1280      6E61626C 
 1280      656400
 1281              	.LASF72:
 1282 03b3 64696666 		.ascii	"diffFromTarget\000"
 1282      46726F6D 
 1282      54617267 
 1282      657400
 1283              	.LASF48:
 1284 03c2 6D617854 		.ascii	"maxTemperatureDeviation\000"
 1284      656D7065 
 1284      72617475 
 1284      72654465 
 1284      76696174 
 1285              	.LASF50:
 1286 03da 74617267 		.ascii	"targetTemperature\000"
 1286      65745465 
 1286      6D706572 
 1286      61747572 
 1286      6500
 1287              	.LASF68:
 1288 03ec 75706461 		.ascii	"updatePeltierOutput\000"
 1288      74655065 
 1288      6C746965 
 1288      724F7574 
 1288      70757400 
 1289              	.LASF57:
 1290 0400 70776D50 		.ascii	"pwmPeriodValue\000"
 1290      6572696F 
 1290      6456616C 
 1290      756500
 1291              	.LASF5:
 1292 040f 6C6F6E67 		.ascii	"long unsigned int\000"
 1292      20756E73 
 1292      69676E65 
 1292      6420696E 
 1292      7400
 1293              	.LASF15:
 1294 0421 646F7562 		.ascii	"double\000"
 1294      6C6500
 1295              	.LASF53:
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 30


 1296 0428 74656D70 		.ascii	"temperatureMode\000"
 1296      65726174 
 1296      7572654D 
 1296      6F646500 
 1297              	.LASF46:
 1298 0438 63616C69 		.ascii	"calibratingStatus_type\000"
 1298      62726174 
 1298      696E6753 
 1298      74617475 
 1298      735F7479 
 1299              	.LASF30:
 1300 044f 4D61696E 		.ascii	"Maintaining_cool\000"
 1300      7461696E 
 1300      696E675F 
 1300      636F6F6C 
 1300      00
 1301              	.LASF24:
 1302 0460 66616E53 		.ascii	"fanState_type\000"
 1302      74617465 
 1302      5F747970 
 1302      6500
 1303              	.LASF49:
 1304 046e 70656C74 		.ascii	"peltierState\000"
 1304      69657253 
 1304      74617465 
 1304      00
 1305              	.LASF9:
 1306 047b 5F5F696E 		.ascii	"__int32_t\000"
 1306      7433325F 
 1306      7400
 1307              	.LASF37:
 1308 0485 63757272 		.ascii	"currentDirection_type\000"
 1308      656E7444 
 1308      69726563 
 1308      74696F6E 
 1308      5F747970 
 1309              	.LASF25:
 1310 049b 70656C74 		.ascii	"peltierDisabled\000"
 1310      69657244 
 1310      69736162 
 1310      6C656400 
 1311              	.LASF44:
 1312 04ab 4E6F7443 		.ascii	"NotCalibrating\000"
 1312      616C6962 
 1312      72617469 
 1312      6E6700
 1313              	.LASF42:
 1314 04ba 54727565 		.ascii	"True\000"
 1314      00
 1315              	.LASF55:
 1316 04bf 70776D43 		.ascii	"pwmCompareValue\000"
 1316      6F6D7061 
 1316      72655661 
 1316      6C756500 
 1317              	.LASF29:
 1318 04cf 57616974 		.ascii	"Waiting_drop\000"
 1318      696E675F 
ARM GAS  C:\Users\plod1602\AppData\Local\Temp\ccnss0Wu.s 			page 31


 1318      64726F70 
 1318      00
 1319              	.LASF77:
 1320 04dc 49544D5F 		.ascii	"ITM_RxBuffer\000"
 1320      52784275 
 1320      66666572 
 1320      00
 1321              	.LASF62:
 1322 04e9 66616E53 		.ascii	"fanState\000"
 1322      74617465 
 1322      00
 1323              	.LASF52:
 1324 04f2 6D617854 		.ascii	"maxTargetTemperature\000"
 1324      61726765 
 1324      7454656D 
 1324      70657261 
 1324      74757265 
 1325              	.LASF43:
 1326 0507 626F6F6C 		.ascii	"boolean\000"
 1326      65616E00 
 1327              		.ident	"GCC: (GNU Tools for ARM Embedded Processors) 4.8.4 20140526 (release) [ARM/embedded-4_8-br
